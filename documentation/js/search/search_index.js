var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/classes/Address.html",[0,0.068,1,2.192]],["body/classes/Address.html",[0,0.098,1,3.769,2,1.937,3,0.292,4,0.292,5,0.254,6,4.29,7,0.254,8,0.76,9,5.525,10,4.892,11,2.494,12,4.892,13,5.525,14,5.525,15,0.405,16,0.022,17,1.2,18,0.513,19,5.037,20,5.037,21,2.192,22,5.037,23,5.037,24,5.037,25,5.037,26,0.292,27,0.016,28,0.019,29,0.016]],["title/components/AppComponent.html",[30,0.258,31,0.799]],["body/components/AppComponent.html",[0,0.076,3,0.227,4,0.227,5,0.198,7,0.198,8,0.649,15,0.299,16,0.023,17,0.652,18,0.379,26,0.227,27,0.012,28,0.016,29,0.012,30,0.424,31,1.395,32,1.32,33,1.124,34,1.124,35,1.124,36,1.124,37,3.339,38,1.124,39,3.519,40,4.185,41,3.6,42,3.519,43,4.359,44,3.896,45,4.359,46,4.359,47,3.896,48,4.359,49,1.955,50,1.84,51,2.753,52,1.399,53,5.78,54,1.399,55,5.168,56,4.923,57,2.222,58,2.565,59,1.105,60,0.977,61,1.664,62,3.92,63,2.565,64,3.92,65,0.568,66,0.53,67,1.57,68,1.507,69,2.442,70,1.001,71,1.482,72,1.482,73,1.124,74,1.663,75,1.124,76,0.619,77,1.124,78,0.89,79,1.658,80,0.89,81,1.061,82,1.124,83,0.89,84,1.124,85,0.89,86,1.001,87,1.124,88,0.838,89,1.124,90,0.89,91,1.775,92,0.741,93,0.944,94,1.124,95,0.89,96,1.32,97,0.89,98,1.482,99,0.89,100,1.026,101,0.89,102,0.89,103,1.124,104,0.89,105,1.124,106,1.482,107,0.89,108,1.061,109,0.89,110,0.89,111,1.124,112,0.89,113,0.838,114,1.124,115,1.124]],["title/modules/AppModule.html",[116,2.397,117,2.397]],["body/modules/AppModule.html",[0,0.049,3,0.145,4,0.145,5,0.126,16,0.023,26,0.218,27,0.008,28,0.012,29,0.008,31,1.527,39,3.078,40,4.414,41,3.526,42,3.856,43,4.064,44,3.79,45,4.064,46,4.064,47,4.064,48,3.408,65,0.704,66,0.338,67,1.373,68,1.446,69,2.342,70,0.639,78,1.286,80,1.372,81,0.677,83,1.286,85,1.286,86,0.639,88,1.211,90,1.372,91,1.533,92,0.711,93,0.906,95,1.372,96,1.284,97,1.372,99,1.372,100,1.005,101,1.372,102,1.372,104,1.286,107,1.286,109,1.286,110,1.286,112,1.286,116,1.703,117,4.929,118,1.557,119,1.703,120,3.849,121,3.849,122,1.886,123,2.13,124,2.13,125,2.13,126,2.13,127,2.13,128,3.526,129,3.526,130,2.835,131,1.886,132,1.703,133,1.886,134,3.76,135,3.76,136,3.203,137,1.886,138,3.203,139,3.76,140,4.519,141,1.241,142,3.76,143,2.501,144,3.76,145,3.76,146,1.241,147,3.76,148,1.886,149,2.501,150,2.501,151,2.501,152,1.886,153,2.835,154,2.501,155,3.76,156,3.76,157,3.76,158,3.76,159,3.76,160,3.76,161,3.76,162,3.76,163,3.76,164,3.76,165,3.76,166,3.76,167,3.76,168,3.76,169,3.76,170,3.76,171,3.76,172,3.76,173,3.76,174,3.76,175,3.76,176,3.76,177,3.76,178,3.76,179,3.76,180,3.76,181,3.76,182,3.76,183,3.76,184,1.703,185,2.561,186,1.703,187,2.501,188,3.76,189,2.342,190,2.561,191,3.76,192,2.501,193,2.501,194,1.886,195,2.835,196,2.501,197,1.557,198,2.501,199,2.501,200,2.501,201,2.501,202,1.886,203,2.501,204,2.501,205,2.501,206,1.886,207,2.501,208,1.557,209,1.886,210,2.003,211,2.835,212,2.003,213,2.835,214,2.501,215,2.501,216,2.501,217,2.501,218,1.703,219,2.13,220,1.557,221,2.13,222,2.501,223,0.717,224,2.835,225,2.13,226,3.203,227,2.561,228,1.022,229,2.13,230,2.13,231,3.203,232,2.13,233,2.13,234,2.13,235,2.13,236,2.13,237,2.501,238,2.501,239,2.835,240,1.211]],["title/modules/AppRoutingModule.html",[116,2.397,241,2.653]],["body/modules/AppRoutingModule.html",[0,0.105,3,0.311,4,0.311,5,0.271,16,0.023,26,0.311,27,0.017,28,0.02,29,0.017,65,0.618,66,0.726,118,3.346,122,4.051,138,5.355,223,1.541,236,4.576,241,4.741,242,5.372,243,5.372,244,6.666,245,6.288,246,3.346,247,5.372]],["title/classes/Appointment.html",[0,0.068,92,0.666]],["body/classes/Appointment.html",[0,0.091,2,1.801,3,0.271,4,0.271,5,0.236,7,0.236,8,0.727,11,2.727,15,0.391,16,0.023,17,1.122,18,0.495,21,2.097,26,0.335,27,0.015,28,0.018,29,0.015,60,1.276,65,0.569,76,0.502,92,1.188,113,1.489,223,1.343,248,3.532,249,3.946,250,3.348,251,0.953,252,4.684,253,4.684,254,4.684,255,4.684,256,4.684,257,4.684,258,3.19,259,2.917,260,3.532,261,2.917,262,3.989,263,3.989]],["title/components/AppointmentComponent.html",[30,0.258,78,0.799]],["body/components/AppointmentComponent.html",[0,0.048,3,0.144,4,0.144,5,0.125,7,0.125,8,0.47,11,2.172,15,0.217,16,0.023,18,0.475,26,0.144,27,0.008,28,0.012,29,0.008,30,0.33,31,0.564,32,1.28,33,0.713,34,0.713,35,0.713,36,0.713,38,0.713,49,1.851,50,1.716,52,1.013,54,1.013,57,0.955,59,0.8,60,0.47,63,2.487,65,0.628,66,0.336,67,0.755,70,0.635,71,1.073,72,1.073,73,0.713,74,1.356,75,0.713,76,0.605,77,0.713,78,1.138,79,1.291,80,0.85,81,1.356,82,0.713,83,0.564,84,0.713,85,0.564,86,0.635,87,0.713,88,0.531,89,0.713,90,0.85,91,1.702,92,1.224,93,1.084,94,0.713,95,0.85,96,1.373,97,0.564,98,1.073,99,0.85,100,1.041,101,0.85,102,0.564,103,0.713,104,0.564,105,0.713,106,1.073,107,1.138,108,1.455,109,0.564,110,0.564,111,0.713,112,0.564,113,0.531,114,0.713,115,0.713,206,1.874,208,1.548,209,1.874,210,1.324,211,1.874,212,1.994,213,2.822,218,1.692,219,2.116,223,1.437,240,0.8,250,1.234,251,0.781,258,3.066,259,1.548,261,1.548,264,2.116,265,2.822,266,2.822,267,2.549,268,2.549,269,3.395,270,2.549,271,2.864,272,3.187,273,3.187,274,1.073,275,1.45,276,3.395,277,2.822,278,4.502,279,3.834,280,3.834,281,4.502,282,0.623,283,3.742,284,3.187,285,1.711,286,5.011,287,4.268,288,5.011,289,5.011,290,0.708,291,2.116,292,2.804,293,3.834,294,4.268,295,4.268,296,3.742,297,0.749,298,0.749,299,3.742,300,2.485,301,2.331,302,0.975,303,1.681,304,3.187,305,2.485,306,3.187,307,2.485,308,2.485,309,2.485,310,2.485,311,2.485,312,2.485,313,2.485,314,1.016,315,3.187,316,2.485,317,1.324,318,0.955,319,0.955,320,1.324,321,2.485,322,1.081,323,1.84,324,2.116,325,2.485,326,1.874,327,1.874,328,2.116,329,0.901,330,2.485,331,3.742,332,2.485,333,2.485,334,1.692,335,2.485,336,3.742,337,2.485,338,2.116,339,2.485,340,2.485,341,2.485,342,2.485,343,2.485,344,2.116,345,2.116,346,2.116,347,1.926,348,2.116,349,3.742,350,3.066,351,2.485,352,1.63,353,3.834,354,2.549,355,2.485,356,3.742,357,2.116,358,1.874,359,2.485,360,2.485,361,2.485,362,2.485,363,1.548,364,2.549,365,5.011,366,5.011,367,2.822,368,3.742,369,2.485,370,2.116,371,2.485,372,3.742,373,2.485,374,3.742,375,2.116,376,2.116,377,1.874,378,3.395,379,2.485,380,4.268,381,2.485,382,2.485,383,2.235,384,2.485,385,4.502,386,2.331,387,3.834,388,2.116,389,2.116,390,3.187,391,3.187,392,2.485]],["title/classes/AppointmentRecord.html",[0,0.068,249,2.021]],["body/classes/AppointmentRecord.html",[0,0.102,2,2.022,3,0.305,4,0.305,5,0.265,7,0.265,8,0.779,11,2.54,15,0.383,16,0.022,17,1.135,18,0.485,21,2.249,26,0.305,27,0.016,28,0.019,29,0.016,249,3.566,393,5.814,394,4.479,395,6.607,396,5.627,397,5.259,398,5.259,399,5.259]],["title/injectables/AppointmentService.html",[292,1.747,400,1.201]],["body/injectables/AppointmentService.html",[0,0.078,3,0.233,4,0.233,5,0.203,7,0.203,8,0.659,15,0.382,16,0.023,17,1.032,18,0.494,21,2.498,26,0.233,27,0.012,28,0.016,29,0.012,51,2.141,59,1.123,60,0.993,65,0.633,66,0.543,76,0.664,92,1.317,141,1.995,249,3.563,251,0.584,282,0.874,290,0.76,292,2.607,297,1.032,298,1.032,302,1.032,318,1.545,329,1.494,396,5.284,400,1.793,401,2.308,402,3.422,403,3.577,404,3.577,405,3.577,406,3.577,407,3.96,408,3.271,409,3.36,410,5.85,411,5.252,412,5.252,413,4.225,414,5.252,415,2.503,416,3.864,417,5.252,418,3.271,419,5.252,420,4.018,421,4.411,422,2.927,423,5.252,424,4.018,425,4.018,426,5.252,427,4.018,428,3.271,429,4.018,430,5.252,431,2.141,432,2.503,433,1.642,434,2.308,435,1.294,436,4.018,437,4.018,438,4.018,439,4.018]],["title/guards/AuthGuard.html",[440,2.653,441,2.653]],["body/guards/AuthGuard.html",[0,0.088,3,0.263,4,0.263,5,0.229,7,0.229,12,4.67,15,0.329,16,0.023,18,0.417,26,0.263,27,0.014,28,0.018,29,0.014,51,2.417,58,2.252,61,1.461,65,0.558,66,0.613,76,0.608,240,1.828,246,2.826,251,0.659,274,1.301,282,0.944,290,0.858,297,0.944,298,0.944,302,0.755,329,1.563,400,1.938,434,2.606,435,1.461,441,4.28,442,4.537,443,3.864,444,5.676,445,2.818,446,3.535,447,4.834,448,4.834,449,4.834,450,5.676,451,4.67,452,4.67,453,2.818,454,6.49,455,4.537,456,5.14,457,4.537,458,5.676,459,6.49,460,6.49,461,4.537,462,3.864,463,3.864,464,4.834,465,3.864,466,3.864,467,4.537,468,4.537,469,3.864,470,4.537]],["title/injectables/AuthenticationService.html",[400,1.201,471,2.192]],["body/injectables/AuthenticationService.html",[0,0.079,3,0.236,4,0.236,5,0.205,7,0.205,8,0.665,15,0.341,16,0.023,17,1.138,18,0.458,26,0.236,27,0.013,28,0.016,29,0.013,51,2.169,59,0.871,60,0.77,65,0.613,66,0.551,76,0.567,100,0.723,132,2.773,141,2.021,223,1.519,251,0.591,282,0.881,290,0.77,297,0.881,298,0.881,302,0.881,303,1.168,320,2.169,322,1.772,329,0.981,400,1.808,401,2.338,409,3.382,415,2.536,416,4.127,418,3.299,428,3.299,431,2.169,432,2.536,434,2.338,435,1.311,445,3.096,446,2.536,448,5.311,449,5.311,451,4.702,452,3.07,464,3.468,471,3.299,472,3.468,473,5.297,474,4.44,475,4.997,476,4.512,477,5.297,478,5.297,479,5.297,480,4.512,481,4.702,482,5.297,483,5.297,484,4.072,485,4.072,486,5.297,487,5.888,488,4.072,489,5.297,490,3.468,491,3.468,492,4.512,493,4.072,494,4.072,495,2.536,496,4.072,497,4.072,498,3.07,499,4.072,500,3.468,501,4.072,502,4.072,503,4.072,504,4.072,505,4.072]],["title/components/BottomSheetComponent.html",[30,0.258,80,0.799]],["body/components/BottomSheetComponent.html",[0,0.066,3,0.197,4,0.197,5,0.172,7,0.172,8,0.59,15,0.272,16,0.023,18,0.395,26,0.197,27,0.011,28,0.015,29,0.011,30,0.447,31,0.773,32,1.2,33,0.976,34,0.976,35,0.976,36,0.976,38,0.976,49,1.927,50,1.798,52,1.272,54,1.272,57,1.309,65,0.529,66,0.46,67,1.428,70,0.869,71,1.347,72,1.347,73,0.976,74,1.57,75,0.976,76,0.652,77,0.976,78,0.773,79,1.543,80,1.317,81,1.846,82,0.976,83,0.773,84,0.976,85,0.773,86,1.2,87,0.976,88,0.728,89,0.976,90,0.773,91,1.703,92,0.644,93,0.82,94,0.976,95,0.773,96,1.2,97,0.773,98,1.347,99,0.773,100,0.955,101,0.773,102,0.773,103,0.976,104,0.773,105,0.976,106,1.347,107,0.773,108,1.57,109,0.773,110,0.773,111,0.976,112,0.773,113,0.728,114,0.976,115,0.976,208,3.613,251,0.494,269,4.589,270,3.2,282,0.782,290,0.644,297,0.782,298,0.782,301,2.12,302,0.566,303,0.976,314,1.391,347,2.479,350,2.319,435,1.096,506,4.94,507,2.899,508,4.698,509,4.698,510,5.38,511,4.698,512,5.38,513,4.698,514,2.341,515,4.001,516,3.404,517,5.8,518,3.404,519,4.698,520,4.001,521,3.404,522,4.698,523,3.404,524,1.814,525,3.404,526,4.698,527,4.698,528,4.698,529,2.503,530,4.698,531,3.351,532,4.001,533,2.899,534,2.899,535,3.09,536,3.404,537,2.698,538,2.044,539,2.899,540,4.001,541,1.391,542,1.481,543,2.319,544,3.404,545,2.899,546,2.068,547,1.955,548,2.567,549,2.926,550,2.567,551,1.69]],["title/components/CalendarComponent.html",[30,0.258,83,0.799]],["body/components/CalendarComponent.html",[0,0.045,3,0.134,4,0.134,5,0.117,7,0.117,8,0.445,15,0.369,16,0.023,17,0.914,18,0.487,21,1.285,26,0.134,27,0.007,28,0.011,29,0.007,30,0.383,31,0.526,32,0.906,33,0.664,34,0.664,35,0.664,36,0.664,38,0.664,39,2.417,40,2.417,42,2.417,49,1.832,50,1.695,52,0.961,54,0.961,57,1.364,59,1.114,60,0.986,65,0.607,66,0.313,68,1.364,70,0.592,71,1.018,72,1.018,73,0.664,74,1.308,75,0.664,76,0.632,77,0.664,78,0.526,79,1.237,80,0.526,81,0.961,82,0.664,83,1.097,84,0.664,85,0.526,86,1.102,87,0.664,88,0.495,89,0.664,90,0.526,91,1.488,92,1.116,93,0.558,94,0.664,95,0.526,96,1.102,97,0.526,98,1.018,99,0.526,100,0.925,101,0.526,102,0.526,103,0.664,104,0.526,105,0.664,106,1.018,107,0.526,108,0.627,109,0.526,110,0.526,111,0.664,112,0.526,113,0.495,114,0.664,115,0.664,189,1.443,190,4.206,194,1.747,223,1.237,227,1.578,228,1.763,250,1.762,251,0.336,274,1.018,275,1.678,282,0.59,285,1.65,290,0.438,291,1.973,292,2.729,297,0.867,298,0.867,302,0.914,303,1.641,318,0.891,320,1.234,322,1.008,323,1.763,326,1.747,327,2.676,328,1.973,329,1.039,347,1.364,422,1.877,433,0.947,435,0.746,500,1.973,535,1.331,537,1.331,538,1.544,541,2.13,542,1.544,543,2.417,546,1.658,550,1.747,552,1.747,553,6.051,554,3.549,555,3.549,556,3.022,557,3.549,558,3.549,559,3.674,560,2.938,561,4.313,562,3.549,563,5.211,564,4.313,565,4.313,566,3.674,567,4.313,568,4.313,569,5.211,570,4.313,571,4.834,572,3.549,573,3.549,574,3.549,575,3.549,576,3.549,577,2.317,578,3.549,579,4.682,580,2.317,581,3.549,582,2.317,583,2.317,584,3.549,585,2.994,586,2.317,587,2.317,588,3.549,589,2.317,590,2.317,591,1.647,592,2.417,593,2.317,594,2.676,595,2.317,596,2.317,597,4.313,598,2.317,599,2.676,600,2.317,601,2.317,602,3.549,603,2.317,604,2.317,605,1.234,606,1.234,607,2.317,608,2.317,609,2.317,610,2.317,611,2.317,612,2.317,613,2.317,614,2.038,615,1.747,616,1.234,617,2.002,618,1.973,619,3.674,620,1.973,621,1.973,622,1.973,623,1.973,624,1.973,625,1.973,626,1.973,627,2.317,628,2.317,629,1.747,630,2.317,631,2.317,632,2.317,633,2.317,634,2.317,635,2.317,636,1.973,637,1.747,638,2.317,639,1.973,640,3.549,641,2.317,642,2.317,643,2.317,644,2.317,645,3.549,646,2.317,647,2.317,648,3.549,649,3.549,650,2.317,651,2.317,652,2.317,653,3.549,654,2.317,655,2.317,656,2.317,657,2.317,658,3.022,659,3.549,660,3.022,661,3.549,662,2.317,663,3.549,664,3.549,665,3.549,666,3.549,667,3.549,668,2.002,669,2.141,670,2.417,671,2.317,672,1.544,673,1.15,674,1.647,675,1.762,676,1.331,677,1.331,678,2.317,679,1.331,680,1.747,681,1.008,682,2.317,683,1.973,684,2.317,685,1.443,686,1.747,687,2.21,688,1.973,689,2.317,690,1.973,691,2.317]],["title/components/ContentCardComponent.html",[30,0.258,85,0.799]],["body/components/ContentCardComponent.html",[0,0.058,3,0.171,4,0.171,5,0.149,7,0.149,8,0.534,15,0.316,16,0.023,17,0.708,18,0.441,26,0.171,27,0.009,28,0.013,29,0.009,30,0.424,31,0.672,32,1.392,33,0.849,34,0.849,35,0.849,36,0.849,38,0.849,49,1.896,50,1.763,52,1.152,54,1.152,57,2.383,58,2.113,59,0.91,60,0.805,61,1.371,65,0.49,66,0.4,70,0.756,71,1.221,72,1.221,73,0.849,74,1.476,75,0.849,76,0.584,77,0.849,78,0.672,79,1.43,80,0.672,81,1.349,82,0.849,83,0.672,84,0.849,85,1.365,86,1.728,87,0.849,88,0.633,89,0.849,90,0.672,91,1.628,92,0.56,93,1.201,94,0.849,95,0.672,96,1.087,97,0.672,98,1.221,99,0.672,100,0.968,101,0.672,102,0.672,103,0.849,104,0.672,105,0.849,106,1.221,107,0.672,108,0.801,109,0.672,110,0.672,111,0.849,112,0.672,113,0.633,114,0.849,115,0.849,148,2.232,202,4.673,251,0.43,267,2.899,282,0.708,290,0.56,297,0.492,298,0.492,302,0.492,303,0.849,320,2.656,322,1.288,329,1.025,352,1.072,377,4.111,406,2.899,435,0.953,537,1.7,538,1.288,543,2.899,546,1.138,547,2.863,549,1.843,550,2.232,551,1.469,556,3.626,605,2.904,606,2.268,669,1.469,672,1.852,674,1.976,679,1.7,681,2.372,685,1.843,687,1.843,692,5.278,693,2.521,694,5.451,695,4.257,696,4.257,697,3.626,698,3.21,699,3.626,700,3.626,701,4.643,702,4.257,703,4.943,704,4.985,705,4.257,706,4.985,707,4.643,708,2.268,709,4.985,710,2.651,711,4.985,712,2.521,713,5.122,714,2.96,715,2.96,716,2.96,717,2.96,718,2.96,719,4.257,720,4.246,721,4.257,722,4.257,723,4.257,724,4.257,725,2.651,726,4.257,727,4.111,728,4.257,729,2.96,730,4.257,731,2.113,732,4.257,733,1.288,734,2.521,735,2.96,736,2.96,737,2.96,738,3.626,739,4.257,740,2.96,741,4.246,742,4.985,743,5.451,744,2.96,745,2.96,746,2.232,747,1.138,748,2.96,749,3.626]],["title/classes/CustomDateFormatter.html",[0,0.068,560,2.397]],["body/classes/CustomDateFormatter.html",[0,0.093,2,1.835,3,0.276,4,0.276,5,0.241,7,0.241,15,0.339,16,0.023,17,1.099,18,0.43,26,0.276,27,0.015,28,0.018,29,0.015,65,0.576,76,0.627,100,0.847,152,3.6,189,2.973,190,3.251,282,0.974,297,0.974,298,0.974,302,0.974,329,1.411,514,3.003,559,5.397,560,3.989,566,5.628,579,5.397,585,3.204,750,5.397,751,4.066,752,5.858,753,6.337,754,4.774,755,6.992,756,4.774,757,4.774,758,4.774,759,4.774,760,4.774,761,4.066,762,4.774]],["title/classes/DateConfig.html",[0,0.068,763,2.397]],["body/classes/DateConfig.html",[0,0.089,2,1.262,3,0.19,4,0.19,5,0.166,7,0.166,8,0.575,15,0.348,16,0.023,17,0.999,18,0.441,26,0.19,27,0.01,28,0.014,29,0.01,30,0.387,41,2.853,49,0.888,50,0.838,52,0.888,54,0.888,58,2.835,61,1.057,65,0.59,66,0.444,67,0.997,68,1.761,69,2.044,74,1.626,88,0.702,100,1.014,146,1.629,184,2.235,185,2.235,186,2.235,223,0.941,239,3.978,240,1.699,268,2.235,274,0.941,275,1.475,285,1.12,317,1.749,352,1.659,435,1.057,514,2.778,585,2.963,592,2.235,594,2.475,599,3.978,605,2.811,606,2.811,669,1.629,733,2.879,747,1.262,763,3.889,764,2.235,765,4.494,766,4.494,767,4.494,768,4.494,769,4.494,770,5.115,771,3.282,772,3.282,773,3.282,774,5.635,775,3.282,776,3.282,777,2.475,778,3.978,779,2.853,780,2.795,781,3.454,782,3.901,783,2.795,784,3.889,785,2.795,786,2.795,787,2.795,788,2.795,789,3.454,790,2.795,791,2.795,792,2.795,793,2.795,794,3.901,795,2.795,796,2.795,797,2.795,798,2.475,799,2.795,800,2.795,801,2.795,802,2.795,803,2.795,804,2.795,805,2.475,806,2.795,807,2.795,808,2.795,809,2.795,810,2.795,811,2.795,812,2.795,813,2.795,814,2.795,815,4.494,816,2.795,817,2.795,818,2.795,819,2.795,820,2.795,821,2.795,822,2.795,823,2.795,824,2.795,825,2.795,826,2.795,827,2.795,828,3.901,829,3.901,830,2.795,831,3.901,832,3.901,833,3.901,834,2.795,835,2.795,836,2.795,837,3.901,838,2.795,839,2.795,840,2.795,841,4.863,842,2.795,843,2.795,844,4.863,845,3.901,846,3.901,847,2.795,848,2.795,849,2.795,850,2.795,851,2.795,852,2.795,853,2.795,854,2.795,855,2.795,856,2.795,857,2.795,858,2.795,859,2.795,860,2.795,861,2.795,862,2.795]],["title/components/DatetimepickerComponent.html",[30,0.258,88,0.753]],["body/components/DatetimepickerComponent.html",[0,0.07,3,0.137,4,0.137,5,0.12,7,0.12,8,0.453,15,0.391,16,0.023,17,1.051,18,0.499,26,0.137,27,0.007,28,0.011,29,0.007,30,0.386,31,0.538,32,0.922,33,0.679,34,0.679,35,0.679,36,0.679,38,0.679,41,3.045,49,1.838,50,1.702,52,0.977,54,0.977,58,2.613,59,0.935,60,0.827,61,1.162,65,0.517,66,0.32,67,0.72,68,1.388,69,2.248,70,0.605,71,1.035,72,1.035,73,0.679,74,1.648,75,0.679,76,0.594,77,0.679,78,0.538,79,1.254,80,0.538,81,0.641,82,0.679,83,0.538,84,0.679,85,0.538,86,0.605,87,0.679,88,1.046,89,0.679,90,0.538,91,1.501,92,0.448,93,0.571,94,0.679,95,0.538,96,0.922,97,0.538,98,1.035,99,0.538,100,1.024,101,0.538,102,0.538,103,0.679,104,0.538,105,0.679,106,1.035,107,0.538,108,0.641,109,0.538,110,0.538,111,0.679,112,0.538,113,0.507,114,0.679,115,0.679,146,1.176,184,1.613,185,1.613,186,1.613,223,0.679,239,2.722,240,1.695,251,0.344,268,2.458,274,1.035,275,1.408,282,0.6,285,1.669,290,0.448,297,0.727,298,0.727,302,0.727,303,1.254,317,1.262,352,1.771,435,0.763,514,3.01,585,2.931,592,1.613,594,1.786,599,2.722,605,2.804,606,2.33,669,1.792,708,1.923,710,2.248,733,2.748,747,0.911,763,3.33,764,1.613,765,2.018,766,2.018,767,2.018,768,2.018,769,2.018,770,4.165,774,4.911,777,1.786,778,3.969,779,2.723,780,3.724,781,2.722,782,3.724,783,3.074,784,4.048,785,3.074,786,3.074,787,3.074,788,3.724,789,3.687,790,3.724,791,3.724,792,3.724,793,3.724,794,4.165,795,3.724,796,3.074,797,3.074,798,2.722,799,3.724,800,3.724,801,3.724,802,3.724,803,3.074,804,3.074,805,2.722,806,3.724,807,3.724,808,3.724,809,3.724,810,3.724,811,3.724,812,3.074,813,3.074,814,3.074,815,4.723,816,3.074,817,3.074,818,3.074,819,3.074,820,3.074,821,3.074,822,3.074,823,3.074,824,2.018,825,2.018,826,2.018,827,2.018,828,3.074,829,3.074,830,2.018,831,3.074,832,3.074,833,3.074,834,2.018,835,2.018,836,2.018,837,3.074,838,2.018,839,2.018,840,2.018,841,4.165,842,2.018,843,2.018,844,4.165,845,3.074,846,3.074,847,2.018,848,2.018,849,3.074,850,2.018,851,2.018,852,2.018,853,2.018,854,2.018,855,2.018,856,2.018,857,2.018,858,2.018,859,2.018,860,2.018,861,2.018,862,2.018,863,3.609,864,3.609,865,2.369,866,2.369,867,2.369,868,2.369,869,2.369,870,2.369,871,2.369,872,2.369,873,2.369,874,2.369,875,2.369,876,2.369,877,2.369,878,2.369,879,2.369,880,2.369,881,2.369,882,2.369,883,2.369,884,2.369,885,2.369]],["title/classes/Disease.html",[0,0.068,886,2.653]],["body/classes/Disease.html",[0,0.103,2,2.038,3,0.307,4,0.307,5,0.267,7,0.267,8,0.783,11,2.548,15,0.384,16,0.022,17,1.138,18,0.487,21,2.259,26,0.307,27,0.016,28,0.019,29,0.016,76,0.71,251,0.963,886,4.703,887,4.514,888,5.3,889,5.3,890,5.3]],["title/interceptors/ErrorInterceptor.html",[128,2.192,891,2.397]],["body/interceptors/ErrorInterceptor.html",[0,0.086,3,0.257,4,0.257,5,0.224,7,0.224,15,0.324,16,0.023,18,0.411,26,0.257,27,0.014,28,0.017,29,0.014,65,0.653,66,0.6,76,0.6,128,3.488,132,3.814,141,2.205,223,1.274,251,0.645,274,1.274,282,0.932,290,0.84,297,0.932,298,0.932,302,0.739,319,1.708,322,1.932,329,1.349,400,1.912,409,2.551,422,2.669,433,1.815,435,1.43,445,2.78,446,3.488,453,2.205,471,4.223,481,3.349,892,3.783,893,3.783,894,5.6,895,3.814,896,5.6,897,4.625,898,5.6,899,6.441,900,5.6,901,4.77,902,4.441,903,4.441,904,4.77,905,5.486,906,5.224,907,5.486,908,4.441,909,3.783,910,4.77,911,4.441,912,4.441,913,4.441,914,4.441,915,3.783,916,3.783,917,4.441,918,3.783,919,4.441,920,4.441,921,4.441,922,4.441]],["title/components/FormAppointmentAddNoteComponent.html",[30,0.258,90,0.799]],["body/components/FormAppointmentAddNoteComponent.html",[0,0.05,3,0.15,4,0.15,5,0.131,7,0.131,8,0.484,15,0.354,16,0.023,17,0.642,18,0.458,26,0.15,27,0.008,28,0.012,29,0.008,30,0.339,31,0.588,32,0.985,33,0.742,34,0.742,35,0.742,36,0.742,38,0.742,49,1.862,50,1.727,52,1.044,54,1.044,57,0.995,59,0.987,60,0.872,61,0.833,65,0.503,66,0.35,67,0.786,70,0.661,71,1.107,72,1.107,73,0.742,74,1.384,75,0.742,76,0.614,77,0.742,78,0.588,79,1.323,80,0.588,81,1.249,82,0.742,83,0.588,84,0.742,85,0.588,86,0.985,87,0.742,88,0.553,89,0.742,90,1.161,91,1.862,92,1.352,93,1.715,94,0.742,95,0.588,96,0.985,97,0.588,98,1.107,99,0.588,100,1.055,101,0.588,102,0.588,103,0.742,104,0.588,105,0.742,106,1.107,107,0.588,108,0.7,109,0.588,110,0.588,111,0.742,112,0.588,113,0.825,114,0.742,115,0.742,218,4.327,228,1.577,240,1.647,249,2.937,251,0.376,271,2.056,274,1.107,275,1.486,282,0.642,285,1.746,290,0.73,292,2.95,297,0.642,298,0.642,302,0.767,303,1.323,314,1.058,318,0.995,319,0.995,323,1.577,347,1.966,352,2.077,353,3.286,354,2.628,383,2.29,421,1.951,453,1.915,495,1.612,514,2.007,524,1.379,529,2.056,535,2.216,538,2.38,541,2.09,542,1.679,546,2.103,548,2.909,551,2.538,605,2.724,606,2.056,616,1.379,617,2.141,668,1.201,672,1.679,673,1.285,674,2.141,675,2.29,676,1.486,677,1.486,681,1.679,710,2.403,731,1.915,747,0.995,923,3.154,924,2.204,925,2.909,926,6.353,927,4.613,928,3.858,929,2.649,930,2.628,931,3.483,932,3.929,933,1.486,934,2.937,935,2.588,936,2.588,937,2.628,938,3.483,939,2.588,940,2.628,941,2.588,942,2.588,943,1.791,944,2.649,945,2.588,946,2.216,947,2.588,948,2.216,949,2.588,950,2.588,951,1.486,952,2.204,953,1.763,954,2.588,955,2.588,956,1.763,957,2.588,958,1.612,959,1.763,960,1.612,961,1.763,962,1.951,963,2.403,964,1.612,965,1.612,966,1.951,967,2.204,968,1.763,969,1.126,970,1.951]],["title/components/FormDeleteAppointmentComponent.html",[30,0.258,95,0.799]],["body/components/FormDeleteAppointmentComponent.html",[0,0.05,3,0.221,4,0.148,5,0.129,7,0.129,8,0.479,15,0.33,16,0.023,17,0.844,18,0.456,26,0.148,27,0.008,28,0.012,29,0.008,30,0.336,31,0.579,32,0.974,33,0.731,34,0.731,35,0.731,36,0.731,38,0.731,49,1.858,50,1.723,52,1.033,54,1.033,57,0.98,59,1.162,60,1.028,61,1.229,63,2.52,65,0.449,66,0.345,67,0.775,70,0.651,71,1.094,72,1.094,73,0.731,74,1.374,75,0.731,76,0.582,77,0.731,78,0.579,79,1.311,80,0.579,81,1.033,82,0.731,83,0.579,84,0.731,85,0.579,86,0.974,87,0.731,88,0.545,89,0.731,90,0.579,91,1.858,92,1.15,93,0.614,94,0.731,95,1.152,96,1.82,97,0.579,98,1.094,99,0.579,100,0.812,101,0.579,102,0.579,103,0.731,104,0.579,105,0.731,106,1.094,107,0.579,108,0.69,109,0.579,110,0.579,111,0.731,112,0.579,113,0.545,114,0.731,115,0.731,212,3.372,228,1.559,240,1.634,251,0.37,271,2.033,274,1.094,275,1.472,276,3.448,277,2.877,282,0.635,285,1.733,290,0.722,292,2.935,297,0.635,298,0.635,302,0.761,303,1.311,314,1.042,319,0.98,323,1.869,324,2.171,347,1.951,352,2.141,363,1.588,370,4.323,383,2.27,421,3.827,453,1.894,495,1.588,514,1.989,524,1.358,529,2.033,538,2.482,541,2.074,542,1.66,546,1.758,551,2.52,591,1.771,616,1.358,617,2.122,668,1.183,672,1.109,673,1.266,674,2.122,675,2.27,676,1.464,677,1.464,681,1.66,708,2.033,731,1.894,733,1.989,747,0.98,923,3.142,925,2.877,929,2.626,930,2.599,931,3.457,933,1.464,934,2.915,937,2.599,938,3.114,940,2.599,943,1.771,944,2.626,946,2.191,948,2.191,951,1.464,953,2.599,956,1.736,958,1.588,959,2.599,960,1.588,961,1.736,962,1.922,963,2.376,964,1.588,965,1.588,968,1.736,969,1.109,971,1.736,972,3.25,973,3.25,974,3.25,975,3.815,976,3.25,977,4.572,978,3.114,979,3.457,980,2.171,981,2.549,982,2.549,983,2.549,984,2.549,985,2.171,986,2.549,987,2.171,988,2.549,989,2.599,990,2.599,991,2.549,992,2.549,993,2.549,994,2.549,995,1.922,996,2.549,997,1.736,998,2.171,999,2.171,1000,2.171,1001,1.736,1002,1.922,1003,3.25,1004,3.25,1005,3.815,1006,2.599,1007,3.815,1008,3.25,1009,2.599]],["title/components/FormDeletePatientComponent.html",[30,0.258,97,0.799]],["body/components/FormDeletePatientComponent.html",[0,0.049,3,0.146,4,0.146,5,0.127,7,0.127,8,0.475,15,0.329,16,0.023,17,0.84,18,0.455,26,0.146,27,0.008,28,0.012,29,0.008,30,0.333,31,0.572,32,0.966,33,0.723,34,0.723,35,0.723,36,0.723,38,0.723,49,1.855,50,1.72,52,1.024,54,1.024,57,0.969,59,1.157,60,1.023,61,1.219,65,0.446,66,0.341,67,0.766,70,0.644,71,1.085,72,1.085,73,0.723,74,1.366,75,0.723,76,0.608,77,0.723,78,0.572,79,1.303,80,0.572,81,1.024,82,0.723,83,0.572,84,0.723,85,0.572,86,0.966,87,0.723,88,0.539,89,0.723,90,0.572,91,1.872,92,0.477,93,0.607,94,0.723,95,0.572,96,1.818,97,1.146,98,1.085,99,0.572,100,0.806,101,0.572,102,0.572,103,0.723,104,0.572,105,0.723,106,1.085,107,0.572,108,0.682,109,0.572,110,0.572,111,0.723,112,0.572,113,1.325,114,0.723,115,0.723,210,3.363,228,1.546,240,1.625,251,0.366,271,2.016,274,1.085,275,1.463,282,0.629,285,1.723,290,0.716,297,0.629,298,0.629,302,0.756,303,1.303,314,1.03,319,0.969,323,1.856,334,3.438,347,1.941,352,2.194,363,3.369,364,2.577,367,3.806,383,2.255,386,2.829,453,2.506,495,1.57,514,1.976,524,1.343,529,2.016,538,2.471,541,2.063,542,1.646,546,1.746,551,2.506,591,1.756,616,1.343,617,2.108,668,1.17,672,1.097,673,1.252,674,2.108,675,2.255,676,1.448,677,1.448,681,1.646,708,2.016,731,1.878,733,1.976,747,0.969,923,3.134,925,2.853,929,2.608,930,2.577,931,3.438,933,1.448,934,2.899,937,2.577,938,3.093,940,2.577,943,1.756,944,2.608,946,2.173,948,2.173,951,1.448,952,2.147,953,2.577,956,1.717,958,1.57,959,2.577,960,1.57,961,1.717,962,1.901,963,2.357,964,1.57,965,1.57,966,1.901,968,1.717,969,1.097,972,3.223,973,3.223,974,3.223,976,3.223,978,3.093,979,3.438,989,2.577,990,2.577,995,1.901,997,1.717,998,2.147,999,2.147,1000,2.147,1001,1.717,1002,1.901,1003,3.223,1004,3.223,1006,3.438,1008,3.223,1009,2.577,1010,1.717,1011,3.784,1012,3.425,1013,2.853,1014,2.563,1015,2.521,1016,2.521,1017,2.521,1018,2.521,1019,2.147,1020,2.147,1021,2.521,1022,2.147,1023,2.521,1024,1.901,1025,1.901,1026,2.521,1027,2.147,1028,3.223]],["title/components/FormNewAppointmentComponent.html",[30,0.258,99,0.799]],["body/components/FormNewAppointmentComponent.html",[0,0.037,3,0.177,4,0.111,5,0.097,7,0.097,8,0.384,15,0.367,16,0.023,17,0.845,18,0.481,26,0.111,27,0.006,28,0.01,29,0.006,30,0.32,31,0.435,32,0.782,33,0.55,34,0.55,35,0.55,36,0.55,38,0.55,49,1.775,50,1.634,52,0.829,54,0.829,57,0.737,58,2.522,59,1.22,60,1.168,61,1.783,63,2.165,65,0.499,66,0.259,67,0.583,68,1.469,70,0.49,71,0.878,72,0.878,73,0.55,74,1.18,75,0.55,76,0.593,77,0.55,78,0.435,79,1.096,80,0.435,81,0.829,82,0.55,83,0.435,84,0.55,85,0.435,86,0.782,87,0.55,88,0.41,89,0.55,90,0.435,91,1.827,92,1.221,93,0.462,94,0.55,95,0.435,96,0.782,97,0.435,98,0.878,99,0.99,100,1.279,101,0.435,102,0.435,103,0.55,104,0.435,105,0.55,106,0.878,107,0.435,108,0.519,109,0.435,110,0.435,111,0.55,112,0.435,113,0.817,114,0.55,115,0.55,146,0.952,212,3.518,223,0.55,228,1.251,240,1.783,250,1.897,251,0.692,271,1.631,274,0.878,275,1.23,276,2.881,277,2.308,282,0.509,285,1.489,290,0.579,292,2.646,297,0.725,298,0.725,301,1.907,302,0.793,303,1.367,314,0.784,318,0.737,319,0.737,323,1.782,329,1.05,334,2.97,347,1.832,352,2.267,358,2.308,383,1.897,386,2.379,453,2.748,495,1.907,514,1.662,524,1.022,529,1.631,538,2.646,541,1.782,542,1.332,546,1.469,551,2.165,591,1.773,605,2.323,606,1.631,614,1.758,616,1.022,617,1.773,668,0.89,672,0.835,673,0.952,674,1.773,675,1.897,676,1.102,677,1.102,681,1.332,708,1.631,710,1.907,731,1.52,733,1.897,747,0.737,761,3.254,779,2.379,784,2.602,923,3.278,929,2.194,930,2.085,931,2.97,932,3.254,933,1.102,934,2.505,937,2.085,938,3.246,940,2.085,943,1.773,944,2.194,946,1.758,948,1.758,951,1.102,953,2.602,956,1.306,958,1.907,959,3.77,960,1.907,961,2.085,963,1.907,964,1.195,965,1.195,966,2.308,967,1.634,968,1.306,969,0.835,971,1.306,980,1.634,985,1.634,987,1.634,989,2.085,990,2.085,995,2.308,997,3.46,1006,2.085,1009,2.085,1014,2.319,1024,1.446,1025,1.446,1027,2.607,1029,2.607,1030,2.607,1031,4.059,1032,3.82,1033,3.061,1034,3.061,1035,3.82,1036,1.918,1037,1.918,1038,1.918,1039,1.918,1040,1.918,1041,3.061,1042,1.918,1043,1.918,1044,3.061,1045,1.918,1046,1.918,1047,1.918,1048,1.918,1049,1.918,1050,2.607,1051,1.918,1052,1.918,1053,1.918,1054,1.918,1055,2.308,1056,1.634,1057,1.634,1058,1.918,1059,1.918,1060,1.918,1061,2.607,1062,1.918,1063,1.634,1064,1.634,1065,3.714,1066,1.918,1067,3.061,1068,3.061,1069,3.061,1070,4.361,1071,3.061,1072,3.061,1073,1.918,1074,1.918,1075,1.918,1076,1.918,1077,1.918,1078,1.918,1079,1.918,1080,1.918,1081,1.918,1082,1.918,1083,1.918,1084,1.918,1085,2.607,1086,3.714,1087,1.918,1088,2.607,1089,2.607]],["title/components/FormNewPatientComponent.html",[30,0.258,101,0.799]],["body/components/FormNewPatientComponent.html",[0,0.035,1,2.276,3,0.267,4,0.104,5,0.091,7,0.091,8,0.364,9,2.472,10,2.189,12,2.189,13,2.472,14,2.472,15,0.346,16,0.023,18,0.472,26,0.104,27,0.006,28,0.009,29,0.006,30,0.308,31,0.408,32,0.741,33,0.515,34,0.515,35,0.515,36,0.515,38,0.515,49,1.754,50,1.611,52,0.786,54,0.786,58,2.084,59,1.11,60,0.932,61,1.352,63,2.448,65,0.51,66,0.243,67,0.545,68,1.116,70,0.458,71,0.832,72,0.832,73,0.515,74,1.136,75,0.515,76,0.494,77,0.515,78,0.408,79,1.048,80,0.408,81,0.486,82,0.515,83,0.408,84,0.515,85,0.408,86,0.741,87,0.515,88,0.384,89,0.515,90,0.408,91,1.754,92,1.165,93,0.432,94,0.515,95,0.408,96,0.741,97,0.408,98,0.832,99,0.408,100,1.274,101,0.953,102,0.408,103,0.515,104,0.408,105,0.515,106,0.832,107,0.408,108,0.486,109,0.408,110,0.408,111,0.515,112,0.408,113,1.442,114,0.515,115,0.515,146,0.891,210,3.452,223,0.832,228,1.493,240,1.177,250,1.814,251,0.261,259,1.118,261,1.118,271,1.546,274,0.832,275,1.177,282,0.483,285,1.433,290,0.549,297,0.483,298,0.483,302,0.767,303,1.322,314,1.186,317,0.956,318,0.69,319,0.69,323,2.121,329,1.188,347,1.772,352,1.323,357,1.529,363,1.808,383,1.814,514,1.59,524,0.956,541,2.015,542,1.59,546,1.116,547,1.031,548,1.353,614,1.667,637,2.189,658,3.575,660,4.199,669,2.288,670,1.222,674,1.347,679,1.031,685,1.808,686,1.353,687,1.808,725,1.118,727,1.353,731,1.814,747,0.69,779,2.87,923,3.217,929,2.099,933,1.031,934,2.411,943,1.347,944,1.667,946,1.667,948,1.667,951,1.031,965,1.118,969,0.781,978,2.489,979,2.859,1001,2.859,1010,1.222,1012,2.755,1013,2.189,1014,2.258,1019,1.529,1020,1.529,1022,1.529,1029,2.472,1030,2.472,1031,3.925,1050,2.472,1055,3.913,1056,1.529,1061,5.088,1063,1.529,1064,1.529,1065,2.472,1085,1.529,1090,2.902,1091,3.654,1092,3.654,1093,3.654,1094,4.609,1095,4.197,1096,4.197,1097,2.902,1098,4.197,1099,2.902,1100,3.654,1101,3.654,1102,2.902,1103,1.795,1104,1.795,1105,2.902,1106,1.795,1107,2.902,1108,1.795,1109,1.795,1110,1.795,1111,1.795,1112,1.795,1113,1.795,1114,1.795,1115,3.654,1116,2.902,1117,1.795,1118,1.795,1119,1.795,1120,1.795,1121,1.795,1122,1.222,1123,1.795,1124,2.902,1125,1.795,1126,1.353,1127,1.795,1128,1.795,1129,1.795,1130,1.795,1131,2.902,1132,1.353,1133,1.795,1134,1.795,1135,1.795,1136,2.902,1137,1.795,1138,2.902,1139,1.795,1140,1.353,1141,1.795,1142,1.977,1143,1.795,1144,1.795,1145,2.472,1146,2.902,1147,1.795,1148,1.795,1149,3.654,1150,2.189,1151,2.902,1152,1.795,1153,3.575,1154,2.902,1155,1.795,1156,4.609,1157,1.795,1158,1.795,1159,2.902,1160,3.654,1161,1.795,1162,1.795,1163,1.795,1164,2.902,1165,1.795,1166,2.902,1167,1.795,1168,1.795,1169,3.654,1170,1.795,1171,1.795,1172,1.795,1173,1.795,1174,2.902,1175,1.795,1176,3.654,1177,1.795,1178,1.795,1179,1.795,1180,2.902,1181,2.902,1182,1.795,1183,3.575,1184,4.197,1185,2.902,1186,1.795,1187,1.795,1188,2.472,1189,2.902,1190,2.902,1191,2.902,1192,2.902,1193,2.902,1194,4.197,1195,2.902,1196,2.902,1197,2.902,1198,2.902,1199,2.902,1200,2.902,1201,2.902,1202,2.902,1203,2.902,1204,2.902,1205,2.902,1206,2.902,1207,2.902,1208,2.902,1209,2.902,1210,2.902,1211,2.902,1212,2.902,1213,2.902,1214,2.902,1215,4.197,1216,2.902,1217,2.902,1218,2.902,1219,2.902,1220,2.902,1221,2.902,1222,2.902,1223,2.472,1224,2.902,1225,2.902,1226,2.902,1227,2.902,1228,1.529,1229,1.353,1230,1.795,1231,1.795,1232,1.977,1233,2.472,1234,3.654,1235,1.353,1236,1.795]],["title/components/FormNewPrescriptionComponent.html",[30,0.258,102,0.799]],["body/components/FormNewPrescriptionComponent.html",[0,0.035,3,0.103,4,0.103,5,0.09,7,0.09,8,0.362,15,0.351,16,0.023,17,0.818,18,0.471,26,0.103,27,0.006,28,0.009,29,0.006,30,0.267,31,0.405,32,0.737,33,0.511,34,0.511,35,0.511,36,0.511,38,0.511,49,1.752,50,1.609,52,0.781,54,0.781,57,1.11,59,1.191,60,1.128,61,1.583,65,0.547,66,0.241,67,0.542,68,1.11,70,0.455,71,0.828,72,1.043,73,0.511,74,1.132,75,0.511,76,0.627,77,0.511,78,0.405,79,1.043,80,0.405,81,0.781,82,0.511,83,0.405,84,0.511,85,0.405,86,0.929,87,0.511,88,0.381,89,0.511,90,0.405,91,1.752,92,0.337,93,0.876,94,0.511,95,0.405,96,1.068,97,0.405,98,0.828,99,0.405,100,1.271,101,0.405,102,0.949,103,0.511,104,0.405,105,0.511,106,0.828,107,0.405,108,0.483,109,0.405,110,0.405,111,0.511,112,0.405,113,0.778,114,0.511,115,0.511,146,0.885,220,4.031,223,0.828,228,1.18,240,1.347,274,0.828,275,1.171,282,0.48,285,1.427,290,0.546,297,0.696,298,0.696,302,0.818,303,1.043,314,0.729,318,0.686,319,0.686,320,0.95,322,0.776,323,2.514,326,1.345,327,1.345,329,1.106,338,2.459,347,1.608,352,1.663,354,2.848,383,1.806,386,2.266,422,0.776,433,0.729,453,1.806,514,1.583,524,0.95,529,1.538,531,1.111,535,2.638,538,1.819,541,1.709,542,1.256,546,1.99,547,1.024,549,1.798,551,2.44,585,0.828,591,2.132,614,1.658,616,0.95,617,1.34,629,2.177,668,1.34,670,1.215,672,1.583,673,0.885,674,2.132,675,2.28,676,2.089,677,2.089,679,1.024,680,1.345,681,1.256,687,1.111,703,1.345,708,1.538,731,1.433,733,1.583,746,2.177,747,1.11,778,1.345,779,2.266,784,1.966,789,1.345,895,1.215,923,3.213,929,2.089,933,1.024,934,2.401,943,2.132,944,1.658,946,1.658,948,1.658,951,1.024,958,1.111,969,1.819,978,2.478,979,2.848,989,1.215,990,1.215,1001,1.215,1006,1.966,1009,1.966,1014,2.252,1055,3.153,1057,3.098,1086,2.459,1089,2.459,1132,1.345,1183,1.519,1188,1.519,1223,1.519,1229,2.743,1232,3.128,1233,3.098,1235,1.345,1237,1.345,1238,3.714,1239,3.638,1240,2.887,1241,3.638,1242,4.593,1243,3.638,1244,3.638,1245,3.638,1246,3.638,1247,2.887,1248,4.187,1249,4.181,1250,2.887,1251,4.181,1252,2.887,1253,3.525,1254,2.887,1255,1.783,1256,2.887,1257,3.769,1258,1.783,1259,2.887,1260,1.783,1261,2.887,1262,1.783,1263,2.887,1264,1.783,1265,1.783,1266,2.887,1267,1.783,1268,1.783,1269,1.783,1270,2.887,1271,1.783,1272,2.848,1273,1.783,1274,1.783,1275,1.783,1276,1.783,1277,1.783,1278,1.783,1279,1.783,1280,1.783,1281,1.783,1282,2.887,1283,2.887,1284,1.783,1285,2.887,1286,1.783,1287,1.783,1288,1.783,1289,1.783,1290,1.783,1291,2.887,1292,1.783,1293,1.783,1294,1.783,1295,1.783,1296,1.783,1297,1.783,1298,1.783,1299,1.783,1300,1.783,1301,1.519,1302,2.887,1303,1.783,1304,1.783,1305,4.181,1306,1.783,1307,1.783,1308,1.345,1309,2.887,1310,1.783,1311,1.783,1312,4.181,1313,1.783,1314,1.345,1315,1.783,1316,1.519,1317,1.783,1318,1.783,1319,1.345,1320,1.783,1321,1.783,1322,2.887,1323,1.783,1324,1.783,1325,2.887,1326,1.783,1327,1.783,1328,1.783,1329,1.519,1330,1.783,1331,1.783,1332,1.783,1333,1.783,1334,1.783,1335,1.783,1336,1.783,1337,3.638,1338,1.783,1339,1.783,1340,1.783,1341,4.916,1342,2.887,1343,2.887,1344,2.887,1345,2.887,1346,2.887,1347,2.887,1348,2.887,1349,1.783,1350,2.177,1351,1.783,1352,1.519,1353,1.519,1354,1.783,1355,3.638,1356,2.459,1357,2.887,1358,2.887,1359,1.783,1360,2.887,1361,2.887,1362,1.783,1363,1.783,1364,1.783,1365,1.783,1366,1.783,1367,1.783,1368,2.887]],["title/components/HomeComponent.html",[30,0.258,104,0.799]],["body/components/HomeComponent.html",[0,0.074,3,0.22,4,0.22,5,0.192,7,0.192,15,0.22,16,0.023,18,0.372,26,0.22,27,0.012,28,0.016,29,0.012,30,0.506,31,0.864,32,1.294,33,1.092,34,1.092,35,1.092,36,1.092,38,1.092,49,1.95,50,1.807,52,1.372,54,1.372,65,0.597,66,0.515,70,0.972,71,1.453,72,1.453,73,1.092,74,1.644,75,1.092,76,0.65,77,1.092,78,0.864,79,1.634,80,0.864,81,1.03,82,1.092,83,1.293,84,1.092,85,0.864,86,0.972,87,1.092,88,0.814,89,1.092,90,0.864,91,1.76,92,0.72,93,0.917,94,1.092,95,0.864,96,1.294,97,0.864,98,1.453,99,0.864,100,1.011,101,0.864,102,0.864,103,1.092,104,1.379,105,1.904,106,1.453,107,0.864,108,1.372,109,0.864,110,0.864,111,1.092,112,0.864,113,1.218,114,1.092,115,1.092,251,0.553,265,3.821,274,1.453,275,1.834,282,0.843,285,2.073,290,0.72,297,0.633,298,0.633,302,0.633,303,1.092,318,1.463,319,1.463,322,1.656,435,1.226,738,4.316,747,1.463,969,1.656,1014,2.83,1319,2.87,1369,3.242,1370,4.316,1371,5.067,1372,5.067,1373,5.696,1374,5.067,1375,3.242,1376,3.806,1377,3.806,1378,4.316,1379,3.806,1380,3.806]],["title/components/ListComponent.html",[30,0.258,107,0.799]],["body/components/ListComponent.html",[0,0.048,3,0.142,4,0.142,5,0.123,7,0.123,8,0.464,10,1.845,11,1.422,15,0.363,16,0.023,17,0.742,18,0.501,26,0.142,27,0.008,28,0.011,29,0.008,30,0.428,31,0.556,32,0.945,33,0.702,34,0.702,35,0.702,36,0.702,38,0.702,49,1.847,50,1.683,52,1.001,54,1.001,58,1.837,59,1.063,60,0.94,61,1.601,65,0.489,66,0.331,67,0.744,68,1.422,70,0.625,71,1.061,72,1.061,73,0.702,74,1.346,75,0.702,76,0.625,77,0.702,78,0.556,79,1.279,80,0.556,81,0.662,82,0.702,83,0.556,84,0.702,85,0.556,86,0.625,87,0.702,88,0.523,89,0.702,90,0.556,91,1.578,92,0.463,93,0.589,94,0.702,95,0.556,96,0.945,97,0.556,98,1.061,99,0.556,100,1.066,101,0.556,102,0.556,103,0.702,104,0.556,105,0.702,106,1.061,107,1.129,108,1.445,109,0.556,110,0.556,111,0.702,112,0.556,113,0.523,114,0.702,115,0.702,197,2.778,223,1.279,227,1.667,228,1,250,1.215,251,0.355,274,1.061,275,1.436,282,0.615,285,1.697,290,0.463,297,0.827,298,0.827,301,2.304,302,0.97,303,1.672,314,1.823,317,1.304,329,1.286,347,0.941,352,1.34,377,1.845,378,2.79,422,1.941,433,1,435,0.788,515,3.151,520,3.151,531,3.097,532,2.084,533,2.084,534,2.084,535,1.405,537,1.405,538,1.61,539,2.084,540,3.151,541,1.512,542,1.065,543,2.52,545,2.084,546,0.941,549,1.524,585,1.136,591,1.717,605,2.649,606,1.971,614,2.125,668,1.136,669,1.215,672,1.065,673,1.215,675,1.215,681,1.065,685,1.524,708,1.971,710,2.304,733,1.065,746,1.845,747,0.941,749,2.084,943,1.136,969,1.941,970,1.845,1142,1.667,1229,1.845,1232,3.386,1272,2.52,1329,2.084,1350,1.845,1352,2.084,1353,2.084,1381,1.845,1382,3.7,1383,4.783,1384,4.461,1385,3.7,1386,4.461,1387,4.461,1388,4.461,1389,5.339,1390,4.461,1391,3.7,1392,4.972,1393,3.7,1394,4.972,1395,4.972,1396,4.461,1397,4.461,1398,4.461,1399,4.461,1400,2.447,1401,4.972,1402,3.7,1403,3.7,1404,2.447,1405,2.447,1406,2.447,1407,2.447,1408,3.7,1409,2.447,1410,2.447,1411,2.447,1412,3.7,1413,2.447,1414,2.447,1415,2.447,1416,2.447,1417,2.447,1418,2.447,1419,2.447,1420,4.461,1421,3.7,1422,2.447,1423,4.461,1424,3.7,1425,2.447,1426,2.447,1427,4.461,1428,3.7,1429,2.447,1430,2.447,1431,2.447,1432,2.447,1433,2.447,1434,2.447,1435,2.447,1436,2.447,1437,3.7,1438,2.447,1439,2.447,1440,4.461,1441,3.7,1442,2.447,1443,2.447,1444,2.447,1445,2.447,1446,2.447,1447,2.447,1448,2.447,1449,2.447,1450,2.447,1451,2.447,1452,2.447,1453,1.845,1454,2.447,1455,2.447,1456,3.7,1457,2.447,1458,2.447,1459,2.447,1460,2.447,1461,2.447,1462,2.447,1463,2.447,1464,3.151,1465,2.447,1466,2.447,1467,2.447,1468,2.447,1469,2.447,1470,2.447,1471,2.447,1472,2.447,1473,2.084,1474,2.447,1475,2.447,1476,2.447,1477,2.447,1478,3.7,1479,3.7,1480,3.7,1481,3.7,1482,3.7,1483,3.7,1484,3.7,1485,2.447,1486,2.447,1487,2.447,1488,2.447,1489,2.447,1490,2.447,1491,2.447,1492,2.084,1493,2.447,1494,2.447]],["title/components/LoginComponent.html",[30,0.258,109,0.799]],["body/components/LoginComponent.html",[0,0.052,3,0.273,4,0.156,5,0.136,7,0.136,8,0.498,15,0.337,16,0.023,17,1.095,18,0.463,26,0.156,27,0.008,28,0.012,29,0.008,30,0.408,31,0.61,32,1.013,33,0.771,34,0.771,35,0.771,36,0.771,38,0.771,49,1.853,50,1.713,52,1.074,54,1.074,57,1.033,59,1.009,60,0.75,61,1.519,65,0.512,66,0.363,70,0.686,71,1.138,72,1.138,73,0.771,74,1.41,75,0.771,76,0.595,77,0.771,78,0.61,79,1.353,80,0.61,81,0.727,82,0.771,83,0.61,84,0.771,85,0.61,86,1.33,87,0.771,88,0.575,89,0.771,90,0.61,91,1.671,92,0.508,93,0.647,94,0.771,95,0.61,96,1.013,97,0.61,98,1.138,99,0.61,100,0.837,101,0.61,102,0.61,103,0.771,104,0.61,105,0.771,106,1.138,107,0.61,108,0.727,109,1.182,110,0.61,111,0.771,112,0.61,113,0.575,114,0.771,115,0.771,130,2.026,131,2.026,228,2.128,246,1.673,251,0.39,274,1.138,275,1.519,282,0.66,285,1.778,290,0.75,297,0.785,298,0.66,302,0.785,303,1.353,319,1.033,322,1.169,323,1.928,329,0.647,352,1.886,446,1.673,451,5.258,453,2.341,456,4.535,462,4.732,465,3.379,466,2.288,469,4.017,471,3.926,474,4.753,475,4.753,476,3.379,480,4.017,529,2.114,531,1.673,535,2.278,537,1.543,538,2.686,541,2.523,542,1.726,546,1.033,547,1.543,549,1.673,551,1.334,617,2.189,668,1.247,669,1.334,670,2.702,672,1.726,673,1.334,674,2.189,675,1.334,679,2.709,680,2.026,681,1.169,683,4.017,685,2.937,686,3.556,687,3.46,690,2.288,703,3.927,725,1.673,731,1.97,733,1.726,918,2.288,943,1.247,960,1.673,963,1.673,964,2.471,969,1.726,970,2.026,997,1.83,1002,2.026,1228,3.379,1232,2.702,1308,2.026,1319,2.026,1350,2.991,1356,3.379,1495,2.288,1496,3.967,1497,3.967,1498,3.967,1499,3.967,1500,4.716,1501,3.967,1502,3.967,1503,5.208,1504,2.687,1505,5.208,1506,3.967,1507,3.967,1508,2.687,1509,2.687,1510,2.687,1511,2.687,1512,2.687,1513,2.687,1514,2.687,1515,2.687,1516,2.687,1517,2.687,1518,2.687,1519,2.687,1520,2.687,1521,2.687,1522,2.687,1523,2.687,1524,2.687,1525,2.687,1526,3.556,1527,5.208,1528,2.687,1529,2.687,1530,2.687,1531,2.687,1532,2.687,1533,2.687,1534,3.967,1535,2.687,1536,2.687,1537,2.687]],["title/classes/Medicine.html",[0,0.068,1257,2.021]],["body/classes/Medicine.html",[0,0.101,2,2.003,3,0.302,4,0.302,5,0.263,7,0.263,8,0.775,11,2.53,15,0.394,16,0.022,17,1.172,18,0.499,21,2.236,26,0.302,27,0.016,28,0.019,29,0.016,76,0.705,251,0.956,1257,3.546,1538,4.437,1539,6.581,1540,5.209,1541,5.209,1542,5.209,1543,5.209]],["title/injectables/MedicineService.html",[400,1.201,1253,2.397]],["body/injectables/MedicineService.html",[0,0.077,3,0.228,4,0.228,5,0.199,7,0.199,8,0.651,15,0.388,16,0.023,17,1.114,18,0.499,21,2.379,26,0.228,27,0.012,28,0.016,29,0.012,51,2.101,59,1.109,60,1.096,65,0.629,66,0.533,76,0.685,141,1.957,251,0.573,282,0.863,290,0.746,297,1.064,298,1.064,302,1.064,318,1.516,329,1.541,400,1.771,401,2.265,403,3.533,404,3.533,405,3.533,406,3.533,407,3.911,408,3.231,409,3.329,413,4.195,415,2.456,416,3.836,418,3.231,422,2.784,428,3.231,431,2.101,432,2.456,433,1.611,434,2.265,435,1.27,1253,3.533,1257,4.1,1301,4.418,1544,3.358,1545,5.797,1546,5.187,1547,5.187,1548,5.187,1549,5.187,1550,5.187,1551,3.943,1552,5.187,1553,3.943,1554,5.187,1555,3.943,1556,5.187,1557,3.943,1558,5.187,1559,3.943,1560,3.943,1561,5.187,1562,3.943,1563,3.943,1564,3.943,1565,3.943,1566,3.943,1567,3.943]],["title/components/NavigationComponent.html",[30,0.258,110,0.799]],["body/components/NavigationComponent.html",[0,0.058,3,0.173,4,0.173,5,0.151,7,0.216,8,0.537,15,0.29,16,0.023,18,0.456,26,0.173,27,0.009,28,0.013,29,0.009,30,0.456,31,0.677,32,1.093,33,1.436,34,0.855,35,0.855,36,0.855,38,0.855,49,1.897,50,1.783,52,1.158,54,1.158,56,4.264,59,1.071,60,0.947,61,1.865,63,2.125,65,0.593,66,0.403,67,0.906,70,0.762,71,1.228,72,1.228,73,0.855,74,1.481,75,0.855,76,0.586,77,0.855,78,0.677,79,1.436,80,0.677,81,0.807,82,0.855,83,0.677,84,0.855,85,0.677,86,0.762,87,0.855,88,0.638,89,0.855,90,0.677,91,1.632,92,0.564,93,0.718,94,0.855,95,0.677,96,1.093,97,0.677,98,1.228,99,0.677,100,0.889,101,0.677,102,0.677,103,0.855,104,0.677,105,0.855,106,1.228,107,0.677,108,0.807,109,0.677,110,1.369,111,0.855,112,0.677,113,0.638,114,0.855,115,0.855,148,2.249,240,0.96,246,1.857,251,0.433,267,2.915,270,3.726,275,0.96,282,0.712,290,0.564,297,0.496,298,0.496,302,0.712,303,1.228,314,1.219,317,1.589,320,1.589,322,1.298,323,1.219,329,1.031,350,2.031,422,2.178,433,1.219,435,0.96,445,2.125,456,4.683,481,3.227,531,2.666,537,1.713,541,1.219,546,1.147,547,1.713,591,1.384,617,1.384,629,3.227,669,1.48,672,1.298,679,1.713,681,1.862,688,2.54,697,3.645,698,3.227,699,3.645,700,3.645,701,3.645,712,2.54,713,5.135,725,3.118,734,2.54,741,2.54,747,1.147,915,2.54,969,1.298,1370,3.645,1464,2.54,1492,2.54,1526,3.227,1568,2.54,1569,4.28,1570,3.645,1571,4.659,1572,5.006,1573,4.28,1574,5.006,1575,6.211,1576,5.006,1577,5.47,1578,5.47,1579,2.982,1580,2.982,1581,2.982,1582,4.28,1583,4.28,1584,4.28,1585,4.28,1586,5.006,1587,5.47,1588,2.982,1589,2.982,1590,5.006,1591,4.28,1592,2.982,1593,2.982,1594,5.006,1595,2.982,1596,2.982,1597,2.982,1598,2.982,1599,2.982,1600,2.982,1601,4.28,1602,2.982,1603,4.28,1604,4.28,1605,4.28,1606,4.28,1607,4.28,1608,4.28,1609,4.28,1610,4.28,1611,4.28,1612,4.28,1613,4.28,1614,2.982,1615,2.982,1616,2.982,1617,2.982,1618,2.982]],["title/classes/Patient.html",[0,0.068,113,0.753]],["body/classes/Patient.html",[0,0.082,1,4.239,2,1.623,3,0.245,4,0.245,5,0.213,7,0.213,8,0.681,11,2.65,15,0.412,16,0.023,17,1.201,18,0.522,21,1.964,26,0.314,27,0.013,28,0.017,29,0.013,60,1.237,65,0.589,76,0.452,92,1.026,113,1.16,223,1.211,259,3.937,260,3.184,261,3.937,266,4.517,1140,4.767,1142,4.306,1145,5.103,1150,4.767,1153,5.103,1238,3.378,1272,4.306,1619,3.184,1620,5.991,1621,5.991,1622,4.222,1623,4.222,1624,4.222,1625,4.222,1626,4.222,1627,4.222,1628,4.222,1629,4.222,1630,4.222,1631,4.222,1632,4.222,1633,4.222,1634,2.876,1635,3.596,1636,3.596]],["title/components/PatientComponent.html",[30,0.258,112,0.799]],["body/components/PatientComponent.html",[0,0.047,3,0.14,4,0.14,5,0.122,7,0.122,8,0.461,11,2.235,15,0.213,16,0.023,18,0.487,26,0.14,27,0.008,28,0.011,29,0.008,30,0.325,31,0.55,32,1.263,33,0.695,34,0.695,35,0.695,36,0.695,38,0.695,49,1.845,50,1.708,52,0.994,54,0.994,57,0.932,59,0.785,60,0.458,63,1.823,65,0.614,66,0.328,67,0.736,70,0.619,71,1.053,72,1.053,73,0.695,74,1.339,75,0.695,76,0.599,77,0.695,78,0.55,79,1.272,80,0.834,81,1.339,82,0.695,83,0.55,84,0.695,85,0.55,86,0.619,87,0.695,88,0.518,89,0.695,90,0.55,91,1.691,92,0.458,93,0.584,94,0.695,95,0.55,96,1.358,97,0.834,98,1.053,99,0.834,100,1.088,101,0.834,102,0.834,103,0.695,104,0.55,105,0.695,106,1.053,107,1.123,108,1.573,109,0.55,110,0.55,111,0.695,112,1.123,113,1.243,114,0.695,115,0.695,206,1.827,208,1.509,209,1.827,210,1.957,211,2.769,212,1.291,213,1.827,220,1.509,221,2.064,223,1.667,240,0.78,251,0.772,265,2.769,266,1.827,267,2.501,268,2.501,269,3.343,270,2.501,271,2.832,272,3.128,273,3.128,274,1.053,275,1.428,279,3.777,280,3.777,282,0.611,284,3.128,285,1.689,287,4.214,290,0.695,293,3.777,294,4.214,295,4.214,297,0.738,298,0.738,301,2.287,302,1.039,303,1.758,304,3.128,306,2.064,314,0.99,315,3.128,317,1.291,318,0.932,319,0.932,323,1.812,344,2.064,345,2.064,346,2.064,347,2.151,348,2.064,350,3.369,352,1.792,354,1.65,358,2.769,363,2.287,364,1.65,367,2.769,375,2.064,376,2.064,378,3.73,380,4.214,383,2.639,386,2.762,387,4.528,388,2.064,389,2.064,390,4.214,391,4.214,707,4.214,777,1.827,1012,3.343,1013,2.769,1014,2.434,1024,1.827,1025,1.827,1028,2.064,1088,3.128,1248,3.777,1316,2.064,1375,2.064,1378,3.128,1634,3.02,1637,2.064,1638,4.434,1639,4.434,1640,3.672,1641,4.947,1642,4.947,1643,4.947,1644,4.947,1645,4.947,1646,3.672,1647,2.423,1648,2.423,1649,3.672,1650,2.423,1651,2.423,1652,2.423,1653,2.423,1654,2.423,1655,2.423,1656,2.423,1657,2.423,1658,2.423,1659,2.423,1660,2.423,1661,2.423,1662,3.672,1663,2.423,1664,2.423,1665,2.423,1666,3.672,1667,2.423,1668,3.672,1669,3.672,1670,2.423,1671,3.672,1672,2.423,1673,2.423,1674,3.672,1675,2.423,1676,5.316,1677,5.316,1678,2.423,1679,2.423,1680,2.423,1681,2.423,1682,2.423,1683,2.423,1684,4.434,1685,3.672,1686,2.423,1687,2.423,1688,2.423,1689,2.423,1690,2.423,1691,2.423]],["title/injectables/PatientService.html",[400,1.201,1014,1.531]],["body/injectables/PatientService.html",[0,0.069,3,0.206,4,0.206,5,0.18,7,0.18,8,0.608,15,0.406,16,0.023,17,1.133,18,0.5,21,2.508,26,0.206,27,0.011,28,0.015,29,0.011,51,1.896,59,1.036,60,1.169,65,0.608,66,0.481,76,0.699,92,1.256,113,1.507,141,1.767,223,1.021,251,0.517,282,0.806,290,0.673,297,1.085,298,1.085,302,1.085,318,1.368,329,1.572,334,4.025,400,1.654,401,2.044,403,3.299,404,3.299,405,3.299,406,3.299,407,3.652,408,3.017,409,3.162,413,4.025,415,2.217,416,3.681,418,3.017,422,2.93,428,3.017,431,1.896,432,2.217,433,1.455,434,2.044,435,1.146,1014,2.107,1692,3.031,1693,5.91,1694,4.843,1695,4.843,1696,4.843,1697,4.843,1698,4.843,1699,4.843,1700,4.843,1701,4.843,1702,3.559,1703,4.843,1704,3.559,1705,4.843,1706,3.559,1707,4.843,1708,3.559,1709,3.559,1710,4.843,1711,3.559,1712,4.843,1713,3.559,1714,3.559,1715,4.843,1716,3.031,1717,3.559,1718,3.559,1719,3.559,1720,3.559,1721,3.559,1722,3.559,1723,3.559,1724,3.559,1725,4.843,1726,3.559]],["title/classes/Prescription.html",[0,0.068,1238,2.192]],["body/classes/Prescription.html",[0,0.099,2,1.962,3,0.295,4,0.295,5,0.258,7,0.258,8,0.766,11,2.508,15,0.378,16,0.023,18,0.496,21,2.209,26,0.295,27,0.016,28,0.019,29,0.016,65,0.502,100,0.906,250,3.238,290,1.234,585,2.831,1238,3.798,1257,3.967,1272,4.603,1727,4.346,1728,6.099,1729,5.102,1730,5.102,1731,5.102,1732,5.102,1733,5.102]],["title/interceptors/RequestInterceptor.html",[129,2.192,891,2.397]],["body/interceptors/RequestInterceptor.html",[0,0.086,3,0.256,4,0.256,5,0.223,7,0.223,15,0.384,16,0.023,18,0.324,26,0.256,27,0.014,28,0.017,29,0.014,65,0.601,66,0.597,76,0.473,86,1.641,93,1.343,129,3.474,141,2.191,251,0.641,274,1.266,282,0.928,297,0.734,298,0.734,302,0.734,329,1.063,400,1.904,422,2.661,433,1.803,446,2.748,447,5.209,463,3.758,490,4.75,491,5.473,492,4.75,498,3.327,668,3.076,891,3.799,892,3.758,897,4.611,901,4.75,904,4.75,905,5.473,906,5.209,907,5.473,909,3.758,910,4.75,1734,3.758,1735,5.578,1736,6.874,1737,6.426,1738,6.426,1739,5.578,1740,4.413,1741,3.758,1742,5.578,1743,5.578,1744,4.413,1745,4.413,1746,4.413]],["title/classes/User.html",[0,0.068,445,1.747]],["body/classes/User.html",[0,0.103,2,2.038,3,0.307,4,0.307,5,0.267,7,0.267,8,0.783,11,2.548,15,0.384,16,0.022,17,1.138,18,0.487,21,2.259,26,0.307,27,0.016,28,0.019,29,0.016,445,3.097,474,4.998,475,4.998,1747,4.514,1748,5.3,1749,5.3,1750,5.3]],["title/injectables/UserService.html",[400,1.201,1751,2.653]],["body/injectables/UserService.html",[0,0.089,3,0.266,4,0.266,5,0.232,7,0.232,8,0.718,15,0.331,16,0.023,17,0.952,18,0.457,26,0.266,27,0.014,28,0.018,29,0.014,51,2.449,59,0.983,60,0.87,65,0.641,66,0.622,76,0.492,141,2.282,251,0.668,282,0.952,290,0.87,297,0.765,298,0.765,302,0.765,318,1.768,329,1.107,347,1.768,400,1.954,401,2.64,403,3.898,404,3.898,405,4.658,409,3.579,413,4.441,415,2.863,416,4.062,418,3.564,428,3.564,431,2.449,432,2.863,434,2.64,435,1.481,445,3.33,498,4.315,895,3.898,897,4.315,916,3.916,1526,3.467,1751,4.315,1752,3.916,1753,5.723,1754,5.723,1755,5.723,1756,4.598,1757,4.598,1758,4.598,1759,4.598]],["title/classes/ValidateUniqueValues.html",[0,0.068,1122,2.397]],["body/classes/ValidateUniqueValues.html",[0,0.083,2,1.649,3,0.248,4,0.248,5,0.216,7,0.216,15,0.38,16,0.023,17,1.118,18,0.315,26,0.248,27,0.013,28,0.017,29,0.013,59,0.917,60,1.243,65,0.625,76,0.459,100,0.972,146,2.129,189,2.671,240,1.381,251,0.623,282,0.911,297,0.713,298,0.713,302,0.911,319,1.649,320,2.285,322,1.866,329,1.583,422,2.767,433,1.753,698,3.234,733,1.866,798,3.234,895,3.73,1014,2.859,1122,3.73,1126,3.234,1132,4.13,1308,3.234,1570,4.665,1760,3.652,1761,5.477,1762,6.035,1763,5.477,1764,6.035,1765,5.477,1766,5.477,1767,6.359,1768,4.288,1769,5.477,1770,5.477,1771,4.288,1772,5.477,1773,4.288,1774,4.288,1775,6.035,1776,4.288,1777,4.288,1778,4.288,1779,4.288,1780,4.288,1781,4.288,1782,4.288,1783,4.288,1784,4.288,1785,4.288,1786,4.288,1787,4.288,1788,4.288,1789,4.288,1790,4.288,1791,4.288,1792,4.288,1793,4.288,1794,4.288,1795,4.288]],["title/coverage.html",[1796,4.093]],["body/coverage.html",[0,0.132,1,2.032,5,0.165,6,2.779,15,0.189,16,0.023,27,0.01,28,0.014,29,0.01,30,0.516,31,0.741,37,2.779,68,2.387,78,0.741,80,0.741,83,0.741,85,0.741,88,0.698,90,0.741,92,0.995,93,1.099,95,0.741,96,1.454,97,0.741,99,0.741,100,1.221,101,0.741,102,0.741,104,0.741,107,0.741,109,0.741,110,0.741,112,0.741,113,0.698,128,2.032,129,2.032,133,2.46,153,2.46,195,2.46,197,2.841,202,2.46,208,2.032,210,2.802,212,2.802,218,2.222,220,2.841,224,2.46,248,3.439,249,1.874,258,2.222,264,2.779,292,1.62,393,2.779,394,2.779,400,2.046,402,2.779,431,2.43,440,2.46,441,2.46,443,2.779,445,1.62,471,2.032,472,2.779,506,2.779,507,2.779,552,3.966,560,2.222,585,1.514,591,3.353,592,2.222,615,2.46,692,2.779,693,2.779,750,2.779,751,2.779,763,2.222,764,3.582,805,2.46,886,2.46,887,2.779,891,3.107,893,2.779,923,3.28,924,2.779,971,3.582,1010,3.582,1014,1.42,1122,2.222,1126,2.46,1237,3.439,1238,2.032,1253,2.222,1257,1.874,1369,2.779,1381,3.439,1383,2.779,1453,2.46,1473,2.779,1495,2.779,1538,2.779,1544,2.779,1568,2.779,1619,3.439,1634,2.222,1637,2.779,1692,2.779,1727,2.779,1734,2.779,1747,2.779,1751,2.46,1752,2.779,1760,2.779,1796,2.779,1797,3.263,1798,3.263,1799,5.259,1800,5.259,1801,4.561,1802,4.561,1803,3.263,1804,5.259,1805,4.561,1806,6.924,1807,6.964,1808,4.561,1809,3.263,1810,4.561,1811,4.561,1812,3.263,1813,3.263,1814,3.263,1815,3.263,1816,5.259,1817,4.561,1818,4.561,1819,2.779,1820,3.263,1821,3.263,1822,4.85,1823,4.561,1824,3.263,1825,3.263,1826,3.263,1827,5.695,1828,5.695,1829,4.561,1830,3.263,1831,3.439,1832,3.439,1833,2.779,1834,3.263,1835,2.779,1836,2.779,1837,3.263]],["title/dependencies.html",[119,2.883,1838,2.937]],["body/dependencies.html",[16,0.023,27,0.015,28,0.019,29,0.015,66,0.674,67,1.827,68,2.311,69,3.103,119,3.393,136,5.12,137,4.533,146,2.473,152,3.757,184,3.393,185,3.393,186,3.393,189,3.103,190,3.393,194,3.757,246,3.103,433,2.036,585,2.312,1839,4.982,1840,7.115,1841,4.982,1842,6.457,1843,4.982,1844,4.982,1845,4.982,1846,4.982,1847,4.982,1848,4.982,1849,4.982,1850,4.982,1851,4.982,1852,4.982,1853,4.982,1854,4.982,1855,4.982,1856,4.982,1857,4.982,1858,4.982,1859,4.982,1860,4.982]],["title/miscellaneous/functions.html",[408,2.637,1861,2]],["body/miscellaneous/functions.html",[7,0.283,16,0.02,27,0.017,28,0.02,29,0.017,195,5.118,197,4.017,408,3.497,1831,4.234,1832,4.864,1861,3.824,1862,4.782]],["title/index.html",[7,0.148,1314,2.214,1863,2.501]],["body/index.html",[16,0.02,27,0.018,28,0.02,29,0.018,32,1.446,50,1.655,63,2.81,1571,4.821,1864,5.661,1865,5.661,1866,5.661]],["title/modules.html",[118,2.993]],["body/modules.html",[16,0.02,27,0.018,28,0.02,29,0.018,117,3.84,118,3.511,137,4.251,241,4.251,1741,4.802,1867,5.638,1868,5.638,1869,6.465,1870,5.638]],["title/overview.html",[1871,4.093]],["body/overview.html",[2,1.566,16,0.023,27,0.013,28,0.016,29,0.013,31,1.596,32,1.04,39,2.773,40,4.514,41,3.667,42,4.01,43,4.44,44,4.44,45,4.44,46,4.44,47,4.44,48,4.44,70,1.04,78,1.337,80,1.337,83,1.337,85,1.337,88,1.259,90,1.337,95,1.337,97,1.337,99,1.337,101,1.337,102,1.337,104,1.337,107,1.337,109,1.337,110,1.337,112,1.337,116,2.773,117,5.055,118,2.536,119,2.773,120,3.468,121,3.468,122,3.07,123,3.468,124,3.468,125,3.468,126,3.468,127,3.468,128,3.667,129,3.667,130,3.994,131,3.07,132,2.773,401,2.338,440,3.07,725,2.536,727,3.07,1453,3.07,1822,3.468,1871,3.468,1872,4.072]],["title/todo.html",[720,2.501,1314,2.214,1863,2.501]],["body/todo.html",[16,0.02,27,0.018,28,0.02,29,0.018,639,4.862,1235,4.304,1873,5.708,1874,5.708]],["title/miscellaneous/variables.html",[1861,2,1875,3.605]],["body/miscellaneous/variables.html",[7,0.274,11,2.63,15,0.367,16,0.023,21,1.967,27,0.011,28,0.015,29,0.011,59,1.494,60,1.366,61,1.117,68,2.652,76,0.51,100,1.189,108,0.939,133,2.616,153,3.589,197,2.964,210,1.848,212,1.848,220,2.161,223,1.365,224,3.589,225,2.955,226,4.054,227,3.241,228,1.418,229,2.955,230,2.955,231,4.054,232,2.955,233,2.955,234,2.955,235,2.955,240,1.117,248,2.616,250,1.722,251,0.504,258,3.241,259,2.964,260,3.589,261,2.964,262,2.955,263,2.955,329,0.836,364,2.363,431,3.115,452,3.589,552,2.616,591,2.714,614,3.519,615,3.589,616,1.848,617,2.522,618,2.955,619,4.627,620,2.955,621,2.955,622,2.955,623,2.955,624,2.955,625,2.955,626,2.955,636,2.955,637,3.589,764,2.363,781,2.616,923,2.697,943,2.522,971,3.241,1010,3.241,1140,2.616,1142,2.363,1150,2.616,1237,3.589,1381,2.616,1619,2.616,1634,3.241,1635,2.955,1636,2.955,1716,2.955,1819,2.955,1831,2.616,1832,3.589,1833,4.054,1835,2.955,1836,2.955,1861,2.363,1862,2.955,1875,2.955,1876,3.469,1877,4.759,1878,3.469,1879,3.469,1880,3.469,1881,5.433,1882,3.469,1883,3.469,1884,3.469,1885,3.469,1886,4.759,1887,3.469,1888,3.469,1889,3.469,1890,3.469,1891,3.469,1892,3.469,1893,5.433,1894,6.127,1895,3.469,1896,4.759,1897,3.469,1898,3.469,1899,3.469,1900,3.469,1901,3.469]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"classes/Address.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Appointment.html":{},"components/AppointmentComponent.html":{},"classes/AppointmentRecord.html":{},"injectables/AppointmentService.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"classes/CustomDateFormatter.html":{},"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{},"classes/Disease.html":{},"interceptors/ErrorInterceptor.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"classes/Medicine.html":{},"injectables/MedicineService.html":{},"components/NavigationComponent.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"classes/Prescription.html":{},"interceptors/RequestInterceptor.html":{},"classes/User.html":{},"injectables/UserService.html":{},"classes/ValidateUniqueValues.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":591,"title":{},"body":{"components/CalendarComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/ListComponent.html":{},"components/NavigationComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.06",{"_index":1486,"title":{},"body":{"components/ListComponent.html":{}}}],["0.15",{"_index":1533,"title":{},"body":{"components/LoginComponent.html":{}}}],["0.27.9",{"_index":1845,"title":{},"body":{"dependencies.html":{}}}],["0.3s",{"_index":534,"title":{},"body":{"components/BottomSheetComponent.html":{},"components/ListComponent.html":{}}}],["0.8.26",{"_index":1860,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1807,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1809,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1830,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1818,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1804,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1808,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1805,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1803,"title":{},"body":{"coverage.html":{}}}],["00000030",{"_index":1231,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["0px",{"_index":1232,"title":{},"body":{"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{}}}],["1",{"_index":725,"title":{},"body":{"components/ContentCardComponent.html":{},"components/FormNewPatientComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"overview.html":{}}}],["1.15.0",{"_index":1853,"title":{},"body":{"dependencies.html":{}}}],["1.30.1",{"_index":1849,"title":{},"body":{"dependencies.html":{}}}],["1.9.0",{"_index":1858,"title":{},"body":{"dependencies.html":{}}}],["1/10",{"_index":1828,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":1815,"title":{},"body":{"coverage.html":{}}}],["1/13",{"_index":1821,"title":{},"body":{"coverage.html":{}}}],["1/16",{"_index":1834,"title":{},"body":{"coverage.html":{}}}],["1/17",{"_index":1823,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1802,"title":{},"body":{"coverage.html":{}}}],["1/20",{"_index":1829,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1800,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1817,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1813,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":1811,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":1814,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1827,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":747,"title":{},"body":{"components/ContentCardComponent.html":{},"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/NavigationComponent.html":{}}}],["1000",{"_index":1523,"title":{},"body":{"components/LoginComponent.html":{}}}],["100vh",{"_index":1528,"title":{},"body":{"components/LoginComponent.html":{}}}],["100vw",{"_index":1529,"title":{},"body":{"components/LoginComponent.html":{}}}],["10px",{"_index":550,"title":{},"body":{"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{}}}],["11",{"_index":1453,"title":{},"body":{"components/ListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["12",{"_index":1810,"title":{},"body":{"coverage.html":{}}}],["120",{"_index":1535,"title":{},"body":{"components/LoginComponent.html":{}}}],["130",{"_index":834,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["14px",{"_index":1492,"title":{},"body":{"components/ListComponent.html":{},"components/NavigationComponent.html":{}}}],["15",{"_index":831,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["1500",{"_index":968,"title":{},"body":{"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{}}}],["15px",{"_index":743,"title":{},"body":{"components/ContentCardComponent.html":{}}}],["17",{"_index":1872,"title":{},"body":{"overview.html":{}}}],["18px",{"_index":673,"title":{},"body":{"components/CalendarComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{}}}],["1e90ff",{"_index":622,"title":{},"body":{"components/CalendarComponent.html":{},"miscellaneous/variables.html":{}}}],["1px",{"_index":1229,"title":{},"body":{"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/ListComponent.html":{}}}],["2",{"_index":727,"title":{},"body":{"components/ContentCardComponent.html":{},"components/FormNewPatientComponent.html":{},"overview.html":{}}}],["2.0.8",{"_index":1851,"title":{},"body":{"dependencies.html":{}}}],["2.24.0",{"_index":1854,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":1848,"title":{},"body":{"dependencies.html":{}}}],["2/7",{"_index":1825,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1812,"title":{},"body":{"coverage.html":{}}}],["2000",{"_index":1002,"title":{},"body":{"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/LoginComponent.html":{}}}],["200px",{"_index":688,"title":{},"body":{"components/CalendarComponent.html":{},"components/NavigationComponent.html":{}}}],["20px",{"_index":551,"title":{},"body":{"components/BottomSheetComponent.html":{},"components/ContentCardComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/LoginComponent.html":{}}}],["21",{"_index":1454,"title":{},"body":{"components/ListComponent.html":{}}}],["21.11.1991",{"_index":1451,"title":{},"body":{"components/ListComponent.html":{}}}],["230",{"_index":540,"title":{},"body":{"components/BottomSheetComponent.html":{},"components/ListComponent.html":{}}}],["24px",{"_index":1368,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["25",{"_index":1816,"title":{},"body":{"coverage.html":{}}}],["25px",{"_index":682,"title":{},"body":{"components/CalendarComponent.html":{}}}],["28",{"_index":1824,"title":{},"body":{"coverage.html":{}}}],["2px",{"_index":1354,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["3.1.0",{"_index":1855,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":639,"title":{},"body":{"components/CalendarComponent.html":{},"todo.html":{}}}],["3000",{"_index":1183,"title":{},"body":{"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{}}}],["30px",{"_index":548,"title":{},"body":{"components/BottomSheetComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormNewPatientComponent.html":{}}}],["33",{"_index":1799,"title":{},"body":{"coverage.html":{}}}],["3f51b5",{"_index":815,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["3px",{"_index":1233,"title":{},"body":{"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{}}}],["400px",{"_index":1349,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["401",{"_index":899,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["40px",{"_index":749,"title":{},"body":{"components/ContentCardComponent.html":{},"components/ListComponent.html":{}}}],["420px",{"_index":1531,"title":{},"body":{"components/LoginComponent.html":{}}}],["428px",{"_index":1236,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["480px",{"_index":1530,"title":{},"body":{"components/LoginComponent.html":{}}}],["4px",{"_index":1356,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{},"components/LoginComponent.html":{}}}],["5",{"_index":1822,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["5/20",{"_index":1826,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1801,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":677,"title":{},"body":{"components/CalendarComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPrescriptionComponent.html":{}}}],["50px",{"_index":680,"title":{},"body":{"components/CalendarComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/LoginComponent.html":{}}}],["5px",{"_index":746,"title":{},"body":{"components/ContentCardComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/ListComponent.html":{}}}],["6",{"_index":592,"title":{},"body":{"components/CalendarComponent.html":{},"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{},"coverage.html":{}}}],["6.3.3",{"_index":1856,"title":{},"body":{"dependencies.html":{}}}],["60px",{"_index":1489,"title":{},"body":{"components/ListComponent.html":{}}}],["6].includes(this.datetime.todate().getday",{"_index":1073,"title":{},"body":{"components/FormNewAppointmentComponent.html":{}}}],["7",{"_index":1820,"title":{},"body":{"coverage.html":{}}}],["7.2.0",{"_index":1840,"title":{},"body":{"dependencies.html":{}}}],["7.3.7",{"_index":1842,"title":{},"body":{"dependencies.html":{}}}],["78px",{"_index":1359,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["8px",{"_index":1367,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["9",{"_index":805,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{},"coverage.html":{}}}],["97",{"_index":1351,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["98",{"_index":1484,"title":{},"body":{"components/ListComponent.html":{}}}],["_",{"_index":803,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["_helpers",{"_index":199,"title":{},"body":{"modules/AppModule.html":{}}}],["_helpers/request.interceptor",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["_models",{"_index":318,"title":{},"body":{"components/AppointmentComponent.html":{},"injectables/AppointmentService.html":{},"components/CalendarComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"injectables/MedicineService.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"injectables/UserService.html":{}}}],["_moment",{"_index":614,"title":{},"body":{"components/CalendarComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/ListComponent.html":{},"miscellaneous/variables.html":{}}}],["_moment.moment",{"_index":1050,"title":{},"body":{"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{}}}],["_services",{"_index":319,"title":{},"body":{"components/AppointmentComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PatientComponent.html":{},"classes/ValidateUniqueValues.html":{}}}],["_services/appointment.service",{"_index":611,"title":{},"body":{"components/CalendarComponent.html":{}}}],["_services/medicine.service",{"_index":1284,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["_snackbar",{"_index":978,"title":{},"body":{"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{}}}],["a.patient.firstname",{"_index":633,"title":{},"body":{"components/CalendarComponent.html":{}}}],["a.patient.lastname",{"_index":634,"title":{},"body":{"components/CalendarComponent.html":{}}}],["ability",{"_index":702,"title":{},"body":{"components/ContentCardComponent.html":{}}}],["absagen",{"_index":370,"title":{},"body":{"components/AppointmentComponent.html":{},"components/FormDeleteAppointmentComponent.html":{}}}],["absolute",{"_index":742,"title":{},"body":{"components/ContentCardComponent.html":{}}}],["abstractcontrol",{"_index":1770,"title":{},"body":{"classes/ValidateUniqueValues.html":{}}}],["accent",{"_index":960,"title":{},"body":{"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/LoginComponent.html":{}}}],["accessors",{"_index":1099,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["activatedroute",{"_index":1505,"title":{},"body":{"components/LoginComponent.html":{}}}],["activatedroutesnapshot",{"_index":459,"title":{},"body":{"guards/AuthGuard.html":{}}}],["acts",{"_index":1753,"title":{},"body":{"injectables/UserService.html":{}}}],["actual_component",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{}}}],["ad2121",{"_index":618,"title":{},"body":{"components/CalendarComponent.html":{},"miscellaneous/variables.html":{}}}],["adapter",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{},"dependencies.html":{}}}],["adapterfactory",{"_index":191,"title":{},"body":{"modules/AppModule.html":{}}}],["adapters/date",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["add",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppointmentComponent.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{},"interceptors/RequestInterceptor.html":{},"coverage.html":{}}}],["add_appointment",{"_index":1662,"title":{},"body":{"components/PatientComponent.html":{}}}],["add_appointment_record",{"_index":349,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["add_comment",{"_index":351,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["add_prescription",{"_index":1666,"title":{},"body":{"components/PatientComponent.html":{}}}],["addappointment",{"_index":1694,"title":{},"body":{"injectables/PatientService.html":{}}}],["addappointment(patientid",{"_index":1701,"title":{},"body":{"injectables/PatientService.html":{}}}],["added",{"_index":1321,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["addminutes",{"_index":608,"title":{},"body":{"components/CalendarComponent.html":{}}}],["addminutes(datetime",{"_index":638,"title":{},"body":{"components/CalendarComponent.html":{}}}],["addnewmedicine",{"_index":1546,"title":{},"body":{"injectables/MedicineService.html":{}}}],["addnewmedicine(medicine",{"_index":1550,"title":{},"body":{"injectables/MedicineService.html":{}}}],["addnewpatient",{"_index":1695,"title":{},"body":{"injectables/PatientService.html":{}}}],["addnewpatient(patient",{"_index":1703,"title":{},"body":{"injectables/PatientService.html":{}}}],["addnotes",{"_index":411,"title":{},"body":{"injectables/AppointmentService.html":{}}}],["addnotes(appointmentid",{"_index":419,"title":{},"body":{"injectables/AppointmentService.html":{}}}],["address",{"_index":1,"title":{"classes/Address.html":{}},"body":{"classes/Address.html":{},"components/FormNewPatientComponent.html":{},"classes/Patient.html":{},"coverage.html":{}}}],["addressform",{"_index":1091,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["addselecteddayviewclass",{"_index":571,"title":{},"body":{"components/CalendarComponent.html":{}}}],["addtodatabasepanelopened",{"_index":1241,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["adress",{"_index":1192,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["afterclose",{"_index":932,"title":{},"body":{"components/FormAppointmentAddNoteComponent.html":{},"components/FormNewAppointmentComponent.html":{}}}],["alarm_add",{"_index":1663,"title":{},"body":{"components/PatientComponent.html":{}}}],["alarm_off",{"_index":369,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["alarmtermin",{"_index":1606,"title":{},"body":{"components/NavigationComponent.html":{}}}],["alertbutton",{"_index":1502,"title":{},"body":{"components/LoginComponent.html":{}}}],["alertbutton(text",{"_index":1507,"title":{},"body":{"components/LoginComponent.html":{}}}],["align",{"_index":685,"title":{},"body":{"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/FormNewPatientComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{}}}],["alle",{"_index":1028,"title":{},"body":{"components/FormDeletePatientComponent.html":{},"components/PatientComponent.html":{}}}],["alte",{"_index":1479,"title":{},"body":{"components/ListComponent.html":{}}}],["angabe",{"_index":339,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["angular",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"components/CalendarComponent.html":{},"classes/CustomDateFormatter.html":{},"classes/ValidateUniqueValues.html":{},"dependencies.html":{}}}],["angular/animations",{"_index":1839,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1841,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/layout",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"components/ContentCardComponent.html":{},"components/NavigationComponent.html":{}}}],["angular/common",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"classes/CustomDateFormatter.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppointmentService.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/MedicineService.html":{},"injectables/PatientService.html":{},"interceptors/RequestInterceptor.html":{},"injectables/UserService.html":{}}}],["angular/common/locales/de",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/compiler",{"_index":1843,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppointmentComponent.html":{},"injectables/AppointmentService.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"injectables/MedicineService.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"interceptors/RequestInterceptor.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"classes/ValidateUniqueValues.html":{},"dependencies.html":{}}}],["angular/material",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppointmentComponent.html":{},"components/BottomSheetComponent.html":{},"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/ListComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":246,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"dependencies.html":{}}}],["anhalt",{"_index":1216,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["api",{"_index":409,"title":{},"body":{"injectables/AppointmentService.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/MedicineService.html":{},"injectables/PatientService.html":{},"injectables/UserService.html":{}}}],["api.herokuapp.com/api",{"_index":1888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api.herokuapp.com/api/patient",{"_index":1717,"title":{},"body":{"injectables/PatientService.html":{}}}],["apilan",{"_index":1891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apilocal",{"_index":1889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiremote",{"_index":1887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{},"index.html":{}}}],["app.component",{"_index":200,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":53,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":55,"title":{},"body":{"components/AppComponent.html":{}}}],["app.routing",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["appcomponent",{"_index":31,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppointmentComponent.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application/json",{"_index":1745,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["applyfilter",{"_index":1391,"title":{},"body":{"components/ListComponent.html":{}}}],["applyfilter(filtervalue",{"_index":1408,"title":{},"body":{"components/ListComponent.html":{}}}],["appmodule",{"_index":117,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appointment",{"_index":92,"title":{"classes/Appointment.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/Appointment.html":{},"components/AppointmentComponent.html":{},"injectables/AppointmentService.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"coverage.html":{}}}],["appointment'},{'name",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{}}}],["appointment.component",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"components/AppointmentComponent.html":{},"components/PatientComponent.html":{}}}],["appointment.component.css",{"_index":276,"title":{},"body":{"components/AppointmentComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormNewAppointmentComponent.html":{}}}],["appointment.component.html",{"_index":277,"title":{},"body":{"components/AppointmentComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormNewAppointmentComponent.html":{}}}],["appointment.component.ts",{"_index":971,"title":{},"body":{"components/FormDeleteAppointmentComponent.html":{},"components/FormNewAppointmentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["appointment.component.ts:145",{"_index":1040,"title":{},"body":{"components/FormNewAppointmentComponent.html":{}}}],["appointment.component.ts:16",{"_index":981,"title":{},"body":{"components/FormDeleteAppointmentComponent.html":{}}}],["appointment.component.ts:17",{"_index":982,"title":{},"body":{"components/FormDeleteAppointmentComponent.html":{}}}],["appointment.component.ts:18",{"_index":988,"title":{},"body":{"components/FormDeleteAppointmentComponent.html":{}}}],["appointment.component.ts:22",{"_index":986,"title":{},"body":{"components/FormDeleteAppointmentComponent.html":{}}}],["appointment.component.ts:23",{"_index":1037,"title":{},"body":{"components/FormNewAppointmentComponent.html":{}}}],["appointment.component.ts:24",{"_index":1038,"title":{},"body":{"components/FormNewAppointmentComponent.html":{}}}],["appointment.component.ts:25",{"_index":980,"title":{},"body":{"components/FormDeleteAppointmentComponent.html":{},"components/FormNewAppointmentComponent.html":{}}}],["appointment.component.ts:26",{"_index":1039,"title":{},"body":{"components/FormNewAppointmentComponent.html":{}}}],["appointment.component.ts:27",{"_index":1047,"title":{},"body":{"components/FormNewAppointmentComponent.html":{}}}],["appointment.component.ts:28",{"_index":1054,"title":{},"body":{"components/FormNewAppointmentComponent.html":{}}}],["appointment.component.ts:29",{"_index":987,"title":{},"body":{"components/FormDeleteAppointmentComponent.html":{},"components/FormNewAppointmentComponent.html":{}}}],["appointment.component.ts:30",{"_index":1053,"title":{},"body":{"components/FormNewAppointmentComponent.html":{}}}],["appointment.component.ts:35",{"_index":1051,"title":{},"body":{"components/FormNewAppointmentComponent.html":{}}}],["appointment.component.ts:36",{"_index":985,"title":{},"body":{"components/FormDeleteAppointmentComponent.html":{},"components/FormNewAppointmentComponent.html":{}}}],["appointment.component.ts:37",{"_index":1052,"title":{},"body":{"components/FormNewAppointmentComponent.html":{}}}],["appointment.component.ts:38",{"_index":1048,"title":{},"body":{"components/FormNewAppointmentComponent.html":{}}}],["appointment.component.ts:40",{"_index":984,"title":{},"body":{"components/FormDeleteAppointmentComponent.html":{}}}],["appointment.component.ts:41",{"_index":1036,"title":{},"body":{"components/FormNewAppointmentComponent.html":{}}}],["appointment.component.ts:45",{"_index":1049,"title":{},"body":{"components/FormNewAppointmentComponent.html":{}}}],["appointment.component.ts:57",{"_index":1046,"title":{},"body":{"components/FormNewAppointmentComponent.html":{}}}],["appointment.component.ts:61",{"_index":983,"title":{},"body":{"components/FormDeleteAppointmentComponent.html":{}}}],["appointment.component.ts:62",{"_index":1045,"title":{},"body":{"components/FormNewAppointmentComponent.html":{}}}],["appointment.component.ts:67",{"_index":1042,"title":{},"body":{"components/FormNewAppointmentComponent.html":{}}}],["appointment.component.ts:71",{"_index":1043,"title":{},"body":{"components/FormNewAppointmentComponent.html":{}}}],["appointment.description",{"_index":336,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["appointment.patient.firstname",{"_index":332,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["appointment.patient.id",{"_index":335,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["appointment.patient.lastname",{"_index":333,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["appointment/appointment.component",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["appointment/form",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"components/AppointmentComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/PatientComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["appointmentcolumns",{"_index":258,"title":{},"body":{"classes/Appointment.html":{},"components/AppointmentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["appointmentcomponent",{"_index":78,"title":{"components/AppointmentComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppointmentComponent.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appointmentdate",{"_index":1060,"title":{},"body":{"components/FormNewAppointmentComponent.html":{}}}],["appointmentid",{"_index":421,"title":{},"body":{"injectables/AppointmentService.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{}}}],["appointmentmade",{"_index":1092,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["appointmentname",{"_index":977,"title":{},"body":{"components/FormDeleteAppointmentComponent.html":{}}}],["appointmentobservable",{"_index":278,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["appointmentrecord",{"_index":249,"title":{"classes/AppointmentRecord.html":{}},"body":{"classes/Appointment.html":{},"classes/AppointmentRecord.html":{},"injectables/AppointmentService.html":{},"components/FormAppointmentAddNoteComponent.html":{},"coverage.html":{}}}],["appointmentrecord.notes",{"_index":954,"title":{},"body":{"components/FormAppointmentAddNoteComponent.html":{}}}],["appointments",{"_index":266,"title":{},"body":{"components/AppointmentComponent.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{}}}],["appointments.map((a",{"_index":630,"title":{},"body":{"components/CalendarComponent.html":{}}}],["appointments.map(appointment",{"_index":330,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["appointmentservice",{"_index":292,"title":{"injectables/AppointmentService.html":{}},"body":{"components/AppointmentComponent.html":{},"injectables/AppointmentService.html":{},"components/CalendarComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormNewAppointmentComponent.html":{},"coverage.html":{}}}],["appointmentservice.deleteappointment",{"_index":975,"title":{},"body":{"components/FormDeleteAppointmentComponent.html":{}}}],["appointmentservice.getall",{"_index":991,"title":{},"body":{"components/FormDeleteAppointmentComponent.html":{}}}],["appointmentservice.getall().pipe",{"_index":325,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["appointmenttime",{"_index":1062,"title":{},"body":{"components/FormNewAppointmentComponent.html":{}}}],["appointmenturl",{"_index":410,"title":{},"body":{"injectables/AppointmentService.html":{}}}],["approutingmodule",{"_index":241,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules.html":{}}}],["array",{"_index":1272,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{},"components/ListComponent.html":{},"classes/Patient.html":{},"classes/Prescription.html":{}}}],["assignments",{"_index":1128,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["async",{"_index":1248,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{},"components/PatientComponent.html":{}}}],["attribute",{"_index":1130,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["attributes",{"_index":1164,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["ausblenden",{"_index":1481,"title":{},"body":{"components/ListComponent.html":{}}}],["auth",{"_index":498,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/RequestInterceptor.html":{},"injectables/UserService.html":{}}}],["authenticates",{"_index":473,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authentication",{"_index":477,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authenticationservice",{"_index":471,"title":{"injectables/AuthenticationService.html":{}},"body":{"injectables/AuthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"coverage.html":{}}}],["authguard",{"_index":441,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["authhash",{"_index":487,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authorization",{"_index":491,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/RequestInterceptor.html":{}}}],["auto",{"_index":915,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/NavigationComponent.html":{}}}],["autocomplete",{"_index":1301,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{},"injectables/MedicineService.html":{}}}],["autocomplete(value",{"_index":1552,"title":{},"body":{"injectables/MedicineService.html":{}}}],["autoopen",{"_index":799,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["available",{"_index":1741,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"modules.html":{}}}],["avoid",{"_index":1327,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["await",{"_index":1316,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{},"components/PatientComponent.html":{}}}],["backend",{"_index":1754,"title":{},"body":{"injectables/UserService.html":{}}}],["background",{"_index":537,"title":{},"body":{"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{}}}],["baden",{"_index":1199,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["based",{"_index":730,"title":{},"body":{"components/ContentCardComponent.html":{}}}],["basic",{"_index":492,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/RequestInterceptor.html":{}}}],["basicinfoform",{"_index":1093,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["basisinformationen",{"_index":1189,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["bayern",{"_index":1201,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["bearbeiten",{"_index":358,"title":{},"body":{"components/AppointmentComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/PatientComponent.html":{}}}],["bearbeiten'//`alle",{"_index":362,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["before",{"_index":1775,"title":{},"body":{"classes/ValidateUniqueValues.html":{}}}],["beforedayviewrender",{"_index":572,"title":{},"body":{"components/CalendarComponent.html":{}}}],["beforedayviewrender(dayview",{"_index":578,"title":{},"body":{"components/CalendarComponent.html":{}}}],["beim",{"_index":1336,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["bereits",{"_index":1197,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["berlin",{"_index":1202,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["beschwerde",{"_index":263,"title":{},"body":{"classes/Appointment.html":{},"miscellaneous/variables.html":{}}}],["between",{"_index":500,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CalendarComponent.html":{}}}],["birthday",{"_index":827,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["black",{"_index":545,"title":{},"body":{"components/BottomSheetComponent.html":{},"components/ListComponent.html":{}}}],["blue",{"_index":621,"title":{},"body":{"components/CalendarComponent.html":{},"miscellaneous/variables.html":{}}}],["bodybackgroundcolor",{"_index":812,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["boolean",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/ContentCardComponent.html":{},"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/ListComponent.html":{}}}],["bootstrap",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["border",{"_index":1228,"title":{},"body":{"components/FormNewPatientComponent.html":{},"components/LoginComponent.html":{}}}],["bottom",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppointmentComponent.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{}}}],["bottomsheet",{"_index":293,"title":{},"body":{"components/AppointmentComponent.html":{},"components/PatientComponent.html":{}}}],["bottomsheetcomponent",{"_index":80,"title":{"components/BottomSheetComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppointmentComponent.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{},"coverage.html":{},"overview.html":{}}}],["bottomsheetref",{"_index":519,"title":{},"body":{"components/BottomSheetComponent.html":{}}}],["box",{"_index":1352,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{},"components/ListComponent.html":{}}}],["brandenburg",{"_index":1203,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["break",{"_index":380,"title":{},"body":{"components/AppointmentComponent.html":{},"components/PatientComponent.html":{}}}],["breakpointobserver",{"_index":713,"title":{},"body":{"components/ContentCardComponent.html":{},"components/NavigationComponent.html":{}}}],["breakpoints",{"_index":734,"title":{},"body":{"components/ContentCardComponent.html":{},"components/NavigationComponent.html":{}}}],["breakpoints.medium",{"_index":1584,"title":{},"body":{"components/NavigationComponent.html":{}}}],["breakpoints.small",{"_index":1583,"title":{},"body":{"components/NavigationComponent.html":{}}}],["bremen",{"_index":1204,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["browse",{"_index":1869,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["btoa(username",{"_index":488,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["buildingnumber",{"_index":9,"title":{},"body":{"classes/Address.html":{},"components/FormNewPatientComponent.html":{}}}],["business",{"_index":272,"title":{},"body":{"components/AppointmentComponent.html":{},"components/PatientComponent.html":{}}}],["button",{"_index":674,"title":{},"body":{"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/LoginComponent.html":{}}}],["button.description",{"_index":530,"title":{},"body":{"components/BottomSheetComponent.html":{}}}],["button.icon",{"_index":528,"title":{},"body":{"components/BottomSheetComponent.html":{}}}],["button.text",{"_index":529,"title":{},"body":{"components/BottomSheetComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/LoginComponent.html":{}}}],["buttoncolor",{"_index":814,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["buttonfeedback",{"_index":930,"title":{},"body":{"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{}}}],["buttonfeedback(tempbutton",{"_index":937,"title":{},"body":{"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{}}}],["buttonid",{"_index":306,"title":{},"body":{"components/AppointmentComponent.html":{},"components/PatientComponent.html":{}}}],["buttons",{"_index":348,"title":{},"body":{"components/AppointmentComponent.html":{},"components/PatientComponent.html":{}}}],["cal",{"_index":656,"title":{},"body":{"components/CalendarComponent.html":{}}}],["calendar",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"components/CalendarComponent.html":{},"classes/CustomDateFormatter.html":{},"dependencies.html":{}}}],["calendar'},{'name",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{}}}],["calendar.component.css",{"_index":561,"title":{},"body":{"components/CalendarComponent.html":{}}}],["calendar.component.html",{"_index":562,"title":{},"body":{"components/CalendarComponent.html":{}}}],["calendar/calendar.component",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["calendar/date",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["calendarcomponent",{"_index":83,"title":{"components/CalendarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppointmentComponent.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{},"coverage.html":{},"overview.html":{}}}],["calendardate",{"_index":661,"title":{},"body":{"components/CalendarComponent.html":{}}}],["calendardateformatter",{"_index":559,"title":{},"body":{"components/CalendarComponent.html":{},"classes/CustomDateFormatter.html":{}}}],["calendardayview",{"_index":1874,"title":{},"body":{"todo.html":{}}}],["calendarevent",{"_index":607,"title":{},"body":{"components/CalendarComponent.html":{}}}],["calendarmodule",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["calendarmodule.forroot",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["calendarmonthviewday",{"_index":597,"title":{},"body":{"components/CalendarComponent.html":{}}}],["call",{"_index":1785,"title":{},"body":{"classes/ValidateUniqueValues.html":{}}}],["calling",{"_index":1776,"title":{},"body":{"classes/ValidateUniqueValues.html":{}}}],["calls",{"_index":974,"title":{},"body":{"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{}}}],["came",{"_index":1303,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["canactivate",{"_index":454,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canactivate(route",{"_index":458,"title":{},"body":{"guards/AuthGuard.html":{}}}],["cancel",{"_index":1612,"title":{},"body":{"components/NavigationComponent.html":{}}}],["canhideolder",{"_index":1396,"title":{},"body":{"components/ListComponent.html":{}}}],["capabilities",{"_index":1465,"title":{},"body":{"components/ListComponent.html":{}}}],["carbon",{"_index":823,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["card",{"_index":703,"title":{},"body":{"components/ContentCardComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/LoginComponent.html":{}}}],["card'},{'name",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{}}}],["card.component",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["card.component.css",{"_index":704,"title":{},"body":{"components/ContentCardComponent.html":{}}}],["card.component.html",{"_index":705,"title":{},"body":{"components/ContentCardComponent.html":{}}}],["card.component.ts",{"_index":693,"title":{},"body":{"components/ContentCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:18",{"_index":716,"title":{},"body":{"components/ContentCardComponent.html":{}}}],["card.component.ts:19",{"_index":715,"title":{},"body":{"components/ContentCardComponent.html":{}}}],["card.component.ts:20",{"_index":717,"title":{},"body":{"components/ContentCardComponent.html":{}}}],["card.component.ts:23",{"_index":729,"title":{},"body":{"components/ContentCardComponent.html":{}}}],["card.component.ts:30",{"_index":714,"title":{},"body":{"components/ContentCardComponent.html":{}}}],["card.component.ts:34",{"_index":718,"title":{},"body":{"components/ContentCardComponent.html":{}}}],["card/content",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"components/ContentCardComponent.html":{},"coverage.html":{}}}],["cards",{"_index":706,"title":{},"body":{"components/ContentCardComponent.html":{}}}],["case",{"_index":378,"title":{},"body":{"components/AppointmentComponent.html":{},"components/ListComponent.html":{},"components/PatientComponent.html":{}}}],["catcherror",{"_index":912,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["cd",{"_index":1403,"title":{},"body":{"components/ListComponent.html":{}}}],["cell",{"_index":1493,"title":{},"body":{"components/ListComponent.html":{}}}],["center",{"_index":687,"title":{},"body":{"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/LoginComponent.html":{}}}],["change",{"_index":857,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["changedetection",{"_index":557,"title":{},"body":{"components/CalendarComponent.html":{}}}],["changedetectionstrategy",{"_index":604,"title":{},"body":{"components/CalendarComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":558,"title":{},"body":{"components/CalendarComponent.html":{}}}],["changedetectorref",{"_index":1401,"title":{},"body":{"components/ListComponent.html":{}}}],["check",{"_index":1308,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{},"components/LoginComponent.html":{},"classes/ValidateUniqueValues.html":{}}}],["checkbox",{"_index":1488,"title":{},"body":{"components/ListComponent.html":{}}}],["checking",{"_index":1782,"title":{},"body":{"classes/ValidateUniqueValues.html":{}}}],["checks",{"_index":1497,"title":{},"body":{"components/LoginComponent.html":{}}}],["checkuniquevalue",{"_index":1696,"title":{},"body":{"injectables/PatientService.html":{}}}],["checkuniquevalue(value",{"_index":1705,"title":{},"body":{"injectables/PatientService.html":{}}}],["city",{"_index":10,"title":{},"body":{"classes/Address.html":{},"components/FormNewPatientComponent.html":{},"components/ListComponent.html":{}}}],["class",{"_index":0,"title":{"classes/Address.html":{},"classes/Appointment.html":{},"classes/AppointmentRecord.html":{},"classes/CustomDateFormatter.html":{},"classes/DateConfig.html":{},"classes/Disease.html":{},"classes/Medicine.html":{},"classes/Patient.html":{},"classes/Prescription.html":{},"classes/User.html":{},"classes/ValidateUniqueValues.html":{}},"body":{"classes/Address.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Appointment.html":{},"components/AppointmentComponent.html":{},"classes/AppointmentRecord.html":{},"injectables/AppointmentService.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"classes/CustomDateFormatter.html":{},"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{},"classes/Disease.html":{},"interceptors/ErrorInterceptor.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"classes/Medicine.html":{},"injectables/MedicineService.html":{},"components/NavigationComponent.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"classes/Prescription.html":{},"interceptors/RequestInterceptor.html":{},"classes/User.html":{},"injectables/UserService.html":{},"classes/ValidateUniqueValues.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/Address.html":{},"classes/Appointment.html":{},"classes/AppointmentRecord.html":{},"classes/CustomDateFormatter.html":{},"classes/DateConfig.html":{},"classes/Disease.html":{},"classes/Medicine.html":{},"classes/Patient.html":{},"classes/Prescription.html":{},"classes/User.html":{},"classes/ValidateUniqueValues.html":{},"overview.html":{}}}],["cleared",{"_index":1784,"title":{},"body":{"classes/ValidateUniqueValues.html":{}}}],["clicked",{"_index":1300,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["clickedelementdata",{"_index":1474,"title":{},"body":{"components/ListComponent.html":{}}}],["clockface",{"_index":818,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["clockfacebackgroundcolor",{"_index":819,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["clockfacetimeinactivecolor",{"_index":822,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["clockhandcolor",{"_index":821,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["close",{"_index":1095,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["closeafter",{"_index":938,"title":{},"body":{"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{}}}],["closeafter=false",{"_index":962,"title":{},"body":{"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{}}}],["cluster_appmodule",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_appcomponent_providers",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":898,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["cold",{"_index":1779,"title":{},"body":{"classes/ValidateUniqueValues.html":{}}}],["color",{"_index":538,"title":{},"body":{"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{}}}],["colors",{"_index":615,"title":{},"body":{"components/CalendarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["colors.blue",{"_index":635,"title":{},"body":{"components/CalendarComponent.html":{}}}],["cols",{"_index":726,"title":{},"body":{"components/ContentCardComponent.html":{}}}],["column",{"_index":731,"title":{},"body":{"components/ContentCardComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/LoginComponent.html":{}}}],["column.value",{"_index":1482,"title":{},"body":{"components/ListComponent.html":{}}}],["columns",{"_index":1397,"title":{},"body":{"components/ListComponent.html":{}}}],["communication",{"_index":403,"title":{},"body":{"injectables/AppointmentService.html":{},"injectables/MedicineService.html":{},"injectables/PatientService.html":{},"injectables/UserService.html":{}}}],["component",{"_index":30,"title":{"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{},"coverage.html":{}}}],["component'},{'name",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{}}}],["component_template",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{}}}],["components",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{},"index.html":{},"overview.html":{}}}],["config",{"_index":810,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["confirm",{"_index":972,"title":{},"body":{"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{}}}],["confirmation",{"_index":976,"title":{},"body":{"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{}}}],["conflict",{"_index":1086,"title":{},"body":{"components/FormNewAppointmentComponent.html":{},"components/FormNewPrescriptionComponent.html":{}}}],["consider",{"_index":721,"title":{},"body":{"components/ContentCardComponent.html":{}}}],["console.log(\"datechange",{"_index":848,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["console.log(\"time",{"_index":856,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["console.log(a",{"_index":342,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["console.log(patient",{"_index":1721,"title":{},"body":{"injectables/PatientService.html":{}}}],["console.log(result",{"_index":388,"title":{},"body":{"components/AppointmentComponent.html":{},"components/PatientComponent.html":{}}}],["console.log(this.appointmentid",{"_index":992,"title":{},"body":{"components/FormDeleteAppointmentComponent.html":{}}}],["console.log(this.f1",{"_index":1162,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["console.log(this.patientid",{"_index":952,"title":{},"body":{"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeletePatientComponent.html":{}}}],["console.log(value",{"_index":1566,"title":{},"body":{"injectables/MedicineService.html":{}}}],["const",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Appointment.html":{},"components/AppointmentComponent.html":{},"injectables/AuthenticationService.html":{},"components/CalendarComponent.html":{},"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/ListComponent.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":290,"title":{},"body":{"components/AppointmentComponent.html":{},"injectables/AppointmentService.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/DatetimepickerComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"injectables/MedicineService.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"classes/Prescription.html":{},"injectables/UserService.html":{}}}],["constructor(adapter",{"_index":865,"title":{},"body":{"components/DatetimepickerComponent.html":{}}}],["constructor(appointmentservice",{"_index":291,"title":{},"body":{"components/AppointmentComponent.html":{},"components/CalendarComponent.html":{}}}],["constructor(authenticationservice",{"_index":902,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["constructor(bottomsheetref",{"_index":516,"title":{},"body":{"components/BottomSheetComponent.html":{}}}],["constructor(breakpointobserver",{"_index":712,"title":{},"body":{"components/ContentCardComponent.html":{},"components/NavigationComponent.html":{}}}],["constructor(cd",{"_index":1400,"title":{},"body":{"components/ListComponent.html":{}}}],["constructor(data",{"_index":933,"title":{},"body":{"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{}}}],["constructor(http",{"_index":415,"title":{},"body":{"injectables/AppointmentService.html":{},"injectables/AuthenticationService.html":{},"injectables/MedicineService.html":{},"injectables/PatientService.html":{},"injectables/UserService.html":{}}}],["constructor(patientservice",{"_index":1375,"title":{},"body":{"components/HomeComponent.html":{},"components/PatientComponent.html":{}}}],["constructor(private",{"_index":435,"title":{},"body":{"injectables/AppointmentService.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"injectables/MedicineService.html":{},"components/NavigationComponent.html":{},"injectables/PatientService.html":{},"injectables/UserService.html":{}}}],["constructor(route",{"_index":1504,"title":{},"body":{"components/LoginComponent.html":{}}}],["constructor(router",{"_index":455,"title":{},"body":{"guards/AuthGuard.html":{}}}],["container",{"_index":669,"title":{},"body":{"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{},"components/FormNewPatientComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{}}}],["content",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppointmentComponent.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{},"interceptors/RequestInterceptor.html":{}}}],["contentcard",{"_index":1371,"title":{},"body":{"components/HomeComponent.html":{}}}],["contentcardcomponent",{"_index":85,"title":{"components/ContentCardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppointmentComponent.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{},"coverage.html":{},"overview.html":{}}}],["control",{"_index":1769,"title":{},"body":{"classes/ValidateUniqueValues.html":{}}}],["control.value",{"_index":1793,"title":{},"body":{"classes/ValidateUniqueValues.html":{}}}],["controller",{"_index":1763,"title":{},"body":{"classes/ValidateUniqueValues.html":{}}}],["convert",{"_index":1167,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["converted",{"_index":1307,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["core",{"_index":1846,"title":{},"body":{"dependencies.html":{}}}],["coverage",{"_index":1796,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":1186,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["created",{"_index":1159,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["createpatient",{"_index":1096,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["createtable",{"_index":1392,"title":{},"body":{"components/ListComponent.html":{}}}],["createvalidator",{"_index":1765,"title":{},"body":{"classes/ValidateUniqueValues.html":{}}}],["createvalidator(patientservice",{"_index":1766,"title":{},"body":{"classes/ValidateUniqueValues.html":{}}}],["creation",{"_index":1029,"title":{},"body":{"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{}}}],["credentials",{"_index":446,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"interceptors/RequestInterceptor.html":{}}}],["crud",{"_index":407,"title":{},"body":{"injectables/AppointmentService.html":{},"injectables/MedicineService.html":{},"injectables/PatientService.html":{}}}],["current",{"_index":1064,"title":{},"body":{"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{}}}],["currentdate",{"_index":1242,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["currentuser",{"_index":447,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/RequestInterceptor.html":{}}}],["custom",{"_index":612,"title":{},"body":{"components/CalendarComponent.html":{}}}],["customdateformatter",{"_index":560,"title":{"classes/CustomDateFormatter.html":{}},"body":{"components/CalendarComponent.html":{},"classes/CustomDateFormatter.html":{},"coverage.html":{}}}],["customtheme",{"_index":811,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["d1e8ff",{"_index":623,"title":{},"body":{"components/CalendarComponent.html":{},"miscellaneous/variables.html":{}}}],["dashboard",{"_index":738,"title":{},"body":{"components/ContentCardComponent.html":{},"components/HomeComponent.html":{}}}],["data",{"_index":347,"title":{},"body":{"components/AppointmentComponent.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/ListComponent.html":{},"components/PatientComponent.html":{},"injectables/UserService.html":{}}}],["data.subtitle",{"_index":527,"title":{},"body":{"components/BottomSheetComponent.html":{}}}],["data.title",{"_index":526,"title":{},"body":{"components/BottomSheetComponent.html":{}}}],["database",{"_index":1312,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["dataobservable",{"_index":1398,"title":{},"body":{"components/ListComponent.html":{}}}],["datasource",{"_index":1386,"title":{},"body":{"components/ListComponent.html":{}}}],["date",{"_index":585,"title":{},"body":{"components/CalendarComponent.html":{},"classes/CustomDateFormatter.html":{},"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/ListComponent.html":{},"classes/Prescription.html":{},"coverage.html":{},"dependencies.html":{}}}],["date(\"1991",{"_index":1452,"title":{},"body":{"components/ListComponent.html":{}}}],["date(1980",{"_index":836,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["date(item.dateofbirth.split('.').reverse().join",{"_index":1457,"title":{},"body":{"components/ListComponent.html":{}}}],["date(item.datetime.split('.').reverse().join",{"_index":1458,"title":{},"body":{"components/ListComponent.html":{}}}],["date_formats",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["datea11ylabel",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["dateadapter",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{},"overview.html":{}}}],["dateadaptercalendar",{"_index":188,"title":{},"body":{"modules/AppModule.html":{}}}],["dateadded",{"_index":395,"title":{},"body":{"classes/AppointmentRecord.html":{}}}],["datechange",{"_index":863,"title":{},"body":{"components/DatetimepickerComponent.html":{}}}],["datechange(date",{"_index":875,"title":{},"body":{"components/DatetimepickerComponent.html":{}}}],["dateconfig",{"_index":763,"title":{"classes/DateConfig.html":{}},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{},"coverage.html":{}}}],["dateform",{"_index":806,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["dateformatterparams",{"_index":755,"title":{},"body":{"classes/CustomDateFormatter.html":{}}}],["dateinput",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["daten",{"_index":363,"title":{},"body":{"components/AppointmentComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewPatientComponent.html":{},"components/PatientComponent.html":{}}}],["dateofbirth",{"_index":1142,"title":{},"body":{"components/FormNewPatientComponent.html":{},"components/ListComponent.html":{},"classes/Patient.html":{},"miscellaneous/variables.html":{}}}],["dateonly",{"_index":795,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["datepickerautoopen",{"_index":1035,"title":{},"body":{"components/FormNewAppointmentComponent.html":{}}}],["datepipe",{"_index":759,"title":{},"body":{"classes/CustomDateFormatter.html":{}}}],["datepipe(locale).transform(date",{"_index":760,"title":{},"body":{"classes/CustomDateFormatter.html":{}}}],["datetime",{"_index":250,"title":{},"body":{"classes/Appointment.html":{},"components/AppointmentComponent.html":{},"components/CalendarComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/ListComponent.html":{},"classes/Prescription.html":{},"miscellaneous/variables.html":{}}}],["datetimepicker",{"_index":786,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["datetimepicker'},{'name",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{}}}],["datetimepicker.component.css",{"_index":788,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["datetimepicker.component.html",{"_index":787,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["datetimepicker/datetimepicker.component",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["datetimepickercomponent",{"_index":88,"title":{"components/DatetimepickerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppointmentComponent.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dateupdate",{"_index":800,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["datum",{"_index":262,"title":{},"body":{"classes/Appointment.html":{},"miscellaneous/variables.html":{}}}],["datum/notizen",{"_index":359,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["day",{"_index":645,"title":{},"body":{"components/CalendarComponent.html":{}}}],["dayclicked",{"_index":573,"title":{},"body":{"components/CalendarComponent.html":{}}}],["dayclicked(ev",{"_index":581,"title":{},"body":{"components/CalendarComponent.html":{}}}],["days_of_week",{"_index":609,"title":{},"body":{"components/CalendarComponent.html":{}}}],["days_of_week.monday",{"_index":602,"title":{},"body":{"components/CalendarComponent.html":{}}}],["dayview",{"_index":563,"title":{},"body":{"components/CalendarComponent.html":{}}}],["dayviewhour",{"_index":579,"title":{},"body":{"components/CalendarComponent.html":{},"classes/CustomDateFormatter.html":{}}}],["dayviewhour(undefined",{"_index":754,"title":{},"body":{"classes/CustomDateFormatter.html":{}}}],["dd.mm.yyyy",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"components/CalendarComponent.html":{},"components/ListComponent.html":{},"miscellaneous/variables.html":{}}}],["dd.mm.yyyy').todate",{"_index":1144,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["de",{"_index":594,"title":{},"body":{"components/CalendarComponent.html":{},"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["debounced",{"_index":1788,"title":{},"body":{"classes/ValidateUniqueValues.html":{}}}],["debouncetime",{"_index":1280,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["debouncetime(300",{"_index":1290,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["declarations",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decorators",{"_index":314,"title":{},"body":{"components/AppointmentComponent.html":{},"components/BottomSheetComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/ListComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{}}}],["deep",{"_index":1361,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["default",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"injectables/AppointmentService.html":{},"injectables/AuthenticationService.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"injectables/MedicineService.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"injectables/UserService.html":{},"classes/ValidateUniqueValues.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":18,"title":{},"body":{"classes/Address.html":{},"components/AppComponent.html":{},"classes/Appointment.html":{},"components/AppointmentComponent.html":{},"classes/AppointmentRecord.html":{},"injectables/AppointmentService.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"classes/CustomDateFormatter.html":{},"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{},"classes/Disease.html":{},"interceptors/ErrorInterceptor.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"classes/Medicine.html":{},"injectables/MedicineService.html":{},"components/NavigationComponent.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"classes/Prescription.html":{},"interceptors/RequestInterceptor.html":{},"classes/User.html":{},"injectables/UserService.html":{},"classes/ValidateUniqueValues.html":{}}}],["delete",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppointmentComponent.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{},"coverage.html":{}}}],["delete_appointment",{"_index":368,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["delete_patient",{"_index":1674,"title":{},"body":{"components/PatientComponent.html":{}}}],["deleteappointment",{"_index":412,"title":{},"body":{"injectables/AppointmentService.html":{}}}],["deleteappointment(appointmentid",{"_index":423,"title":{},"body":{"injectables/AppointmentService.html":{}}}],["deletemedicine",{"_index":1547,"title":{},"body":{"injectables/MedicineService.html":{}}}],["deletemedicine(medicineid",{"_index":1554,"title":{},"body":{"injectables/MedicineService.html":{}}}],["deletepatient",{"_index":1697,"title":{},"body":{"injectables/PatientService.html":{}}}],["deletepatient(patientid",{"_index":1707,"title":{},"body":{"injectables/PatientService.html":{}}}],["deletion",{"_index":973,"title":{},"body":{"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{}}}],["den",{"_index":1005,"title":{},"body":{"components/FormDeleteAppointmentComponent.html":{}}}],["dependencies",{"_index":119,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deps",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"overview.html":{}}}],["des",{"_index":360,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["description",{"_index":251,"title":{},"body":{"classes/Appointment.html":{},"components/AppointmentComponent.html":{},"injectables/AppointmentService.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/DatetimepickerComponent.html":{},"classes/Disease.html":{},"interceptors/ErrorInterceptor.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"classes/Medicine.html":{},"injectables/MedicineService.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"interceptors/RequestInterceptor.html":{},"injectables/UserService.html":{},"classes/ValidateUniqueValues.html":{},"miscellaneous/variables.html":{}}}],["details",{"_index":497,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["dial",{"_index":816,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["dialbackgroundcolor",{"_index":817,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["dialog",{"_index":271,"title":{},"body":{"components/AppointmentComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/PatientComponent.html":{}}}],["dialogref",{"_index":383,"title":{},"body":{"components/AppointmentComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/PatientComponent.html":{}}}],["dialogref.afterclosed().subscribe(result",{"_index":387,"title":{},"body":{"components/AppointmentComponent.html":{},"components/PatientComponent.html":{}}}],["die",{"_index":1195,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["direction",{"_index":542,"title":{},"body":{"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{}}}],["directive",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{}}}],["directives",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{}}}],["directly",{"_index":798,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{},"classes/ValidateUniqueValues.html":{}}}],["disabled",{"_index":689,"title":{},"body":{"components/CalendarComponent.html":{}}}],["disabled=true",{"_index":1365,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["disease",{"_index":886,"title":{"classes/Disease.html":{}},"body":{"classes/Disease.html":{},"coverage.html":{}}}],["diseaseidlist",{"_index":1620,"title":{},"body":{"classes/Patient.html":{}}}],["diseases",{"_index":1687,"title":{},"body":{"components/PatientComponent.html":{}}}],["display",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"components/CalendarComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["displayedcolumns",{"_index":1387,"title":{},"body":{"components/ListComponent.html":{}}}],["displayfn",{"_index":1247,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["displayfn(med",{"_index":1256,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["div",{"_index":1362,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["div.new",{"_index":1234,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["documentation",{"_index":1797,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{}}}],["done",{"_index":1222,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["duplicate",{"_index":1328,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["duration",{"_index":1001,"title":{},"body":{"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{}}}],["dynamic",{"_index":1844,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":267,"title":{},"body":{"components/AppointmentComponent.html":{},"components/ContentCardComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{}}}],["e",{"_index":301,"title":{},"body":{"components/AppointmentComponent.html":{},"components/BottomSheetComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/ListComponent.html":{},"components/PatientComponent.html":{}}}],["e.checked",{"_index":1468,"title":{},"body":{"components/ListComponent.html":{}}}],["e.g",{"_index":1466,"title":{},"body":{"components/ListComponent.html":{}}}],["e3bc08",{"_index":625,"title":{},"body":{"components/CalendarComponent.html":{},"miscellaneous/variables.html":{}}}],["edit",{"_index":1672,"title":{},"body":{"components/PatientComponent.html":{}}}],["effectively",{"_index":1787,"title":{},"body":{"classes/ValidateUniqueValues.html":{}}}],["ein",{"_index":1670,"title":{},"body":{"components/PatientComponent.html":{}}}],["einen",{"_index":1664,"title":{},"body":{"components/PatientComponent.html":{}}}],["el.id",{"_index":1476,"title":{},"body":{"components/ListComponent.html":{}}}],["element",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{}}}],["element[column.id",{"_index":1483,"title":{},"body":{"components/ListComponent.html":{}}}],["elementref",{"_index":777,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{},"components/PatientComponent.html":{}}}],["email",{"_index":1145,"title":{},"body":{"components/FormNewPatientComponent.html":{},"classes/Patient.html":{}}}],["empty",{"_index":1732,"title":{},"body":{"classes/Prescription.html":{}}}],["end",{"_index":637,"title":{},"body":{"components/CalendarComponent.html":{},"components/FormNewPatientComponent.html":{},"miscellaneous/variables.html":{}}}],["endindex",{"_index":1900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["endpoint",{"_index":405,"title":{},"body":{"injectables/AppointmentService.html":{},"injectables/MedicineService.html":{},"injectables/PatientService.html":{},"injectables/UserService.html":{}}}],["entries",{"_index":1329,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{},"components/ListComponent.html":{}}}],["entries.filter(e",{"_index":1442,"title":{},"body":{"components/ListComponent.html":{}}}],["entrycomponents",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["environment",{"_index":431,"title":{},"body":{"injectables/AppointmentService.html":{},"injectables/AuthenticationService.html":{},"injectables/MedicineService.html":{},"injectables/PatientService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apilocal",{"_index":428,"title":{},"body":{"injectables/AppointmentService.html":{},"injectables/AuthenticationService.html":{},"injectables/MedicineService.html":{},"injectables/PatientService.html":{},"injectables/UserService.html":{}}}],["environments/environment",{"_index":432,"title":{},"body":{"injectables/AppointmentService.html":{},"injectables/AuthenticationService.html":{},"injectables/MedicineService.html":{},"injectables/PatientService.html":{},"injectables/UserService.html":{}}}],["err.error.message",{"_index":920,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["err.status",{"_index":914,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["err.statustext",{"_index":921,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["error",{"_index":453,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/ErrorInterceptor.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/LoginComponent.html":{}}}],["errorinterceptor",{"_index":128,"title":{"interceptors/ErrorInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/ErrorInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["es",{"_index":1343,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["ev",{"_index":583,"title":{},"body":{"components/CalendarComponent.html":{}}}],["ev.day",{"_index":647,"title":{},"body":{"components/CalendarComponent.html":{}}}],["ev.day.date",{"_index":644,"title":{},"body":{"components/CalendarComponent.html":{}}}],["ev.day.isweekend",{"_index":642,"title":{},"body":{"components/CalendarComponent.html":{}}}],["event",{"_index":1597,"title":{},"body":{"components/NavigationComponent.html":{}}}],["event.start",{"_index":667,"title":{},"body":{"components/CalendarComponent.html":{}}}],["event.title",{"_index":666,"title":{},"body":{"components/CalendarComponent.html":{}}}],["event.url.startswith('/login",{"_index":1600,"title":{},"body":{"components/NavigationComponent.html":{}}}],["eventemitter",{"_index":605,"title":{},"body":{"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/ListComponent.html":{}}}],["events",{"_index":564,"title":{},"body":{"components/CalendarComponent.html":{}}}],["exceeds",{"_index":1897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["excluded",{"_index":1792,"title":{},"body":{"classes/ValidateUniqueValues.html":{}}}],["excludedays",{"_index":565,"title":{},"body":{"components/CalendarComponent.html":{}}}],["exists",{"_index":1309,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["expansion",{"_index":1358,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["export",{"_index":26,"title":{},"body":{"classes/Address.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Appointment.html":{},"components/AppointmentComponent.html":{},"classes/AppointmentRecord.html":{},"injectables/AppointmentService.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"classes/CustomDateFormatter.html":{},"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{},"classes/Disease.html":{},"interceptors/ErrorInterceptor.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"classes/Medicine.html":{},"injectables/MedicineService.html":{},"components/NavigationComponent.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"classes/Prescription.html":{},"interceptors/RequestInterceptor.html":{},"classes/User.html":{},"injectables/UserService.html":{},"classes/ValidateUniqueValues.html":{}}}],["exports",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["extend",{"_index":1463,"title":{},"body":{"components/ListComponent.html":{}}}],["extends",{"_index":752,"title":{},"body":{"classes/CustomDateFormatter.html":{}}}],["external",{"_index":989,"title":{},"body":{"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPrescriptionComponent.html":{}}}],["f0f0f0",{"_index":820,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["f1",{"_index":1100,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["f2",{"_index":1101,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["fab",{"_index":748,"title":{},"body":{"components/ContentCardComponent.html":{}}}],["fabbutton",{"_index":709,"title":{},"body":{"components/ContentCardComponent.html":{}}}],["fabbuttononclick",{"_index":711,"title":{},"body":{"components/ContentCardComponent.html":{}}}],["fae3e3",{"_index":620,"title":{},"body":{"components/CalendarComponent.html":{},"miscellaneous/variables.html":{}}}],["fafafa",{"_index":744,"title":{},"body":{"components/ContentCardComponent.html":{}}}],["falsche",{"_index":1193,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["false",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/ContentCardComponent.html":{},"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"miscellaneous/variables.html":{}}}],["fb",{"_index":1057,"title":{},"body":{"components/FormNewAppointmentComponent.html":{},"components/FormNewPrescriptionComponent.html":{}}}],["fb.group",{"_index":1059,"title":{},"body":{"components/FormNewAppointmentComponent.html":{}}}],["fdf1ba",{"_index":626,"title":{},"body":{"components/CalendarComponent.html":{},"miscellaneous/variables.html":{}}}],["fehler",{"_index":1008,"title":{},"body":{"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{}}}],["fertig",{"_index":1221,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["fetches",{"_index":554,"title":{},"body":{"components/CalendarComponent.html":{}}}],["fff",{"_index":813,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["field",{"_index":970,"title":{},"body":{"components/FormAppointmentAddNoteComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{}}}],["field.mat",{"_index":1536,"title":{},"body":{"components/LoginComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/Address.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Appointment.html":{},"components/AppointmentComponent.html":{},"classes/AppointmentRecord.html":{},"injectables/AppointmentService.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"classes/CustomDateFormatter.html":{},"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{},"classes/Disease.html":{},"interceptors/ErrorInterceptor.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"classes/Medicine.html":{},"injectables/MedicineService.html":{},"components/NavigationComponent.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"classes/Prescription.html":{},"interceptors/RequestInterceptor.html":{},"classes/User.html":{},"injectables/UserService.html":{},"classes/ValidateUniqueValues.html":{},"coverage.html":{}}}],["filter",{"_index":1464,"title":{},"body":{"components/ListComponent.html":{},"components/NavigationComponent.html":{}}}],["filter(event",{"_index":1596,"title":{},"body":{"components/NavigationComponent.html":{}}}],["filterable",{"_index":1382,"title":{},"body":{"components/ListComponent.html":{}}}],["filteredentries",{"_index":1440,"title":{},"body":{"components/ListComponent.html":{}}}],["filteredmedicine",{"_index":1243,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["filtervalue",{"_index":1410,"title":{},"body":{"components/ListComponent.html":{}}}],["filtervalue.trim().tolowercase",{"_index":1471,"title":{},"body":{"components/ListComponent.html":{}}}],["finalize",{"_index":1282,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["first",{"_index":1319,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["firstname",{"_index":259,"title":{},"body":{"classes/Appointment.html":{},"components/AppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"classes/Patient.html":{},"miscellaneous/variables.html":{}}}],["fix",{"_index":1899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["flatobj",{"_index":331,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["flatobj.patient",{"_index":340,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["flex",{"_index":541,"title":{},"body":{"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{}}}],["flexible",{"_index":783,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["float",{"_index":1357,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["fns",{"_index":194,"title":{},"body":{"modules/AppModule.html":{},"components/CalendarComponent.html":{},"dependencies.html":{}}}],["font",{"_index":675,"title":{},"body":{"components/CalendarComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{}}}],["form",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppointmentComponent.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{}}}],["formappointmentaddnotecomponent",{"_index":90,"title":{"components/FormAppointmentAddNoteComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppointmentComponent.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{},"coverage.html":{},"overview.html":{}}}],["format",{"_index":1168,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["formatter.provider",{"_index":613,"title":{},"body":{"components/CalendarComponent.html":{}}}],["formatter.provider.ts",{"_index":751,"title":{},"body":{"classes/CustomDateFormatter.html":{},"coverage.html":{}}}],["formatter.provider.ts:10",{"_index":758,"title":{},"body":{"classes/CustomDateFormatter.html":{}}}],["formatter.provider.ts:6",{"_index":756,"title":{},"body":{"classes/CustomDateFormatter.html":{}}}],["formbuilder",{"_index":1055,"title":{},"body":{"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{}}}],["formcontrol",{"_index":778,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{},"components/FormNewPrescriptionComponent.html":{}}}],["formdeleteappointmentcomponent",{"_index":95,"title":{"components/FormDeleteAppointmentComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppointmentComponent.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{},"coverage.html":{},"overview.html":{}}}],["formdeletepatientcomponent",{"_index":97,"title":{"components/FormDeletePatientComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppointmentComponent.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{},"coverage.html":{},"overview.html":{}}}],["formerror",{"_index":929,"title":{},"body":{"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{}}}],["formerror.text",{"_index":1009,"title":{},"body":{"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPrescriptionComponent.html":{}}}],["formgroup",{"_index":779,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{}}}],["formnewappointmentcomponent",{"_index":99,"title":{"components/FormNewAppointmentComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppointmentComponent.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{},"coverage.html":{},"overview.html":{}}}],["formnewpatientcomponent",{"_index":101,"title":{"components/FormNewPatientComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppointmentComponent.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{},"coverage.html":{},"overview.html":{}}}],["formnewprescriptioncomponent",{"_index":102,"title":{"components/FormNewPrescriptionComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppointmentComponent.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{},"coverage.html":{},"overview.html":{}}}],["formsmodule",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["full",{"_index":1461,"title":{},"body":{"components/ListComponent.html":{}}}],["function",{"_index":1126,"title":{},"body":{"components/FormNewPatientComponent.html":{},"classes/ValidateUniqueValues.html":{},"coverage.html":{}}}],["functions",{"_index":408,"title":{"miscellaneous/functions.html":{}},"body":{"injectables/AppointmentService.html":{},"injectables/MedicineService.html":{},"injectables/PatientService.html":{},"miscellaneous/functions.html":{}}}],["für",{"_index":1342,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["geburtsdatum",{"_index":1636,"title":{},"body":{"classes/Patient.html":{},"miscellaneous/variables.html":{}}}],["gefunden",{"_index":1324,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["gelöscht",{"_index":1000,"title":{},"body":{"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{}}}],["gender",{"_index":1140,"title":{},"body":{"components/FormNewPatientComponent.html":{},"classes/Patient.html":{},"miscellaneous/variables.html":{}}}],["germanrangelabel",{"_index":1833,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["geschlecht",{"_index":1635,"title":{},"body":{"classes/Patient.html":{},"miscellaneous/variables.html":{}}}],["gespeichert",{"_index":1223,"title":{},"body":{"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{}}}],["get('userinput",{"_index":1288,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["getall",{"_index":413,"title":{},"body":{"injectables/AppointmentService.html":{},"injectables/MedicineService.html":{},"injectables/PatientService.html":{},"injectables/UserService.html":{}}}],["getf1",{"_index":1118,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["getf2",{"_index":1120,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["getgermanpaginatorintl",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getpatient",{"_index":1698,"title":{},"body":{"injectables/PatientService.html":{}}}],["getpatient(patientid",{"_index":1710,"title":{},"body":{"injectables/PatientService.html":{}}}],["gets",{"_index":698,"title":{},"body":{"components/ContentCardComponent.html":{},"components/NavigationComponent.html":{},"classes/ValidateUniqueValues.html":{}}}],["getting",{"_index":1314,"title":{"index.html":{},"todo.html":{}},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["gibt",{"_index":1344,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["graph",{"_index":1870,"title":{},"body":{"modules.html":{}}}],["gray",{"_index":1532,"title":{},"body":{"components/LoginComponent.html":{}}}],["grid",{"_index":740,"title":{},"body":{"components/ContentCardComponent.html":{}}}],["guard",{"_index":440,"title":{"guards/AuthGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":442,"title":{},"body":{"guards/AuthGuard.html":{}}}],["hamburg",{"_index":1205,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["hammerjs",{"_index":1850,"title":{},"body":{"dependencies.html":{}}}],["handleaddbutton",{"_index":1249,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["handleappointmentonclick",{"_index":283,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["handleappointmentonclick(e",{"_index":299,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["handlebottomsheetbutton",{"_index":284,"title":{},"body":{"components/AppointmentComponent.html":{},"components/PatientComponent.html":{}}}],["handlebottomsheetbutton(buttonid",{"_index":304,"title":{},"body":{"components/AppointmentComponent.html":{},"components/PatientComponent.html":{}}}],["handlecheckboxtoggle",{"_index":1393,"title":{},"body":{"components/ListComponent.html":{}}}],["handlecheckboxtoggle(e",{"_index":1412,"title":{},"body":{"components/ListComponent.html":{}}}],["handledatechange",{"_index":1033,"title":{},"body":{"components/FormNewAppointmentComponent.html":{}}}],["handledatechange(e",{"_index":1041,"title":{},"body":{"components/FormNewAppointmentComponent.html":{}}}],["handledeletebutton",{"_index":1250,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["handledeletebutton(selectedmedicine",{"_index":1261,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["handlefabbuttononclick",{"_index":707,"title":{},"body":{"components/ContentCardComponent.html":{},"components/PatientComponent.html":{}}}],["handlenewappointmentclose",{"_index":1097,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["handlenewappointmentclose(newappointment",{"_index":1105,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["handlenewbutton",{"_index":1251,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["handleokbutton",{"_index":931,"title":{},"body":{"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{}}}],["handleonclick",{"_index":515,"title":{},"body":{"components/BottomSheetComponent.html":{},"components/ListComponent.html":{}}}],["handleonclick(e",{"_index":520,"title":{},"body":{"components/BottomSheetComponent.html":{},"components/ListComponent.html":{}}}],["handlepatientonclick",{"_index":1640,"title":{},"body":{"components/PatientComponent.html":{}}}],["handlepatientonclick(e",{"_index":1649,"title":{},"body":{"components/PatientComponent.html":{}}}],["handletimechange",{"_index":1034,"title":{},"body":{"components/FormNewAppointmentComponent.html":{}}}],["handletimechange(e",{"_index":1044,"title":{},"body":{"components/FormNewAppointmentComponent.html":{}}}],["handleuserbutton",{"_index":1577,"title":{},"body":{"components/NavigationComponent.html":{}}}],["hasbackdrop",{"_index":346,"title":{},"body":{"components/AppointmentComponent.html":{},"components/PatientComponent.html":{}}}],["hash",{"_index":478,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["header",{"_index":668,"title":{},"body":{"components/CalendarComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"interceptors/RequestInterceptor.html":{}}}],["header[aria",{"_index":1364,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["headers",{"_index":490,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/RequestInterceptor.html":{}}}],["height",{"_index":679,"title":{},"body":{"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{}}}],["helper",{"_index":1125,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["here",{"_index":739,"title":{},"body":{"components/ContentCardComponent.html":{}}}],["hessen",{"_index":1206,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["heute",{"_index":659,"title":{},"body":{"components/CalendarComponent.html":{}}}],["hh:mm",{"_index":761,"title":{},"body":{"classes/CustomDateFormatter.html":{},"components/FormNewAppointmentComponent.html":{}}}],["hh:mm').isbefore(date.now",{"_index":1444,"title":{},"body":{"components/ListComponent.html":{}}}],["hh:mm').todate",{"_index":632,"title":{},"body":{"components/CalendarComponent.html":{}}}],["hidden",{"_index":948,"title":{},"body":{"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{}}}],["hide",{"_index":1487,"title":{},"body":{"components/ListComponent.html":{}}}],["hideolder",{"_index":1388,"title":{},"body":{"components/ListComponent.html":{}}}],["hinzufügen",{"_index":354,"title":{},"body":{"components/AppointmentComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/PatientComponent.html":{}}}],["holstein",{"_index":1218,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["home",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{}}}],["home.component.css",{"_index":1373,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.html",{"_index":1374,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.component",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["homecomponent",{"_index":104,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppointmentComponent.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{},"coverage.html":{},"overview.html":{}}}],["hometerminkalender",{"_index":1604,"title":{},"body":{"components/NavigationComponent.html":{}}}],["hour",{"_index":852,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["hours",{"_index":1080,"title":{},"body":{"components/FormNewAppointmentComponent.html":{}}}],["hoursegment.segments.foreach(segment",{"_index":652,"title":{},"body":{"components/CalendarComponent.html":{}}}],["hoursegmentclicked",{"_index":574,"title":{},"body":{"components/CalendarComponent.html":{}}}],["hoursegmentclicked(date",{"_index":584,"title":{},"body":{"components/CalendarComponent.html":{}}}],["howoften",{"_index":1539,"title":{},"body":{"classes/Medicine.html":{}}}],["html",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{}}}],["http",{"_index":418,"title":{},"body":{"injectables/AppointmentService.html":{},"injectables/AuthenticationService.html":{},"injectables/MedicineService.html":{},"injectables/PatientService.html":{},"injectables/UserService.html":{}}}],["http://192.168.0.31:8080/api",{"_index":1892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:8080/api",{"_index":1890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http_interceptors",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":416,"title":{},"body":{"injectables/AppointmentService.html":{},"injectables/AuthenticationService.html":{},"injectables/MedicineService.html":{},"injectables/PatientService.html":{},"injectables/UserService.html":{}}}],["httpclientmodule",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":909,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["httphandler",{"_index":907,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["httpheaders",{"_index":486,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["httpinterceptor",{"_index":910,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["httpoptions",{"_index":489,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["httprequest",{"_index":905,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["https://termin",{"_index":1716,"title":{},"body":{"injectables/PatientService.html":{},"miscellaneous/variables.html":{}}}],["icon",{"_index":350,"title":{},"body":{"components/AppointmentComponent.html":{},"components/BottomSheetComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{}}}],["id",{"_index":11,"title":{},"body":{"classes/Address.html":{},"classes/Appointment.html":{},"components/AppointmentComponent.html":{},"classes/AppointmentRecord.html":{},"classes/Disease.html":{},"components/ListComponent.html":{},"classes/Medicine.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"classes/Prescription.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":1473,"title":{},"body":{"components/ListComponent.html":{},"coverage.html":{}}}],["ignore",{"_index":327,"title":{},"body":{"components/AppointmentComponent.html":{},"components/CalendarComponent.html":{},"components/FormNewPrescriptionComponent.html":{}}}],["implements",{"_index":274,"title":{},"body":{"components/AppointmentComponent.html":{},"guards/AuthGuard.html":{},"components/CalendarComponent.html":{},"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/PatientComponent.html":{},"interceptors/RequestInterceptor.html":{}}}],["import",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Appointment.html":{},"components/AppointmentComponent.html":{},"injectables/AppointmentService.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"classes/CustomDateFormatter.html":{},"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"injectables/MedicineService.html":{},"components/NavigationComponent.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"classes/Prescription.html":{},"interceptors/RequestInterceptor.html":{},"injectables/UserService.html":{},"classes/ValidateUniqueValues.html":{}}}],["important",{"_index":535,"title":{},"body":{"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{}}}],["imports",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/Address.html":{},"components/AppComponent.html":{},"classes/Appointment.html":{},"components/AppointmentComponent.html":{},"classes/AppointmentRecord.html":{},"injectables/AppointmentService.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"classes/CustomDateFormatter.html":{},"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{},"classes/Disease.html":{},"interceptors/ErrorInterceptor.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"classes/Medicine.html":{},"injectables/MedicineService.html":{},"components/NavigationComponent.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"classes/Prescription.html":{},"interceptors/RequestInterceptor.html":{},"classes/User.html":{},"injectables/UserService.html":{},"classes/ValidateUniqueValues.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/Address.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Appointment.html":{},"components/AppointmentComponent.html":{},"classes/AppointmentRecord.html":{},"injectables/AppointmentService.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"classes/CustomDateFormatter.html":{},"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{},"classes/Disease.html":{},"interceptors/ErrorInterceptor.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"classes/Medicine.html":{},"injectables/MedicineService.html":{},"components/NavigationComponent.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"classes/Prescription.html":{},"interceptors/RequestInterceptor.html":{},"classes/User.html":{},"injectables/UserService.html":{},"classes/ValidateUniqueValues.html":{}}}],["information",{"_index":1673,"title":{},"body":{"components/PatientComponent.html":{}}}],["inherit",{"_index":1614,"title":{},"body":{"components/NavigationComponent.html":{}}}],["initialize",{"_index":1731,"title":{},"body":{"classes/Prescription.html":{}}}],["inject",{"_index":524,"title":{},"body":{"components/BottomSheetComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{}}}],["inject(mat_bottom_sheet_data",{"_index":522,"title":{},"body":{"components/BottomSheetComponent.html":{}}}],["inject(mat_dialog_data",{"_index":946,"title":{},"body":{"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{}}}],["injectable",{"_index":400,"title":{"injectables/AppointmentService.html":{},"injectables/AuthenticationService.html":{},"injectables/MedicineService.html":{},"injectables/PatientService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppointmentService.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/MedicineService.html":{},"injectables/PatientService.html":{},"interceptors/RequestInterceptor.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":401,"title":{},"body":{"injectables/AppointmentService.html":{},"injectables/AuthenticationService.html":{},"injectables/MedicineService.html":{},"injectables/PatientService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injection",{"_index":511,"title":{},"body":{"components/BottomSheetComponent.html":{}}}],["input",{"_index":733,"title":{},"body":{"components/ContentCardComponent.html":{},"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"classes/ValidateUniqueValues.html":{}}}],["input('canhideolder",{"_index":1433,"title":{},"body":{"components/ListComponent.html":{}}}],["input('columns",{"_index":1432,"title":{},"body":{"components/ListComponent.html":{}}}],["input('dataobservable",{"_index":1431,"title":{},"body":{"components/ListComponent.html":{}}}],["input('fabbutton",{"_index":736,"title":{},"body":{"components/ContentCardComponent.html":{}}}],["input('title",{"_index":735,"title":{},"body":{"components/ContentCardComponent.html":{}}}],["inputs",{"_index":708,"title":{},"body":{"components/ContentCardComponent.html":{},"components/DatetimepickerComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/ListComponent.html":{}}}],["inside",{"_index":1370,"title":{},"body":{"components/HomeComponent.html":{},"components/NavigationComponent.html":{}}}],["instanceof",{"_index":1598,"title":{},"body":{"components/NavigationComponent.html":{}}}],["insurancenumber",{"_index":1150,"title":{},"body":{"components/FormNewPatientComponent.html":{},"classes/Patient.html":{},"miscellaneous/variables.html":{}}}],["intercept",{"_index":901,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["intercept(request",{"_index":904,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["interceptor",{"_index":891,"title":{"interceptors/ErrorInterceptor.html":{},"interceptors/RequestInterceptor.html":{}},"body":{"interceptors/RequestInterceptor.html":{},"coverage.html":{}}}],["interceptors",{"_index":892,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["interval",{"_index":1873,"title":{},"body":{"todo.html":{}}}],["intl",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["intl.ts",{"_index":1832,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["invalid",{"_index":900,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["isloading",{"_index":1244,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["issmallscreen",{"_index":1574,"title":{},"body":{"components/NavigationComponent.html":{}}}],["ist",{"_index":1196,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["item",{"_index":532,"title":{},"body":{"components/BottomSheetComponent.html":{},"components/ListComponent.html":{}}}],["item:hover",{"_index":536,"title":{},"body":{"components/BottomSheetComponent.html":{}}}],["item[property",{"_index":1459,"title":{},"body":{"components/ListComponent.html":{}}}],["items",{"_index":686,"title":{},"body":{"components/CalendarComponent.html":{},"components/FormNewPatientComponent.html":{},"components/LoginComponent.html":{}}}],["js",{"_index":1847,"title":{},"body":{"dependencies.html":{}}}],["json.stringify(object.values(data)).tolowercase().includes(value",{"_index":1467,"title":{},"body":{"components/ListComponent.html":{}}}],["justify",{"_index":670,"title":{},"body":{"components/CalendarComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/LoginComponent.html":{}}}],["keep",{"_index":499,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["keine",{"_index":338,"title":{},"body":{"components/AppointmentComponent.html":{},"components/FormNewPrescriptionComponent.html":{}}}],["keinen",{"_index":1220,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["key",{"_index":1166,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["lastname",{"_index":261,"title":{},"body":{"classes/Appointment.html":{},"components/AppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"classes/Patient.html":{},"miscellaneous/variables.html":{}}}],["layoutmodule",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["layouts",{"_index":723,"title":{},"body":{"components/ContentCardComponent.html":{}}}],["left",{"_index":549,"title":{},"body":{"components/BottomSheetComponent.html":{},"components/ContentCardComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{}}}],["legend",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppointmentComponent.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{},"overview.html":{}}}],["length",{"_index":1894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["line",{"_index":678,"title":{},"body":{"components/CalendarComponent.html":{}}}],["list",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{},"miscellaneous/variables.html":{}}}],["list.component.css",{"_index":1384,"title":{},"body":{"components/ListComponent.html":{}}}],["list.component.html",{"_index":1385,"title":{},"body":{"components/ListComponent.html":{}}}],["list/german",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["list/list.component",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"components/AppointmentComponent.html":{},"components/PatientComponent.html":{}}}],["listcolumns",{"_index":279,"title":{},"body":{"components/AppointmentComponent.html":{},"components/PatientComponent.html":{}}}],["listcomponent",{"_index":107,"title":{"components/ListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppointmentComponent.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{},"coverage.html":{},"overview.html":{}}}],["listref",{"_index":280,"title":{},"body":{"components/AppointmentComponent.html":{},"components/PatientComponent.html":{}}}],["ll",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["loading",{"_index":683,"title":{},"body":{"components/CalendarComponent.html":{},"components/LoginComponent.html":{}}}],["local",{"_index":448,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{}}}],["local_hospital",{"_index":1609,"title":{},"body":{"components/NavigationComponent.html":{}}}],["local_pharmacy",{"_index":1347,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["local_pharmacymedikament",{"_index":1608,"title":{},"body":{"components/NavigationComponent.html":{}}}],["locale",{"_index":566,"title":{},"body":{"components/CalendarComponent.html":{},"classes/CustomDateFormatter.html":{}}}],["localede",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["localstorage.getitem('currentuser",{"_index":463,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/RequestInterceptor.html":{}}}],["localstorage.removeitem('currentuser",{"_index":505,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorage.setitem('currentuser",{"_index":502,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["location.reload(true",{"_index":919,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["log",{"_index":504,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["logged",{"_index":464,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{}}}],["loggedin",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/NavigationComponent.html":{}}}],["logic",{"_index":273,"title":{},"body":{"components/AppointmentComponent.html":{},"components/PatientComponent.html":{}}}],["login",{"_index":451,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{}}}],["login(username",{"_index":483,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["login.component.css",{"_index":1500,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":1501,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.component",{"_index":205,"title":{},"body":{"modules/AppModule.html":{}}}],["login/password",{"_index":1496,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":109,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppointmentComponent.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logout",{"_index":481,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/NavigationComponent.html":{}}}],["logs",{"_index":894,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["looks",{"_index":444,"title":{},"body":{"guards/AuthGuard.html":{}}}],["luxon",{"_index":1852,"title":{},"body":{"dependencies.html":{}}}],["löschen",{"_index":367,"title":{},"body":{"components/AppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/PatientComponent.html":{}}}],["m",{"_index":1340,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["m.name",{"_index":1311,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["made",{"_index":1786,"title":{},"body":{"classes/ValidateUniqueValues.html":{}}}],["main",{"_index":695,"title":{},"body":{"components/ContentCardComponent.html":{}}}],["management",{"_index":1866,"title":{},"body":{"index.html":{}}}],["manipulate",{"_index":1735,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["manual",{"_index":1306,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["map",{"_index":320,"title":{},"body":{"components/AppointmentComponent.html":{},"injectables/AuthenticationService.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/NavigationComponent.html":{},"classes/ValidateUniqueValues.html":{}}}],["map((appointments",{"_index":328,"title":{},"body":{"components/AppointmentComponent.html":{},"components/CalendarComponent.html":{}}}],["map(res",{"_index":1791,"title":{},"body":{"classes/ValidateUniqueValues.html":{}}}],["map(result",{"_index":1585,"title":{},"body":{"components/NavigationComponent.html":{}}}],["mapto",{"_index":321,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["margin",{"_index":546,"title":{},"body":{"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{}}}],["mat",{"_index":531,"title":{},"body":{"components/BottomSheetComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{}}}],["mat_bottom_sheet_data",{"_index":510,"title":{},"body":{"components/BottomSheetComponent.html":{}}}],["mat_date_formats",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"overview.html":{}}}],["mat_date_locale",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"overview.html":{}}}],["mat_dialog_data",{"_index":951,"title":{},"body":{"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{}}}],["mat_moment_date_formats",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"overview.html":{}}}],["matautocompletemodule",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["matbottomsheet",{"_index":294,"title":{},"body":{"components/AppointmentComponent.html":{},"components/PatientComponent.html":{}}}],["matbottomsheetmodule",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["matbottomsheetref",{"_index":517,"title":{},"body":{"components/BottomSheetComponent.html":{}}}],["matbuttonmodule",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["matbuttontogglemodule",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["matcardmodule",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["matches",{"_index":724,"title":{},"body":{"components/ContentCardComponent.html":{}}}],["matching",{"_index":28,"title":{},"body":{"classes/Address.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Appointment.html":{},"components/AppointmentComponent.html":{},"classes/AppointmentRecord.html":{},"injectables/AppointmentService.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"classes/CustomDateFormatter.html":{},"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{},"classes/Disease.html":{},"interceptors/ErrorInterceptor.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"classes/Medicine.html":{},"injectables/MedicineService.html":{},"components/NavigationComponent.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"classes/Prescription.html":{},"interceptors/RequestInterceptor.html":{},"classes/User.html":{},"injectables/UserService.html":{},"classes/ValidateUniqueValues.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["matchipsmodule",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["matdatepickerinputevent",{"_index":780,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["matdatepickermodule",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialog",{"_index":295,"title":{},"body":{"components/AppointmentComponent.html":{},"components/PatientComponent.html":{}}}],["matdialogmodule",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialogref",{"_index":934,"title":{},"body":{"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{}}}],["material",{"_index":185,"title":{},"body":{"modules/AppModule.html":{},"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{},"dependencies.html":{}}}],["matexpansionmodule",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["matformfieldmodule",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["matgridlistmodule",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["math.max(length",{"_index":1895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["math.random().tostring(36).substr(2",{"_index":804,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["maticonmodule",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodule",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["matlistmodule",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["matmenumodule",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["matmomentdatemodule",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["matpaginator",{"_index":1420,"title":{},"body":{"components/ListComponent.html":{}}}],["matpaginatorintl",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["matpaginatormodule",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["matprogressspinnermodule",{"_index":167,"title":{},"body":{"modules/AppModule.html":{}}}],["matradiomodule",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["matselectmodule",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["matsidenav",{"_index":1590,"title":{},"body":{"components/NavigationComponent.html":{}}}],["matsidenavmodule",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["matslidetogglemodule",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["matsnackbar",{"_index":979,"title":{},"body":{"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{}}}],["matsnackbarmodule",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["matsort",{"_index":1423,"title":{},"body":{"components/ListComponent.html":{}}}],["matsortmodule",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["matstepper",{"_index":1115,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["matsteppermodule",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["mattable",{"_index":1427,"title":{},"body":{"components/ListComponent.html":{}}}],["mattabledatasource",{"_index":1430,"title":{},"body":{"components/ListComponent.html":{}}}],["mattabledatasource(filteredentries",{"_index":1446,"title":{},"body":{"components/ListComponent.html":{}}}],["mattablemodule",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodule",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["maxdate",{"_index":765,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["mecklenburg",{"_index":1207,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["med",{"_index":1259,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["med.name",{"_index":1298,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["medicine",{"_index":1257,"title":{"classes/Medicine.html":{}},"body":{"components/FormNewPrescriptionComponent.html":{},"classes/Medicine.html":{},"injectables/MedicineService.html":{},"classes/Prescription.html":{},"coverage.html":{}}}],["medicine.description",{"_index":1348,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["medicine.name",{"_index":1341,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["medicine[0",{"_index":1318,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["medicineform",{"_index":1245,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["medicineid",{"_index":1556,"title":{},"body":{"injectables/MedicineService.html":{}}}],["medicinelist",{"_index":1297,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["medicinename",{"_index":1315,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["medicineservice",{"_index":1253,"title":{"injectables/MedicineService.html":{}},"body":{"components/FormNewPrescriptionComponent.html":{},"injectables/MedicineService.html":{},"coverage.html":{}}}],["medicineurl",{"_index":1545,"title":{},"body":{"injectables/MedicineService.html":{}}}],["medikament",{"_index":1346,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["menu",{"_index":270,"title":{},"body":{"components/AppointmentComponent.html":{},"components/BottomSheetComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{}}}],["metadata",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{}}}],["methods",{"_index":282,"title":{},"body":{"components/AppointmentComponent.html":{},"injectables/AppointmentService.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"classes/CustomDateFormatter.html":{},"components/DatetimepickerComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"injectables/MedicineService.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"interceptors/RequestInterceptor.html":{},"injectables/UserService.html":{},"classes/ValidateUniqueValues.html":{}}}],["min",{"_index":1235,"title":{},"body":{"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"todo.html":{}}}],["mindate",{"_index":766,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["minute",{"_index":854,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["miscellaneous",{"_index":1861,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mmm",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["mmmm",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":792,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["module",{"_index":116,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":118,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalendarComponent.html":{},"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/ListComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["moment('16:30",{"_index":1077,"title":{},"body":{"components/FormNewAppointmentComponent.html":{}}}],["moment().add",{"_index":833,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["moment().add(100",{"_index":838,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["moment().format('dd.mm.yyyy",{"_index":1270,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["moment();//.add",{"_index":830,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["moment(a.datetime",{"_index":631,"title":{},"body":{"components/CalendarComponent.html":{}}}],["moment(date.value",{"_index":842,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["moment(e",{"_index":1069,"title":{},"body":{"components/FormNewAppointmentComponent.html":{}}}],["moment(e.datetime",{"_index":1443,"title":{},"body":{"components/ListComponent.html":{}}}],["moment(p('dateofbirth",{"_index":1143,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["moment(this.f1[key].value).format('dd.mm.yyyy",{"_index":1170,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["moment.ismoment(date.value",{"_index":840,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["moment_",{"_index":781,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{},"miscellaneous/variables.html":{}}}],["moment_.moment",{"_index":770,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["momentdate",{"_index":809,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["momentdateadapter",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"overview.html":{}}}],["monat",{"_index":663,"title":{},"body":{"components/CalendarComponent.html":{}}}],["month",{"_index":599,"title":{},"body":{"components/CalendarComponent.html":{},"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["monthyeara11ylabel",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["monthyearlabel",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["more",{"_index":745,"title":{},"body":{"components/ContentCardComponent.html":{}}}],["more_vert",{"_index":1610,"title":{},"body":{"components/NavigationComponent.html":{}}}],["multi",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["multiple",{"_index":722,"title":{},"body":{"components/ContentCardComponent.html":{}}}],["männlich",{"_index":1190,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["möchten",{"_index":1003,"title":{},"body":{"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{}}}],["name",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"classes/Appointment.html":{},"components/AppointmentComponent.html":{},"injectables/AppointmentService.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"classes/CustomDateFormatter.html":{},"components/DatetimepickerComponent.html":{},"classes/Disease.html":{},"interceptors/ErrorInterceptor.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"classes/Medicine.html":{},"injectables/MedicineService.html":{},"components/NavigationComponent.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"interceptors/RequestInterceptor.html":{},"injectables/UserService.html":{},"classes/ValidateUniqueValues.html":{},"miscellaneous/variables.html":{}}}],["navigation",{"_index":1571,"title":{},"body":{"components/NavigationComponent.html":{},"index.html":{}}}],["navigation'},{'name",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{}}}],["navigation.component.css",{"_index":1572,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigation.component.html",{"_index":1573,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigation/navigation.component",{"_index":201,"title":{},"body":{"modules/AppModule.html":{}}}],["navigationcomponent",{"_index":110,"title":{"components/NavigationComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppointmentComponent.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navigationend",{"_index":1594,"title":{},"body":{"components/NavigationComponent.html":{}}}],["need",{"_index":1313,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["needs",{"_index":1320,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["neuen",{"_index":1088,"title":{},"body":{"components/FormNewAppointmentComponent.html":{},"components/PatientComponent.html":{}}}],["neues",{"_index":1668,"title":{},"body":{"components/PatientComponent.html":{}}}],["new",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppointmentComponent.html":{},"injectables/AuthenticationService.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"classes/CustomDateFormatter.html":{},"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{},"classes/Prescription.html":{},"classes/ValidateUniqueValues.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newappointment",{"_index":1107,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["newdate",{"_index":844,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["newmedicine",{"_index":1246,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["next",{"_index":906,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["next.handle(request",{"_index":1746,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["next.handle(request).pipe(catcherror(err",{"_index":913,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["ng",{"_index":1360,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["ngmodule",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngondestroy",{"_index":1394,"title":{},"body":{"components/ListComponent.html":{}}}],["ngoninit",{"_index":285,"title":{},"body":{"components/AppointmentComponent.html":{},"components/CalendarComponent.html":{},"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/PatientComponent.html":{}}}],["ngx",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{},"dependencies.html":{}}}],["ngxmaterialtimepickermodule",{"_index":183,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxmaterialtimepickertheme",{"_index":782,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["nicht",{"_index":1323,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["niedersachsen",{"_index":1209,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["noch",{"_index":1345,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["non",{"_index":696,"title":{},"body":{"components/ContentCardComponent.html":{}}}],["nordrhein",{"_index":1210,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["note",{"_index":926,"title":{},"body":{"components/FormAppointmentAddNoteComponent.html":{}}}],["note'},{'name",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{}}}],["note.component",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"components/AppointmentComponent.html":{}}}],["note.component.css",{"_index":927,"title":{},"body":{"components/FormAppointmentAddNoteComponent.html":{}}}],["note.component.html",{"_index":928,"title":{},"body":{"components/FormAppointmentAddNoteComponent.html":{}}}],["note.component.ts",{"_index":924,"title":{},"body":{"components/FormAppointmentAddNoteComponent.html":{},"coverage.html":{}}}],["note.component.ts:16",{"_index":936,"title":{},"body":{"components/FormAppointmentAddNoteComponent.html":{}}}],["note.component.ts:17",{"_index":950,"title":{},"body":{"components/FormAppointmentAddNoteComponent.html":{}}}],["note.component.ts:18",{"_index":949,"title":{},"body":{"components/FormAppointmentAddNoteComponent.html":{}}}],["note.component.ts:23",{"_index":945,"title":{},"body":{"components/FormAppointmentAddNoteComponent.html":{}}}],["note.component.ts:26",{"_index":935,"title":{},"body":{"components/FormAppointmentAddNoteComponent.html":{}}}],["note.component.ts:29",{"_index":947,"title":{},"body":{"components/FormAppointmentAddNoteComponent.html":{}}}],["note.component.ts:34",{"_index":942,"title":{},"body":{"components/FormAppointmentAddNoteComponent.html":{}}}],["note.component.ts:38",{"_index":941,"title":{},"body":{"components/FormAppointmentAddNoteComponent.html":{}}}],["note.component.ts:56",{"_index":939,"title":{},"body":{"components/FormAppointmentAddNoteComponent.html":{}}}],["note/form",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"components/AppointmentComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"coverage.html":{}}}],["notes",{"_index":396,"title":{},"body":{"classes/AppointmentRecord.html":{},"injectables/AppointmentService.html":{}}}],["notizen",{"_index":353,"title":{},"body":{"components/AppointmentComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{}}}],["notunique",{"_index":1795,"title":{},"body":{"classes/ValidateUniqueValues.html":{}}}],["null",{"_index":1132,"title":{},"body":{"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"classes/ValidateUniqueValues.html":{}}}],["number",{"_index":21,"title":{},"body":{"classes/Address.html":{},"classes/Appointment.html":{},"classes/AppointmentRecord.html":{},"injectables/AppointmentService.html":{},"components/CalendarComponent.html":{},"classes/Disease.html":{},"classes/Medicine.html":{},"injectables/MedicineService.html":{},"classes/Patient.html":{},"injectables/PatientService.html":{},"classes/Prescription.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":943,"title":{},"body":{"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["object.keys(this.f1).map(key",{"_index":1165,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["object.keys(this.f2).map(key",{"_index":1173,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["observable",{"_index":422,"title":{},"body":{"injectables/AppointmentService.html":{},"components/CalendarComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FormNewPrescriptionComponent.html":{},"components/ListComponent.html":{},"injectables/MedicineService.html":{},"components/NavigationComponent.html":{},"injectables/PatientService.html":{},"interceptors/RequestInterceptor.html":{},"classes/ValidateUniqueValues.html":{}}}],["observes",{"_index":700,"title":{},"body":{"components/ContentCardComponent.html":{},"components/NavigationComponent.html":{}}}],["ok",{"_index":944,"title":{},"body":{"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{}}}],["onclickoutput",{"_index":1399,"title":{},"body":{"components/ListComponent.html":{}}}],["one",{"_index":694,"title":{},"body":{"components/ContentCardComponent.html":{}}}],["oninit",{"_index":275,"title":{},"body":{"components/AppointmentComponent.html":{},"components/CalendarComponent.html":{},"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{}}}],["openappointmentrecorddialog",{"_index":286,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["openbottomsheet",{"_index":287,"title":{},"body":{"components/AppointmentComponent.html":{},"components/PatientComponent.html":{}}}],["opendeleteappointmentdialog",{"_index":288,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["opendeletepatientdialog",{"_index":1641,"title":{},"body":{"components/PatientComponent.html":{}}}],["opennewappointmentdialog",{"_index":1642,"title":{},"body":{"components/PatientComponent.html":{}}}],["opennewpatientdialog",{"_index":1643,"title":{},"body":{"components/PatientComponent.html":{}}}],["opennewprescriptiondialog",{"_index":1644,"title":{},"body":{"components/PatientComponent.html":{}}}],["opensnackbar",{"_index":1252,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["opensnackbar(text",{"_index":1266,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["openupdateappointmentdialog",{"_index":289,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["openupdatepatientdialog",{"_index":1645,"title":{},"body":{"components/PatientComponent.html":{}}}],["option",{"_index":1302,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["optional",{"_index":298,"title":{},"body":{"components/AppointmentComponent.html":{},"injectables/AppointmentService.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"classes/CustomDateFormatter.html":{},"components/DatetimepickerComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"injectables/MedicineService.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"interceptors/RequestInterceptor.html":{},"injectables/UserService.html":{},"classes/ValidateUniqueValues.html":{}}}],["out",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"overview.html":{}}}],["output",{"_index":606,"title":{},"body":{"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/ListComponent.html":{}}}],["outputs",{"_index":710,"title":{},"body":{"components/ContentCardComponent.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/ListComponent.html":{}}}],["outside",{"_index":1078,"title":{},"body":{"components/FormNewAppointmentComponent.html":{}}}],["overview",{"_index":1871,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":1129,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["p('address",{"_index":1156,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["p('email",{"_index":1146,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["p('firstname",{"_index":1137,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["p('gender",{"_index":1141,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["p('insurancenumber",{"_index":1151,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["p('lastname",{"_index":1139,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["p('phonenumber",{"_index":1154,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["package",{"_index":1838,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":1350,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{}}}],["page",{"_index":452,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"miscellaneous/variables.html":{}}}],["pagesize",{"_index":1893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paginator",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"components/ListComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["panel",{"_index":1363,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["parameters",{"_index":297,"title":{},"body":{"components/AppointmentComponent.html":{},"injectables/AppointmentService.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"classes/CustomDateFormatter.html":{},"components/DatetimepickerComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"injectables/MedicineService.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"interceptors/RequestInterceptor.html":{},"injectables/UserService.html":{},"classes/ValidateUniqueValues.html":{}}}],["parse",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["parseint(e.target.getattribute('data",{"_index":1472,"title":{},"body":{"components/ListComponent.html":{}}}],["parseint(hour",{"_index":859,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["parseint(minute",{"_index":861,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["password",{"_index":475,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"classes/User.html":{}}}],["patient",{"_index":113,"title":{"classes/Patient.html":{}},"body":{"components/AppComponent.html":{},"classes/Appointment.html":{},"components/AppointmentComponent.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"coverage.html":{}}}],["patient'},{'name",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{}}}],["patient.component",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"components/AppointmentComponent.html":{},"components/PatientComponent.html":{}}}],["patient.component.css",{"_index":1012,"title":{},"body":{"components/FormDeletePatientComponent.html":{},"components/FormNewPatientComponent.html":{},"components/PatientComponent.html":{}}}],["patient.component.html",{"_index":1013,"title":{},"body":{"components/FormDeletePatientComponent.html":{},"components/FormNewPatientComponent.html":{},"components/PatientComponent.html":{}}}],["patient.component.ts",{"_index":1010,"title":{},"body":{"components/FormDeletePatientComponent.html":{},"components/FormNewPatientComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["patient.component.ts:104",{"_index":1109,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["patient.component.ts:126",{"_index":1104,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["patient.component.ts:161",{"_index":1103,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["patient.component.ts:18",{"_index":1016,"title":{},"body":{"components/FormDeletePatientComponent.html":{}}}],["patient.component.ts:19",{"_index":1017,"title":{},"body":{"components/FormDeletePatientComponent.html":{}}}],["patient.component.ts:20",{"_index":1023,"title":{},"body":{"components/FormDeletePatientComponent.html":{}}}],["patient.component.ts:24",{"_index":1021,"title":{},"body":{"components/FormDeletePatientComponent.html":{}}}],["patient.component.ts:27",{"_index":1015,"title":{},"body":{"components/FormDeletePatientComponent.html":{}}}],["patient.component.ts:28",{"_index":1117,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["patient.component.ts:29",{"_index":1113,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["patient.component.ts:30",{"_index":1110,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["patient.component.ts:31",{"_index":1022,"title":{},"body":{"components/FormDeletePatientComponent.html":{},"components/FormNewPatientComponent.html":{}}}],["patient.component.ts:35",{"_index":1114,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["patient.component.ts:36",{"_index":1111,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["patient.component.ts:37",{"_index":1112,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["patient.component.ts:38",{"_index":1020,"title":{},"body":{"components/FormDeletePatientComponent.html":{},"components/FormNewPatientComponent.html":{}}}],["patient.component.ts:39",{"_index":1102,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["patient.component.ts:42",{"_index":1019,"title":{},"body":{"components/FormDeletePatientComponent.html":{},"components/FormNewPatientComponent.html":{}}}],["patient.component.ts:50",{"_index":1108,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["patient.component.ts:63",{"_index":1018,"title":{},"body":{"components/FormDeletePatientComponent.html":{}}}],["patient.component.ts:94",{"_index":1119,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["patient.component.ts:95",{"_index":1121,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["patient.component.ts:97",{"_index":1106,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["patient/appointment",{"_index":1865,"title":{},"body":{"index.html":{}}}],["patient/form",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"components/AppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewPatientComponent.html":{},"components/PatientComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["patient/patient.component",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["patient[key",{"_index":1689,"title":{},"body":{"components/PatientComponent.html":{}}}],["patientcolumns",{"_index":1634,"title":{},"body":{"classes/Patient.html":{},"components/PatientComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["patientcomponent",{"_index":112,"title":{"components/PatientComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppointmentComponent.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{},"coverage.html":{},"overview.html":{}}}],["patientid",{"_index":334,"title":{},"body":{"components/AppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"injectables/PatientService.html":{}}}],["patientname",{"_index":386,"title":{},"body":{"components/AppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/PatientComponent.html":{}}}],["patientobservable",{"_index":1638,"title":{},"body":{"components/PatientComponent.html":{}}}],["patients",{"_index":1378,"title":{},"body":{"components/HomeComponent.html":{},"components/PatientComponent.html":{}}}],["patientservice",{"_index":1014,"title":{"injectables/PatientService.html":{}},"body":{"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"classes/ValidateUniqueValues.html":{},"coverage.html":{}}}],["patientservice.deletepatient",{"_index":1011,"title":{},"body":{"components/FormDeletePatientComponent.html":{}}}],["patientservice.getall",{"_index":1025,"title":{},"body":{"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/PatientComponent.html":{}}}],["patienturl",{"_index":1693,"title":{},"body":{"injectables/PatientService.html":{}}}],["peoplepatient",{"_index":1605,"title":{},"body":{"components/NavigationComponent.html":{}}}],["per",{"_index":732,"title":{},"body":{"components/ContentCardComponent.html":{}}}],["persistent",{"_index":697,"title":{},"body":{"components/ContentCardComponent.html":{},"components/NavigationComponent.html":{}}}],["person",{"_index":1611,"title":{},"body":{"components/NavigationComponent.html":{}}}],["person_add_disabled",{"_index":1675,"title":{},"body":{"components/PatientComponent.html":{}}}],["pfalz",{"_index":1213,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["phonenumber",{"_index":1153,"title":{},"body":{"components/FormNewPatientComponent.html":{},"classes/Patient.html":{}}}],["picker",{"_index":794,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["pickerid",{"_index":802,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["pickers",{"_index":785,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["pipe",{"_index":629,"title":{},"body":{"components/CalendarComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/NavigationComponent.html":{}}}],["pipe(map(res",{"_index":494,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["placeholder",{"_index":789,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{},"components/FormNewPrescriptionComponent.html":{}}}],["placeholderdate",{"_index":790,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["placeholdertime",{"_index":791,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["planned",{"_index":1372,"title":{},"body":{"components/HomeComponent.html":{}}}],["point",{"_index":1326,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["pops",{"_index":796,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["populate",{"_index":555,"title":{},"body":{"components/CalendarComponent.html":{}}}],["popup",{"_index":925,"title":{},"body":{"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{}}}],["position",{"_index":741,"title":{},"body":{"components/ContentCardComponent.html":{},"components/NavigationComponent.html":{}}}],["post",{"_index":1738,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["praxis",{"_index":1603,"title":{},"body":{"components/NavigationComponent.html":{}}}],["prescription",{"_index":1238,"title":{"classes/Prescription.html":{}},"body":{"components/FormNewPrescriptionComponent.html":{},"classes/Patient.html":{},"classes/Prescription.html":{},"coverage.html":{}}}],["prescription'},{'name",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{}}}],["prescription.component",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"components/PatientComponent.html":{}}}],["prescription.component.css",{"_index":1239,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["prescription.component.html",{"_index":1240,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["prescription.component.ts",{"_index":1237,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["prescription.component.ts:109",{"_index":1264,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["prescription.component.ts:123",{"_index":1262,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["prescription.component.ts:19",{"_index":1255,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["prescription.component.ts:21",{"_index":1278,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["prescription.component.ts:22",{"_index":1276,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["prescription.component.ts:23",{"_index":1273,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["prescription.component.ts:24",{"_index":1275,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["prescription.component.ts:25",{"_index":1268,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["prescription.component.ts:26",{"_index":1277,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["prescription.component.ts:27",{"_index":1274,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["prescription.component.ts:32",{"_index":1269,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["prescription.component.ts:36",{"_index":1254,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["prescription.component.ts:39",{"_index":1271,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["prescription.component.ts:47",{"_index":1265,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["prescription.component.ts:71",{"_index":1258,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["prescription.component.ts:75",{"_index":1267,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["prescription.component.ts:81",{"_index":1260,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["prescription/form",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"components/FormNewPrescriptionComponent.html":{},"components/PatientComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["prescriptions",{"_index":1621,"title":{},"body":{"classes/Patient.html":{}}}],["prescriptions'].foreach(key",{"_index":1688,"title":{},"body":{"components/PatientComponent.html":{}}}],["previous",{"_index":1774,"title":{},"body":{"classes/ValidateUniqueValues.html":{}}}],["primary",{"_index":617,"title":{},"body":{"components/CalendarComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"miscellaneous/variables.html":{}}}],["private",{"_index":323,"title":{},"body":{"components/AppointmentComponent.html":{},"components/CalendarComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{}}}],["production",{"_index":1886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["properties",{"_index":8,"title":{},"body":{"classes/Address.html":{},"components/AppComponent.html":{},"classes/Appointment.html":{},"components/AppointmentComponent.html":{},"classes/AppointmentRecord.html":{},"injectables/AppointmentService.html":{},"injectables/AuthenticationService.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{},"classes/Disease.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"classes/Medicine.html":{},"injectables/MedicineService.html":{},"components/NavigationComponent.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"classes/Prescription.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["property",{"_index":1456,"title":{},"body":{"components/ListComponent.html":{}}}],["provide",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalendarComponent.html":{},"overview.html":{}}}],["providedin",{"_index":434,"title":{},"body":{"injectables/AppointmentService.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/MedicineService.html":{},"injectables/PatientService.html":{},"injectables/UserService.html":{}}}],["providers",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalendarComponent.html":{},"overview.html":{}}}],["public",{"_index":514,"title":{},"body":{"components/BottomSheetComponent.html":{},"classes/CustomDateFormatter.html":{},"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{}}}],["purpose",{"_index":793,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["put",{"_index":1739,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["put'].includes(request.method",{"_index":1744,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["queryparams",{"_index":468,"title":{},"body":{"guards/AuthGuard.html":{}}}],["radius",{"_index":1534,"title":{},"body":{"components/LoginComponent.html":{}}}],["reactive",{"_index":1090,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["reactiveformsmodule",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["readform",{"_index":1098,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["reads",{"_index":1498,"title":{},"body":{"components/LoginComponent.html":{}}}],["receipt",{"_index":1667,"title":{},"body":{"components/PatientComponent.html":{}}}],["receiptrezept",{"_index":1607,"title":{},"body":{"components/NavigationComponent.html":{}}}],["receives",{"_index":508,"title":{},"body":{"components/BottomSheetComponent.html":{}}}],["record",{"_index":257,"title":{},"body":{"classes/Appointment.html":{}}}],["record.ts",{"_index":394,"title":{},"body":{"classes/AppointmentRecord.html":{},"coverage.html":{}}}],["record.ts:2",{"_index":398,"title":{},"body":{"classes/AppointmentRecord.html":{}}}],["record.ts:3",{"_index":399,"title":{},"body":{"classes/AppointmentRecord.html":{}}}],["record.ts:4",{"_index":397,"title":{},"body":{"classes/AppointmentRecord.html":{}}}],["red",{"_index":616,"title":{},"body":{"components/CalendarComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"miscellaneous/variables.html":{}}}],["redirect",{"_index":465,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["redirects",{"_index":450,"title":{},"body":{"guards/AuthGuard.html":{}}}],["refresh",{"_index":390,"title":{},"body":{"components/AppointmentComponent.html":{},"components/PatientComponent.html":{}}}],["refreshes",{"_index":501,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["refreshlist",{"_index":1395,"title":{},"body":{"components/ListComponent.html":{}}}],["registerlocaledata",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["registerlocaledata(localede",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["remove",{"_index":503,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["render",{"_index":268,"title":{},"body":{"components/AppointmentComponent.html":{},"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{},"components/PatientComponent.html":{}}}],["rendered",{"_index":699,"title":{},"body":{"components/ContentCardComponent.html":{},"components/NavigationComponent.html":{}}}],["renders",{"_index":265,"title":{},"body":{"components/AppointmentComponent.html":{},"components/HomeComponent.html":{},"components/PatientComponent.html":{}}}],["reqbody",{"_index":1725,"title":{},"body":{"injectables/PatientService.html":{}}}],["request",{"_index":897,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/RequestInterceptor.html":{},"injectables/UserService.html":{}}}],["request.clone",{"_index":1742,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["requestinterceptor",{"_index":129,"title":{"interceptors/RequestInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/RequestInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["requests",{"_index":1736,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["required",{"_index":1527,"title":{},"body":{"components/LoginComponent.html":{}}}],["res.appointment",{"_index":996,"title":{},"body":{"components/FormDeleteAppointmentComponent.html":{}}}],["res.data.id",{"_index":1188,"title":{},"body":{"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{}}}],["res.error",{"_index":1184,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["res.id",{"_index":1180,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["res.patient",{"_index":1027,"title":{},"body":{"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{}}}],["res.success",{"_index":495,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{}}}],["res[\"isunique",{"_index":1794,"title":{},"body":{"classes/ValidateUniqueValues.html":{}}}],["reset",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"overview.html":{}}}],["responds",{"_index":896,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["response",{"_index":916,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"injectables/UserService.html":{}}}],["result",{"_index":27,"title":{},"body":{"classes/Address.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Appointment.html":{},"components/AppointmentComponent.html":{},"classes/AppointmentRecord.html":{},"injectables/AppointmentService.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"classes/CustomDateFormatter.html":{},"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{},"classes/Disease.html":{},"interceptors/ErrorInterceptor.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"classes/Medicine.html":{},"injectables/MedicineService.html":{},"components/NavigationComponent.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"classes/Prescription.html":{},"interceptors/RequestInterceptor.html":{},"classes/User.html":{},"injectables/UserService.html":{},"classes/ValidateUniqueValues.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["result.matches",{"_index":1587,"title":{},"body":{"components/NavigationComponent.html":{}}}],["results",{"_index":29,"title":{},"body":{"classes/Address.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Appointment.html":{},"components/AppointmentComponent.html":{},"classes/AppointmentRecord.html":{},"injectables/AppointmentService.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"classes/CustomDateFormatter.html":{},"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{},"classes/Disease.html":{},"interceptors/ErrorInterceptor.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"classes/Medicine.html":{},"injectables/MedicineService.html":{},"components/NavigationComponent.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"classes/Prescription.html":{},"interceptors/RequestInterceptor.html":{},"classes/User.html":{},"injectables/UserService.html":{},"classes/ValidateUniqueValues.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":329,"title":{},"body":{"components/AppointmentComponent.html":{},"injectables/AppointmentService.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"classes/CustomDateFormatter.html":{},"interceptors/ErrorInterceptor.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"injectables/MedicineService.html":{},"components/NavigationComponent.html":{},"injectables/PatientService.html":{},"interceptors/RequestInterceptor.html":{},"injectables/UserService.html":{},"classes/ValidateUniqueValues.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":917,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["returns",{"_index":302,"title":{},"body":{"components/AppointmentComponent.html":{},"injectables/AppointmentService.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"classes/CustomDateFormatter.html":{},"components/DatetimepickerComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"injectables/MedicineService.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"interceptors/RequestInterceptor.html":{},"injectables/UserService.html":{},"classes/ValidateUniqueValues.html":{}}}],["returnurl",{"_index":469,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["reverse",{"_index":544,"title":{},"body":{"components/BottomSheetComponent.html":{}}}],["rezept",{"_index":1669,"title":{},"body":{"components/PatientComponent.html":{}}}],["rgb(230",{"_index":539,"title":{},"body":{"components/BottomSheetComponent.html":{},"components/ListComponent.html":{}}}],["rgba(0",{"_index":1485,"title":{},"body":{"components/ListComponent.html":{}}}],["rgba(0,0,0,.12",{"_index":1355,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["rgba(0,0,0,.87",{"_index":1366,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["rheinland",{"_index":1212,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["right",{"_index":547,"title":{},"body":{"components/BottomSheetComponent.html":{},"components/ContentCardComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{}}}],["root",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppointmentService.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/MedicineService.html":{},"injectables/PatientService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{}}}],["route",{"_index":462,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["router",{"_index":456,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{}}}],["router.events.pipe",{"_index":1595,"title":{},"body":{"components/NavigationComponent.html":{}}}],["routermodule",{"_index":245,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(app_routes",{"_index":1901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routermodule.forroot(routes",{"_index":247,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":460,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routes",{"_index":244,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routing.module.ts",{"_index":243,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":543,"title":{},"body":{"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/ListComponent.html":{}}}],["row:hover",{"_index":1494,"title":{},"body":{"components/ListComponent.html":{}}}],["rows",{"_index":728,"title":{},"body":{"components/ContentCardComponent.html":{}}}],["rxjs",{"_index":433,"title":{},"body":{"injectables/AppointmentService.html":{},"components/CalendarComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FormNewPrescriptionComponent.html":{},"components/ListComponent.html":{},"injectables/MedicineService.html":{},"components/NavigationComponent.html":{},"injectables/PatientService.html":{},"interceptors/RequestInterceptor.html":{},"classes/ValidateUniqueValues.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":322,"title":{},"body":{"components/AppointmentComponent.html":{},"injectables/AuthenticationService.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"classes/ValidateUniqueValues.html":{}}}],["saarland",{"_index":1214,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["sachsen",{"_index":1215,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["schleswig",{"_index":1217,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["screen",{"_index":701,"title":{},"body":{"components/ContentCardComponent.html":{},"components/NavigationComponent.html":{}}}],["search",{"_index":1462,"title":{},"body":{"components/ListComponent.html":{}}}],["secondary",{"_index":619,"title":{},"body":{"components/CalendarComponent.html":{},"miscellaneous/variables.html":{}}}],["segment.cssclass",{"_index":653,"title":{},"body":{"components/CalendarComponent.html":{}}}],["segment.date.gettime",{"_index":654,"title":{},"body":{"components/CalendarComponent.html":{}}}],["selected",{"_index":657,"title":{},"body":{"components/CalendarComponent.html":{}}}],["selectedappointment",{"_index":281,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["selecteddayviewdate",{"_index":567,"title":{},"body":{"components/CalendarComponent.html":{}}}],["selectedmedicine",{"_index":1263,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["selectedmonthviewday",{"_index":568,"title":{},"body":{"components/CalendarComponent.html":{}}}],["selectedpatient",{"_index":1639,"title":{},"body":{"components/PatientComponent.html":{}}}],["selectedtime",{"_index":808,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["selector",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{}}}],["sent",{"_index":1781,"title":{},"body":{"classes/ValidateUniqueValues.html":{}}}],["server",{"_index":895,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/FormNewPrescriptionComponent.html":{},"injectables/UserService.html":{},"classes/ValidateUniqueValues.html":{}}}],["service",{"_index":404,"title":{},"body":{"injectables/AppointmentService.html":{},"injectables/MedicineService.html":{},"injectables/PatientService.html":{},"injectables/UserService.html":{}}}],["set",{"_index":1071,"title":{},"body":{"components/FormNewAppointmentComponent.html":{}}}],["setheaders",{"_index":1743,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["sets",{"_index":1737,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["settimeout",{"_index":964,"title":{},"body":{"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/LoginComponent.html":{}}}],["shadow",{"_index":1353,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{},"components/ListComponent.html":{}}}],["sheet",{"_index":269,"title":{},"body":{"components/AppointmentComponent.html":{},"components/BottomSheetComponent.html":{},"components/PatientComponent.html":{}}}],["sheet'},{'name",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{}}}],["sheet.afterdismissed().subscribe((buttonid",{"_index":375,"title":{},"body":{"components/AppointmentComponent.html":{},"components/PatientComponent.html":{}}}],["sheet.component",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"components/AppointmentComponent.html":{},"components/PatientComponent.html":{}}}],["sheet.component.css",{"_index":512,"title":{},"body":{"components/BottomSheetComponent.html":{}}}],["sheet.component.html",{"_index":513,"title":{},"body":{"components/BottomSheetComponent.html":{}}}],["sheet.component.ts",{"_index":507,"title":{},"body":{"components/BottomSheetComponent.html":{},"coverage.html":{}}}],["sheet.component.ts:15",{"_index":518,"title":{},"body":{"components/BottomSheetComponent.html":{}}}],["sheet.component.ts:17",{"_index":523,"title":{},"body":{"components/BottomSheetComponent.html":{}}}],["sheet.component.ts:19",{"_index":521,"title":{},"body":{"components/BottomSheetComponent.html":{}}}],["sheet/bottom",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"components/AppointmentComponent.html":{},"components/BottomSheetComponent.html":{},"components/PatientComponent.html":{},"coverage.html":{}}}],["shorten",{"_index":1127,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["side",{"_index":1570,"title":{},"body":{"components/NavigationComponent.html":{},"classes/ValidateUniqueValues.html":{}}}],["sidenav",{"_index":1575,"title":{},"body":{"components/NavigationComponent.html":{}}}],["sidenavdynamic",{"_index":1576,"title":{},"body":{"components/NavigationComponent.html":{}}}],["sie",{"_index":1004,"title":{},"body":{"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{}}}],["size",{"_index":681,"title":{},"body":{"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{}}}],["snapshot",{"_index":1499,"title":{},"body":{"components/LoginComponent.html":{}}}],["solid",{"_index":1230,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["sort",{"_index":1389,"title":{},"body":{"components/ListComponent.html":{}}}],["sorted",{"_index":1491,"title":{},"body":{"components/ListComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/Address.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Appointment.html":{},"components/AppointmentComponent.html":{},"classes/AppointmentRecord.html":{},"injectables/AppointmentService.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"classes/CustomDateFormatter.html":{},"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{},"classes/Disease.html":{},"interceptors/ErrorInterceptor.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"classes/Medicine.html":{},"injectables/MedicineService.html":{},"components/NavigationComponent.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"classes/Prescription.html":{},"interceptors/RequestInterceptor.html":{},"classes/User.html":{},"injectables/UserService.html":{},"classes/ValidateUniqueValues.html":{}}}],["space",{"_index":671,"title":{},"body":{"components/CalendarComponent.html":{}}}],["spacer",{"_index":1618,"title":{},"body":{"components/NavigationComponent.html":{}}}],["speichern",{"_index":1337,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["spinner",{"_index":684,"title":{},"body":{"components/CalendarComponent.html":{}}}],["splitted",{"_index":850,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["splitted[0",{"_index":853,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["splitted[1",{"_index":855,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["src/.../app.module.ts",{"_index":1878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.routing.ts",{"_index":1885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../appointment.ts",{"_index":1876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../calendar.component.ts",{"_index":1877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../datetimepicker.component.ts",{"_index":1882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../form",{"_index":1881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../german",{"_index":1862,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../list.component.ts",{"_index":1883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../patient.ts",{"_index":1884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/_guards/auth.guards.ts",{"_index":443,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/_guards/auth.guards.ts:10",{"_index":457,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/_guards/auth.guards.ts:14",{"_index":461,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/_helpers/error.interceptor.ts",{"_index":893,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"coverage.html":{}}}],["src/app/_helpers/error.interceptor.ts:12",{"_index":903,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/_helpers/error.interceptor.ts:15",{"_index":908,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/_helpers/request.interceptor.ts",{"_index":1734,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"coverage.html":{}}}],["src/app/_helpers/request.interceptor.ts:13",{"_index":1740,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["src/app/_models/address.ts",{"_index":6,"title":{},"body":{"classes/Address.html":{},"coverage.html":{}}}],["src/app/_models/address.ts:2",{"_index":22,"title":{},"body":{"classes/Address.html":{}}}],["src/app/_models/address.ts:3",{"_index":23,"title":{},"body":{"classes/Address.html":{}}}],["src/app/_models/address.ts:4",{"_index":20,"title":{},"body":{"classes/Address.html":{}}}],["src/app/_models/address.ts:5",{"_index":24,"title":{},"body":{"classes/Address.html":{}}}],["src/app/_models/address.ts:6",{"_index":19,"title":{},"body":{"classes/Address.html":{}}}],["src/app/_models/address.ts:7",{"_index":25,"title":{},"body":{"classes/Address.html":{}}}],["src/app/_models/appointment",{"_index":393,"title":{},"body":{"classes/AppointmentRecord.html":{},"coverage.html":{}}}],["src/app/_models/appointment.ts",{"_index":248,"title":{},"body":{"classes/Appointment.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/_models/appointment.ts:10",{"_index":256,"title":{},"body":{"classes/Appointment.html":{}}}],["src/app/_models/appointment.ts:5",{"_index":255,"title":{},"body":{"classes/Appointment.html":{}}}],["src/app/_models/appointment.ts:7",{"_index":253,"title":{},"body":{"classes/Appointment.html":{}}}],["src/app/_models/appointment.ts:8",{"_index":254,"title":{},"body":{"classes/Appointment.html":{}}}],["src/app/_models/appointment.ts:9",{"_index":252,"title":{},"body":{"classes/Appointment.html":{}}}],["src/app/_models/disease.ts",{"_index":887,"title":{},"body":{"classes/Disease.html":{},"coverage.html":{}}}],["src/app/_models/disease.ts:2",{"_index":889,"title":{},"body":{"classes/Disease.html":{}}}],["src/app/_models/disease.ts:3",{"_index":890,"title":{},"body":{"classes/Disease.html":{}}}],["src/app/_models/disease.ts:4",{"_index":888,"title":{},"body":{"classes/Disease.html":{}}}],["src/app/_models/medicine.ts",{"_index":1538,"title":{},"body":{"classes/Medicine.html":{},"coverage.html":{}}}],["src/app/_models/medicine.ts:2",{"_index":1542,"title":{},"body":{"classes/Medicine.html":{}}}],["src/app/_models/medicine.ts:3",{"_index":1543,"title":{},"body":{"classes/Medicine.html":{}}}],["src/app/_models/medicine.ts:4",{"_index":1540,"title":{},"body":{"classes/Medicine.html":{}}}],["src/app/_models/medicine.ts:5",{"_index":1541,"title":{},"body":{"classes/Medicine.html":{}}}],["src/app/_models/patient.ts",{"_index":1619,"title":{},"body":{"classes/Patient.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/_models/patient.ts:10",{"_index":1626,"title":{},"body":{"classes/Patient.html":{}}}],["src/app/_models/patient.ts:11",{"_index":1632,"title":{},"body":{"classes/Patient.html":{}}}],["src/app/_models/patient.ts:12",{"_index":1630,"title":{},"body":{"classes/Patient.html":{}}}],["src/app/_models/patient.ts:13",{"_index":1624,"title":{},"body":{"classes/Patient.html":{}}}],["src/app/_models/patient.ts:14",{"_index":1622,"title":{},"body":{"classes/Patient.html":{}}}],["src/app/_models/patient.ts:15",{"_index":1623,"title":{},"body":{"classes/Patient.html":{}}}],["src/app/_models/patient.ts:16",{"_index":1633,"title":{},"body":{"classes/Patient.html":{}}}],["src/app/_models/patient.ts:17",{"_index":1625,"title":{},"body":{"classes/Patient.html":{}}}],["src/app/_models/patient.ts:6",{"_index":1629,"title":{},"body":{"classes/Patient.html":{}}}],["src/app/_models/patient.ts:7",{"_index":1627,"title":{},"body":{"classes/Patient.html":{}}}],["src/app/_models/patient.ts:8",{"_index":1631,"title":{},"body":{"classes/Patient.html":{}}}],["src/app/_models/patient.ts:9",{"_index":1628,"title":{},"body":{"classes/Patient.html":{}}}],["src/app/_models/prescription.ts",{"_index":1727,"title":{},"body":{"classes/Prescription.html":{},"coverage.html":{}}}],["src/app/_models/prescription.ts:4",{"_index":1730,"title":{},"body":{"classes/Prescription.html":{}}}],["src/app/_models/prescription.ts:5",{"_index":1729,"title":{},"body":{"classes/Prescription.html":{}}}],["src/app/_models/prescription.ts:6",{"_index":1728,"title":{},"body":{"classes/Prescription.html":{}}}],["src/app/_models/user.ts",{"_index":1747,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/_models/user.ts:2",{"_index":1748,"title":{},"body":{"classes/User.html":{}}}],["src/app/_models/user.ts:3",{"_index":1750,"title":{},"body":{"classes/User.html":{}}}],["src/app/_models/user.ts:4",{"_index":1749,"title":{},"body":{"classes/User.html":{}}}],["src/app/_services/appointment.service.ts",{"_index":402,"title":{},"body":{"injectables/AppointmentService.html":{},"coverage.html":{}}}],["src/app/_services/appointment.service.ts:15",{"_index":429,"title":{},"body":{"injectables/AppointmentService.html":{}}}],["src/app/_services/appointment.service.ts:16",{"_index":417,"title":{},"body":{"injectables/AppointmentService.html":{}}}],["src/app/_services/appointment.service.ts:20",{"_index":425,"title":{},"body":{"injectables/AppointmentService.html":{}}}],["src/app/_services/appointment.service.ts:24",{"_index":424,"title":{},"body":{"injectables/AppointmentService.html":{}}}],["src/app/_services/appointment.service.ts:28",{"_index":427,"title":{},"body":{"injectables/AppointmentService.html":{}}}],["src/app/_services/appointment.service.ts:32",{"_index":420,"title":{},"body":{"injectables/AppointmentService.html":{}}}],["src/app/_services/authentication.service.ts",{"_index":472,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{}}}],["src/app/_services/authentication.service.ts:14",{"_index":482,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/_services/authentication.service.ts:18",{"_index":484,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/_services/authentication.service.ts:37",{"_index":485,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/_services/medicine.service.ts",{"_index":1544,"title":{},"body":{"injectables/MedicineService.html":{},"coverage.html":{}}}],["src/app/_services/medicine.service.ts:14",{"_index":1560,"title":{},"body":{"injectables/MedicineService.html":{}}}],["src/app/_services/medicine.service.ts:15",{"_index":1549,"title":{},"body":{"injectables/MedicineService.html":{}}}],["src/app/_services/medicine.service.ts:19",{"_index":1557,"title":{},"body":{"injectables/MedicineService.html":{}}}],["src/app/_services/medicine.service.ts:23",{"_index":1551,"title":{},"body":{"injectables/MedicineService.html":{}}}],["src/app/_services/medicine.service.ts:27",{"_index":1555,"title":{},"body":{"injectables/MedicineService.html":{}}}],["src/app/_services/medicine.service.ts:31",{"_index":1559,"title":{},"body":{"injectables/MedicineService.html":{}}}],["src/app/_services/medicine.service.ts:35",{"_index":1553,"title":{},"body":{"injectables/MedicineService.html":{}}}],["src/app/_services/patient.service.ts",{"_index":1692,"title":{},"body":{"injectables/PatientService.html":{},"coverage.html":{}}}],["src/app/_services/patient.service.ts:15",{"_index":1714,"title":{},"body":{"injectables/PatientService.html":{}}}],["src/app/_services/patient.service.ts:17",{"_index":1700,"title":{},"body":{"injectables/PatientService.html":{}}}],["src/app/_services/patient.service.ts:21",{"_index":1709,"title":{},"body":{"injectables/PatientService.html":{}}}],["src/app/_services/patient.service.ts:25",{"_index":1711,"title":{},"body":{"injectables/PatientService.html":{}}}],["src/app/_services/patient.service.ts:29",{"_index":1702,"title":{},"body":{"injectables/PatientService.html":{}}}],["src/app/_services/patient.service.ts:33",{"_index":1704,"title":{},"body":{"injectables/PatientService.html":{}}}],["src/app/_services/patient.service.ts:38",{"_index":1713,"title":{},"body":{"injectables/PatientService.html":{}}}],["src/app/_services/patient.service.ts:42",{"_index":1708,"title":{},"body":{"injectables/PatientService.html":{}}}],["src/app/_services/patient.service.ts:46",{"_index":1706,"title":{},"body":{"injectables/PatientService.html":{}}}],["src/app/_services/user.service.ts",{"_index":1752,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/_services/user.service.ts:15",{"_index":1755,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/_services/user.service.ts:19",{"_index":1756,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/app",{"_index":242,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:16",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:18",{"_index":64,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.routing.ts",{"_index":1819,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/appointment/appointment.component.ts",{"_index":264,"title":{},"body":{"components/AppointmentComponent.html":{},"coverage.html":{}}}],["src/app/appointment/appointment.component.ts:113",{"_index":308,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["src/app/appointment/appointment.component.ts:126",{"_index":311,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["src/app/appointment/appointment.component.ts:141",{"_index":310,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["src/app/appointment/appointment.component.ts:27",{"_index":316,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["src/app/appointment/appointment.component.ts:28",{"_index":312,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["src/app/appointment/appointment.component.ts:29",{"_index":313,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["src/app/appointment/appointment.component.ts:31",{"_index":296,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["src/app/appointment/appointment.component.ts:55",{"_index":307,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["src/app/appointment/appointment.component.ts:59",{"_index":300,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["src/app/appointment/appointment.component.ts:64",{"_index":309,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["src/app/appointment/appointment.component.ts:97",{"_index":305,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["src/app/bottom",{"_index":506,"title":{},"body":{"components/BottomSheetComponent.html":{},"coverage.html":{}}}],["src/app/calendar/calendar.component.ts",{"_index":552,"title":{},"body":{"components/CalendarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/calendar/calendar.component.ts:100",{"_index":577,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/calendar/calendar.component.ts:48",{"_index":600,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/calendar/calendar.component.ts:49",{"_index":601,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/calendar/calendar.component.ts:50",{"_index":598,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/calendar/calendar.component.ts:51",{"_index":596,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/calendar/calendar.component.ts:52",{"_index":590,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/calendar/calendar.component.ts:53",{"_index":593,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/calendar/calendar.component.ts:54",{"_index":603,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/calendar/calendar.component.ts:55",{"_index":595,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/calendar/calendar.component.ts:57",{"_index":576,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/calendar/calendar.component.ts:61",{"_index":587,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/calendar/calendar.component.ts:78",{"_index":589,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/calendar/calendar.component.ts:82",{"_index":582,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/calendar/calendar.component.ts:90",{"_index":586,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/calendar/calendar.component.ts:95",{"_index":580,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/calendar/custom",{"_index":750,"title":{},"body":{"classes/CustomDateFormatter.html":{},"coverage.html":{}}}],["src/app/content",{"_index":692,"title":{},"body":{"components/ContentCardComponent.html":{},"coverage.html":{}}}],["src/app/datetimepicker/datetimepicker.component.ts",{"_index":764,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/datetimepicker/datetimepicker.component.ts:12",{"_index":775,"title":{},"body":{"classes/DateConfig.html":{}}}],["src/app/datetimepicker/datetimepicker.component.ts:121",{"_index":876,"title":{},"body":{"components/DatetimepickerComponent.html":{}}}],["src/app/datetimepicker/datetimepicker.component.ts:13",{"_index":776,"title":{},"body":{"classes/DateConfig.html":{}}}],["src/app/datetimepicker/datetimepicker.component.ts:136",{"_index":878,"title":{},"body":{"components/DatetimepickerComponent.html":{}}}],["src/app/datetimepicker/datetimepicker.component.ts:14",{"_index":772,"title":{},"body":{"classes/DateConfig.html":{}}}],["src/app/datetimepicker/datetimepicker.component.ts:15",{"_index":771,"title":{},"body":{"classes/DateConfig.html":{}}}],["src/app/datetimepicker/datetimepicker.component.ts:16",{"_index":773,"title":{},"body":{"classes/DateConfig.html":{}}}],["src/app/datetimepicker/datetimepicker.component.ts:32",{"_index":870,"title":{},"body":{"components/DatetimepickerComponent.html":{}}}],["src/app/datetimepicker/datetimepicker.component.ts:36",{"_index":871,"title":{},"body":{"components/DatetimepickerComponent.html":{}}}],["src/app/datetimepicker/datetimepicker.component.ts:37",{"_index":869,"title":{},"body":{"components/DatetimepickerComponent.html":{}}}],["src/app/datetimepicker/datetimepicker.component.ts:38",{"_index":872,"title":{},"body":{"components/DatetimepickerComponent.html":{}}}],["src/app/datetimepicker/datetimepicker.component.ts:42",{"_index":868,"title":{},"body":{"components/DatetimepickerComponent.html":{}}}],["src/app/datetimepicker/datetimepicker.component.ts:46",{"_index":867,"title":{},"body":{"components/DatetimepickerComponent.html":{}}}],["src/app/datetimepicker/datetimepicker.component.ts:48",{"_index":873,"title":{},"body":{"components/DatetimepickerComponent.html":{}}}],["src/app/datetimepicker/datetimepicker.component.ts:49",{"_index":874,"title":{},"body":{"components/DatetimepickerComponent.html":{}}}],["src/app/datetimepicker/datetimepicker.component.ts:51",{"_index":883,"title":{},"body":{"components/DatetimepickerComponent.html":{}}}],["src/app/datetimepicker/datetimepicker.component.ts:53",{"_index":881,"title":{},"body":{"components/DatetimepickerComponent.html":{}}}],["src/app/datetimepicker/datetimepicker.component.ts:54",{"_index":885,"title":{},"body":{"components/DatetimepickerComponent.html":{}}}],["src/app/datetimepicker/datetimepicker.component.ts:55",{"_index":884,"title":{},"body":{"components/DatetimepickerComponent.html":{}}}],["src/app/datetimepicker/datetimepicker.component.ts:57",{"_index":882,"title":{},"body":{"components/DatetimepickerComponent.html":{}}}],["src/app/datetimepicker/datetimepicker.component.ts:58",{"_index":879,"title":{},"body":{"components/DatetimepickerComponent.html":{}}}],["src/app/datetimepicker/datetimepicker.component.ts:60",{"_index":880,"title":{},"body":{"components/DatetimepickerComponent.html":{}}}],["src/app/datetimepicker/datetimepicker.component.ts:73",{"_index":866,"title":{},"body":{"components/DatetimepickerComponent.html":{}}}],["src/app/datetimepicker/datetimepicker.component.ts:77",{"_index":877,"title":{},"body":{"components/DatetimepickerComponent.html":{}}}],["src/app/form",{"_index":923,"title":{},"body":{"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/home/home.component.ts",{"_index":1369,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts:19",{"_index":1376,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:24",{"_index":1377,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/list/german",{"_index":1831,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/list/list.component.ts",{"_index":1381,"title":{},"body":{"components/ListComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/list/list.component.ts:21",{"_index":1406,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/list/list.component.ts:22",{"_index":1405,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/list/list.component.ts:23",{"_index":1404,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/list/list.component.ts:24",{"_index":1407,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/list/list.component.ts:25",{"_index":1429,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/list/list.component.ts:26",{"_index":1425,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/list/list.component.ts:27",{"_index":1422,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/list/list.component.ts:28",{"_index":1419,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/list/list.component.ts:29",{"_index":1418,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/list/list.component.ts:30",{"_index":1426,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/list/list.component.ts:31",{"_index":1402,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/list/list.component.ts:35",{"_index":1416,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/list/list.component.ts:40",{"_index":1411,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/list/list.component.ts:72",{"_index":1413,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/list/list.component.ts:77",{"_index":1409,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/list/list.component.ts:81",{"_index":1414,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/list/list.component.ts:87",{"_index":1415,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/list/list.component.ts:91",{"_index":1417,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/login/login.component.ts",{"_index":1495,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:19",{"_index":1512,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:20",{"_index":1513,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:21",{"_index":1511,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:25",{"_index":1514,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:26",{"_index":1506,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:33",{"_index":1509,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:41",{"_index":1508,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:49",{"_index":1510,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/navigation/navigation.component.ts",{"_index":1568,"title":{},"body":{"components/NavigationComponent.html":{},"coverage.html":{}}}],["src/app/navigation/navigation.component.ts:22",{"_index":1592,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/navigation/navigation.component.ts:23",{"_index":1593,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/navigation/navigation.component.ts:24",{"_index":1589,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/navigation/navigation.component.ts:26",{"_index":1588,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/navigation/navigation.component.ts:32",{"_index":1579,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/navigation/navigation.component.ts:46",{"_index":1580,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/navigation/navigation.component.ts:50",{"_index":1581,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/patient/patient.component.ts",{"_index":1637,"title":{},"body":{"components/PatientComponent.html":{},"coverage.html":{}}}],["src/app/patient/patient.component.ts:104",{"_index":1648,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/patient/patient.component.ts:108",{"_index":1654,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/patient/patient.component.ts:121",{"_index":1655,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/patient/patient.component.ts:132",{"_index":1657,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/patient/patient.component.ts:145",{"_index":1653,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/patient/patient.component.ts:159",{"_index":1656,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/patient/patient.component.ts:26",{"_index":1660,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/patient/patient.component.ts:27",{"_index":1659,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/patient/patient.component.ts:28",{"_index":1658,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/patient/patient.component.ts:30",{"_index":1646,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/patient/patient.component.ts:39",{"_index":1651,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/patient/patient.component.ts:43",{"_index":1650,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/patient/patient.component.ts:48",{"_index":1652,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/patient/patient.component.ts:86",{"_index":1647,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/validators/genericbackendvalidator.ts",{"_index":1760,"title":{},"body":{"classes/ValidateUniqueValues.html":{},"coverage.html":{}}}],["src/app/validators/genericbackendvalidator.ts:10",{"_index":1768,"title":{},"body":{"classes/ValidateUniqueValues.html":{}}}],["src/environments/environment.prod.ts",{"_index":1835,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1836,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["standard",{"_index":406,"title":{},"body":{"injectables/AppointmentService.html":{},"components/ContentCardComponent.html":{},"injectables/MedicineService.html":{},"injectables/PatientService.html":{}}}],["start",{"_index":636,"title":{},"body":{"components/CalendarComponent.html":{},"miscellaneous/variables.html":{}}}],["startdate",{"_index":767,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["started",{"_index":1863,"title":{"index.html":{},"todo.html":{}},"body":{}}],["startindex",{"_index":1896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["startview",{"_index":768,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["startwith",{"_index":1279,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["state",{"_index":12,"title":{},"body":{"classes/Address.html":{},"guards/AuthGuard.html":{},"components/FormNewPatientComponent.html":{}}}],["state.url",{"_index":470,"title":{},"body":{"guards/AuthGuard.html":{}}}],["statements",{"_index":1798,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1764,"title":{},"body":{"classes/ValidateUniqueValues.html":{}}}],["status",{"_index":1515,"title":{},"body":{"components/LoginComponent.html":{}}}],["stepper",{"_index":1094,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["sticky",{"_index":1616,"title":{},"body":{"components/NavigationComponent.html":{}}}],["storage",{"_index":449,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{}}}],["store",{"_index":496,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["stored",{"_index":479,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["street",{"_index":13,"title":{},"body":{"classes/Address.html":{},"components/FormNewPatientComponent.html":{}}}],["string",{"_index":17,"title":{},"body":{"classes/Address.html":{},"components/AppComponent.html":{},"classes/Appointment.html":{},"classes/AppointmentRecord.html":{},"injectables/AppointmentService.html":{},"injectables/AuthenticationService.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"classes/CustomDateFormatter.html":{},"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{},"classes/Disease.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"classes/Medicine.html":{},"injectables/MedicineService.html":{},"classes/Patient.html":{},"injectables/PatientService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"classes/ValidateUniqueValues.html":{}}}],["styles",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{}}}],["styleurls",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{}}}],["subattribute",{"_index":1131,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["submit",{"_index":1503,"title":{},"body":{"components/LoginComponent.html":{}}}],["subscribe((event",{"_index":1599,"title":{},"body":{"components/NavigationComponent.html":{}}}],["subscribe((medicinelist",{"_index":1295,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["subscribe(res",{"_index":958,"title":{},"body":{"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPrescriptionComponent.html":{}}}],["subscribing",{"_index":1778,"title":{},"body":{"classes/ValidateUniqueValues.html":{}}}],["subscription",{"_index":1390,"title":{},"body":{"components/ListComponent.html":{}}}],["subtitle",{"_index":373,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["success",{"_index":961,"title":{},"body":{"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{}}}],["successful",{"_index":480,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{}}}],["support",{"_index":1867,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1868,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":377,"title":{},"body":{"components/AppointmentComponent.html":{},"components/ContentCardComponent.html":{},"components/ListComponent.html":{}}}],["switch(buttonid",{"_index":1678,"title":{},"body":{"components/PatientComponent.html":{}}}],["switchmap",{"_index":1281,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["switchmap(value",{"_index":1292,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["switchmapto",{"_index":1771,"title":{},"body":{"classes/ValidateUniqueValues.html":{}}}],["switchmapto(patientservice.checkuniquevalue(control.value",{"_index":1790,"title":{},"body":{"classes/ValidateUniqueValues.html":{}}}],["table",{"_index":1383,"title":{},"body":{"components/ListComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1837,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":665,"title":{},"body":{"components/CalendarComponent.html":{}}}],["tap",{"_index":1283,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["telefonnummer",{"_index":1194,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["tempbutton",{"_index":940,"title":{},"body":{"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{}}}],["template",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{}}}],["templateurl",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{}}}],["termin",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{},"index.html":{}}}],["termindaten",{"_index":371,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["termine",{"_index":1480,"title":{},"body":{"components/ListComponent.html":{}}}],["termins",{"_index":361,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["test",{"_index":1526,"title":{},"body":{"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/UserService.html":{}}}],["testlogin",{"_index":1537,"title":{},"body":{"components/LoginComponent.html":{}}}],["text",{"_index":352,"title":{},"body":{"components/AppointmentComponent.html":{},"components/ContentCardComponent.html":{},"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/PatientComponent.html":{}}}],["th.mat",{"_index":1490,"title":{},"body":{"components/ListComponent.html":{}}}],["this._snackbar.open(\"die",{"_index":998,"title":{},"body":{"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{}}}],["this._snackbar.open(\"patient",{"_index":1181,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["this._snackbar.open(\"problem",{"_index":1185,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["this._snackbar.open(text",{"_index":1299,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["this.adapter.setlocale(\"de",{"_index":824,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["this.addressform",{"_index":1152,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["this.addressform.controls",{"_index":1158,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["this.addselecteddayviewclass",{"_index":649,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.addtodatabasepanelopened",{"_index":1325,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["this.afterclose.emit(this.appointment",{"_index":967,"title":{},"body":{"components/FormAppointmentAddNoteComponent.html":{},"components/FormNewAppointmentComponent.html":{}}}],["this.alertbutton('invalid",{"_index":1524,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.alertbutton('success",{"_index":1521,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.api}/appointment",{"_index":430,"title":{},"body":{"injectables/AppointmentService.html":{}}}],["this.api}/medicine",{"_index":1561,"title":{},"body":{"injectables/MedicineService.html":{}}}],["this.api}/patient",{"_index":1715,"title":{},"body":{"injectables/PatientService.html":{}}}],["this.appointment",{"_index":1085,"title":{},"body":{"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{}}}],["this.appointment.datetime",{"_index":1081,"title":{},"body":{"components/FormNewAppointmentComponent.html":{}}}],["this.appointment.datetime.tostring",{"_index":1227,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["this.appointment.description",{"_index":1083,"title":{},"body":{"components/FormNewAppointmentComponent.html":{}}}],["this.appointmentid",{"_index":993,"title":{},"body":{"components/FormDeleteAppointmentComponent.html":{}}}],["this.appointmentmade",{"_index":1160,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["this.appointmentobservable",{"_index":324,"title":{},"body":{"components/AppointmentComponent.html":{},"components/FormDeleteAppointmentComponent.html":{}}}],["this.appointmentobservable.subscribe(a",{"_index":341,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["this.appointmentservice.addnotes(appointmentid",{"_index":957,"title":{},"body":{"components/FormAppointmentAddNoteComponent.html":{}}}],["this.appointmentservice.deleteappointment(appointmentid",{"_index":994,"title":{},"body":{"components/FormDeleteAppointmentComponent.html":{}}}],["this.appointmentservice.getall",{"_index":628,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.appointmentservice.updateappointment(this.data.appointment.id",{"_index":1084,"title":{},"body":{"components/FormNewAppointmentComponent.html":{}}}],["this.authenticationservice.logout",{"_index":918,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{}}}],["this.basicinfoform",{"_index":1135,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["this.basicinfoform.controls",{"_index":1157,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["this.bottomsheet.open(bottomsheetcomponent",{"_index":345,"title":{},"body":{"components/AppointmentComponent.html":{},"components/PatientComponent.html":{}}}],["this.bottomsheetref.dismiss(e",{"_index":525,"title":{},"body":{"components/BottomSheetComponent.html":{}}}],["this.breakpointobserver.observe([breakpoints.xsmall",{"_index":1582,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.breakpointobserver.observe(breakpoints.handset).pipe",{"_index":719,"title":{},"body":{"components/ContentCardComponent.html":{}}}],["this.button",{"_index":963,"title":{},"body":{"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/LoginComponent.html":{}}}],["this.button.color",{"_index":1519,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.button.text",{"_index":1518,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.buttonfeedback",{"_index":959,"title":{},"body":{"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{}}}],["this.columns.map(x",{"_index":1435,"title":{},"body":{"components/ListComponent.html":{}}}],["this.config",{"_index":825,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["this.config.maxdate",{"_index":829,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["this.config.mindate",{"_index":832,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["this.config.startdate",{"_index":835,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["this.config.startview",{"_index":828,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["this.createtable",{"_index":1437,"title":{},"body":{"components/ListComponent.html":{}}}],["this.data.appointment",{"_index":1066,"title":{},"body":{"components/FormNewAppointmentComponent.html":{}}}],["this.data.datetime",{"_index":1007,"title":{},"body":{"components/FormDeleteAppointmentComponent.html":{}}}],["this.data.id",{"_index":956,"title":{},"body":{"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{}}}],["this.data.patient",{"_index":1124,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["this.data.patient[attribute",{"_index":1134,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["this.data.patient[attribute][subattribute",{"_index":1133,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["this.data.patientname",{"_index":1006,"title":{},"body":{"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPrescriptionComponent.html":{}}}],["this.dataobservable.subscribe(entries",{"_index":1439,"title":{},"body":{"components/ListComponent.html":{}}}],["this.datasource",{"_index":1445,"title":{},"body":{"components/ListComponent.html":{}}}],["this.datasource.filter",{"_index":1470,"title":{},"body":{"components/ListComponent.html":{}}}],["this.datasource.filtereddata.find(el",{"_index":1475,"title":{},"body":{"components/ListComponent.html":{}}}],["this.datasource.filterpredicate",{"_index":1460,"title":{},"body":{"components/ListComponent.html":{}}}],["this.datasource.paginator",{"_index":1449,"title":{},"body":{"components/ListComponent.html":{}}}],["this.datasource.sort",{"_index":1447,"title":{},"body":{"components/ListComponent.html":{}}}],["this.datasource.sortingdataaccessor",{"_index":1455,"title":{},"body":{"components/ListComponent.html":{}}}],["this.dateonly",{"_index":837,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["this.datetime",{"_index":1068,"title":{},"body":{"components/FormNewAppointmentComponent.html":{}}}],["this.datetime.format('dd.mm.yyyy",{"_index":1082,"title":{},"body":{"components/FormNewAppointmentComponent.html":{}}}],["this.datetime.isbetween(moment('08:00",{"_index":1076,"title":{},"body":{"components/FormNewAppointmentComponent.html":{}}}],["this.dateupdate.emit(newdate",{"_index":847,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["this.dayview",{"_index":650,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.dayview.foreach(hoursegment",{"_index":651,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.dayviewhour",{"_index":762,"title":{},"body":{"classes/CustomDateFormatter.html":{}}}],["this.description",{"_index":1072,"title":{},"body":{"components/FormNewAppointmentComponent.html":{}}}],["this.dialog.open(formappointmentaddnotecomponent",{"_index":384,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["this.dialog.open(formdeleteappointmentcomponent",{"_index":392,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["this.dialog.open(formdeletepatientcomponent",{"_index":1690,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.dialog.open(formnewappointmentcomponent",{"_index":389,"title":{},"body":{"components/AppointmentComponent.html":{},"components/PatientComponent.html":{}}}],["this.dialog.open(formnewpatientcomponent",{"_index":1685,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.dialog.open(formnewprescriptioncomponent",{"_index":1691,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.dialogref.close",{"_index":965,"title":{},"body":{"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{}}}],["this.displayedcolumns",{"_index":1434,"title":{},"body":{"components/ListComponent.html":{}}}],["this.events",{"_index":627,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.f1[key].value",{"_index":1171,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["this.f2",{"_index":1163,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["this.f2[key].value",{"_index":1174,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["this.fabbuttononclick.emit",{"_index":737,"title":{},"body":{"components/ContentCardComponent.html":{}}}],["this.fb.group",{"_index":1286,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["this.filteredmedicine",{"_index":1296,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["this.filteredmedicine.find(m",{"_index":1310,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["this.form",{"_index":1058,"title":{},"body":{"components/FormNewAppointmentComponent.html":{}}}],["this.formbuilder.group",{"_index":1136,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["this.formerror.hidden",{"_index":953,"title":{},"body":{"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{}}}],["this.formerror.text",{"_index":995,"title":{},"body":{"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{}}}],["this.formerror.type",{"_index":1070,"title":{},"body":{"components/FormNewAppointmentComponent.html":{}}}],["this.handlebottomsheetbutton(buttonid",{"_index":376,"title":{},"body":{"components/AppointmentComponent.html":{},"components/PatientComponent.html":{}}}],["this.hideolder",{"_index":1441,"title":{},"body":{"components/ListComponent.html":{}}}],["this.http.delete(`${this.appointmenturl}/${appointmentid",{"_index":437,"title":{},"body":{"injectables/AppointmentService.html":{}}}],["this.http.delete(`${this.medicineurl}/${medicineid",{"_index":1564,"title":{},"body":{"injectables/MedicineService.html":{}}}],["this.http.delete(`${this.patienturl}/${patientid",{"_index":1724,"title":{},"body":{"injectables/PatientService.html":{}}}],["this.http.get(`${this.api}/auth",{"_index":493,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.http.get(`${this.api}/patient",{"_index":1759,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(`${this.medicineurl}/search/${value",{"_index":1567,"title":{},"body":{"injectables/MedicineService.html":{}}}],["this.http.get(`${this.patienturl}/${patientid",{"_index":1719,"title":{},"body":{"injectables/PatientService.html":{}}}],["this.http.get(this.appointmenturl",{"_index":436,"title":{},"body":{"injectables/AppointmentService.html":{}}}],["this.http.get(this.medicineurl",{"_index":1562,"title":{},"body":{"injectables/MedicineService.html":{}}}],["this.http.get(this.patienturl",{"_index":1718,"title":{},"body":{"injectables/PatientService.html":{}}}],["this.http.post(`${this.appointmenturl}/${appointmentid}/notes",{"_index":439,"title":{},"body":{"injectables/AppointmentService.html":{}}}],["this.http.post(`${this.patienturl",{"_index":1722,"title":{},"body":{"injectables/PatientService.html":{}}}],["this.http.post(`${this.patienturl}/${patientid}/appointment",{"_index":1720,"title":{},"body":{"injectables/PatientService.html":{}}}],["this.http.post(`${this.patienturl}/check",{"_index":1726,"title":{},"body":{"injectables/PatientService.html":{}}}],["this.http.post(this.medicineurl",{"_index":1563,"title":{},"body":{"injectables/MedicineService.html":{}}}],["this.http.put(`${this.appointmenturl}/${appointmentid",{"_index":438,"title":{},"body":{"injectables/AppointmentService.html":{}}}],["this.http.put(`${this.medicineurl}/${medicineid",{"_index":1565,"title":{},"body":{"injectables/MedicineService.html":{}}}],["this.http.put(`${this.patienturl}/${patientid",{"_index":1723,"title":{},"body":{"injectables/PatientService.html":{}}}],["this.isloading",{"_index":1291,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["this.listref.refreshlist",{"_index":391,"title":{},"body":{"components/AppointmentComponent.html":{},"components/PatientComponent.html":{}}}],["this.loading",{"_index":1525,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loggedin",{"_index":1601,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.medicine",{"_index":1733,"title":{},"body":{"classes/Prescription.html":{}}}],["this.medicineform",{"_index":1285,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["this.medicineform.value.userinput",{"_index":1305,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["this.medicineform.value.userinput.id",{"_index":1304,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["this.medicineservice.addnewmedicine(this.newmedicine",{"_index":1333,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["this.medicineservice.autocomplete(medicinename).topromise",{"_index":1317,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["this.medicineservice.autocomplete(value",{"_index":1294,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["this.model",{"_index":846,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["this.momentdate",{"_index":841,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["this.momentdate.set('hour",{"_index":858,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["this.momentdate.set('minute",{"_index":860,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["this.momentdate.todate",{"_index":845,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["this.momentdate.utc(true",{"_index":843,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["this.newmedicine.name",{"_index":1332,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["this.note",{"_index":955,"title":{},"body":{"components/FormAppointmentAddNoteComponent.html":{}}}],["this.onclickoutput.emit(clickedelementdata",{"_index":1477,"title":{},"body":{"components/ListComponent.html":{}}}],["this.openappointmentrecorddialog",{"_index":379,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["this.openbottomsheet",{"_index":344,"title":{},"body":{"components/AppointmentComponent.html":{},"components/PatientComponent.html":{}}}],["this.opendeleteappointmentdialog",{"_index":382,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["this.opendeletepatientdialog",{"_index":1681,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.opennewappointmentdialog",{"_index":1679,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.opennewpatientdialog",{"_index":1683,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.opennewprescriptiondialog",{"_index":1680,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.opensnackbar(\"fehler",{"_index":1335,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["this.opensnackbar(\"medikament",{"_index":1322,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["this.openupdateappointmentdialog",{"_index":381,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["this.openupdatepatientdialog",{"_index":1682,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.paginator",{"_index":1450,"title":{},"body":{"components/ListComponent.html":{}}}],["this.patient).subscribe(res",{"_index":1179,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["this.patient.address",{"_index":1172,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["this.patient.address[key",{"_index":1175,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["this.patient.firstname",{"_index":1224,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["this.patient.id",{"_index":1176,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["this.patient.lastname",{"_index":1225,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["this.patient[key",{"_index":1169,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["this.patientid",{"_index":966,"title":{},"body":{"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{}}}],["this.patientname",{"_index":1089,"title":{},"body":{"components/FormNewAppointmentComponent.html":{},"components/FormNewPrescriptionComponent.html":{}}}],["this.patientobservable",{"_index":1024,"title":{},"body":{"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/PatientComponent.html":{}}}],["this.patients",{"_index":1380,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.patientservice.addappointment(patientid",{"_index":1087,"title":{},"body":{"components/FormNewAppointmentComponent.html":{}}}],["this.patientservice.addnewpatient(this.patient).subscribe(res",{"_index":1187,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["this.patientservice.deletepatient(patientid",{"_index":1026,"title":{},"body":{"components/FormDeletePatientComponent.html":{}}}],["this.patientservice.getall().pipe(first()).subscribe(patients",{"_index":1379,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.patientservice.getpatient(this.selectedpatient.id).topromise",{"_index":1686,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.patientservice.updatepatient(this.data.patient.id",{"_index":1178,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["this.prescription.medicine",{"_index":1338,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["this.prescription.medicine.filter(m",{"_index":1339,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["this.prescription.medicine.includes(medicine",{"_index":1330,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["this.prescription.medicine.push(medicine",{"_index":1331,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["this.prescription.medicine.push(res.data",{"_index":1334,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["this.purpose",{"_index":826,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["this.readform",{"_index":1177,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["this.refreshlist",{"_index":1469,"title":{},"body":{"components/ListComponent.html":{}}}],["this.returnurl",{"_index":1516,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.route.snapshot.queryparams['returnurl",{"_index":1517,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['/login",{"_index":467,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.navigate([this.returnurl",{"_index":1522,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.selectedappointment",{"_index":343,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["this.selectedappointment.appointmentrecord.notes",{"_index":374,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["this.selectedappointment.datetime",{"_index":372,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["this.selectedappointment.firstname",{"_index":365,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["this.selectedappointment.id",{"_index":385,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["this.selectedappointment.lastname",{"_index":366,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["this.selecteddayviewdate",{"_index":648,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.selecteddayviewdate.gettime",{"_index":655,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.selectedmonthviewday",{"_index":646,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.selectedpatient",{"_index":1661,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.selectedpatient.firstname",{"_index":1676,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.selectedpatient.id",{"_index":1684,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.selectedpatient.lastname",{"_index":1677,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.sidenav.toggle",{"_index":1602,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.sidenavdynamic",{"_index":1586,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.sort",{"_index":1448,"title":{},"body":{"components/ListComponent.html":{}}}],["this.stepper.next",{"_index":1161,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["this.subscription",{"_index":1438,"title":{},"body":{"components/ListComponent.html":{}}}],["this.subscription.unsubscribe",{"_index":1478,"title":{},"body":{"components/ListComponent.html":{}}}],["this.timeset",{"_index":1067,"title":{},"body":{"components/FormNewAppointmentComponent.html":{}}}],["this.timeupdate.emit(newdate",{"_index":862,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["this.updating",{"_index":1065,"title":{},"body":{"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{}}}],["this.username.length",{"_index":1520,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.view",{"_index":640,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.viewdate",{"_index":643,"title":{},"body":{"components/CalendarComponent.html":{}}}],["throwerror",{"_index":911,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["throwerror(error",{"_index":922,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["thüringen",{"_index":1219,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["time",{"_index":784,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPrescriptionComponent.html":{}}}],["time.split",{"_index":851,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["timechange",{"_index":864,"title":{},"body":{"components/DatetimepickerComponent.html":{}}}],["timechange(time",{"_index":849,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["timeformgroup",{"_index":807,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["timeout",{"_index":1783,"title":{},"body":{"classes/ValidateUniqueValues.html":{}}}],["timepicker",{"_index":186,"title":{},"body":{"modules/AppModule.html":{},"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{},"dependencies.html":{}}}],["timer",{"_index":1772,"title":{},"body":{"classes/ValidateUniqueValues.html":{}}}],["timer(500).pipe",{"_index":1789,"title":{},"body":{"classes/ValidateUniqueValues.html":{}}}],["timeset",{"_index":1032,"title":{},"body":{"components/FormNewAppointmentComponent.html":{}}}],["timeupdate",{"_index":801,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["title",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/LoginComponent.html":{},"components/PatientComponent.html":{}}}],["todo",{"_index":720,"title":{"todo.html":{}},"body":{"components/ContentCardComponent.html":{}}}],["toggle",{"_index":1569,"title":{},"body":{"components/NavigationComponent.html":{}}}],["togglesidenav",{"_index":1578,"title":{},"body":{"components/NavigationComponent.html":{}}}],["toolbar",{"_index":1613,"title":{},"body":{"components/NavigationComponent.html":{}}}],["toolbar.mat",{"_index":1615,"title":{},"body":{"components/NavigationComponent.html":{}}}],["top",{"_index":672,"title":{},"body":{"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{}}}],["touchui",{"_index":769,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["transition",{"_index":533,"title":{},"body":{"components/BottomSheetComponent.html":{},"components/ListComponent.html":{}}}],["tree",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{}}}],["true",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"components/AppointmentComponent.html":{},"guards/AuthGuard.html":{},"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{},"classes/ValidateUniqueValues.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":1898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ts",{"_index":326,"title":{},"body":{"components/AppointmentComponent.html":{},"components/CalendarComponent.html":{},"components/FormNewPrescriptionComponent.html":{}}}],["tslib",{"_index":1857,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":15,"title":{},"body":{"classes/Address.html":{},"components/AppComponent.html":{},"classes/Appointment.html":{},"components/AppointmentComponent.html":{},"classes/AppointmentRecord.html":{},"injectables/AppointmentService.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"classes/CustomDateFormatter.html":{},"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{},"classes/Disease.html":{},"interceptors/ErrorInterceptor.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"classes/Medicine.html":{},"injectables/MedicineService.html":{},"components/NavigationComponent.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"classes/Prescription.html":{},"interceptors/RequestInterceptor.html":{},"classes/User.html":{},"injectables/UserService.html":{},"classes/ValidateUniqueValues.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":1293,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["undefined",{"_index":337,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["unique",{"_index":1761,"title":{},"body":{"classes/ValidateUniqueValues.html":{}}}],["unsubscribed",{"_index":1780,"title":{},"body":{"classes/ValidateUniqueValues.html":{}}}],["unsubscribes",{"_index":1773,"title":{},"body":{"classes/ValidateUniqueValues.html":{}}}],["up",{"_index":797,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["update",{"_index":357,"title":{},"body":{"components/AppointmentComponent.html":{},"components/FormNewPatientComponent.html":{}}}],["update_appointment",{"_index":356,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["update_patient",{"_index":1671,"title":{},"body":{"components/PatientComponent.html":{}}}],["updateappointment",{"_index":414,"title":{},"body":{"injectables/AppointmentService.html":{}}}],["updateappointment(appointmentid",{"_index":426,"title":{},"body":{"injectables/AppointmentService.html":{}}}],["updated",{"_index":1182,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["updatemedicine",{"_index":1548,"title":{},"body":{"injectables/MedicineService.html":{}}}],["updatemedicine(medicineid",{"_index":1558,"title":{},"body":{"injectables/MedicineService.html":{}}}],["updatepatient",{"_index":1699,"title":{},"body":{"injectables/PatientService.html":{}}}],["updatepatient(patientid",{"_index":1712,"title":{},"body":{"injectables/PatientService.html":{}}}],["updates",{"_index":1063,"title":{},"body":{"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{}}}],["updating",{"_index":1031,"title":{},"body":{"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{}}}],["url",{"_index":466,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["use",{"_index":990,"title":{},"body":{"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPrescriptionComponent.html":{}}}],["useclass",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalendarComponent.html":{},"overview.html":{}}}],["used",{"_index":1030,"title":{},"body":{"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{}}}],["usefactory",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":445,"title":{"classes/User.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/NavigationComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userinput",{"_index":1287,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["username",{"_index":474,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"classes/User.html":{}}}],["userservice",{"_index":1751,"title":{"injectables/UserService.html":{}},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["usevalue",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"overview.html":{}}}],["using",{"_index":476,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{}}}],["utils",{"_index":610,"title":{},"body":{"components/CalendarComponent.html":{}}}],["valid",{"_index":1758,"title":{},"body":{"injectables/UserService.html":{}}}],["validateuniquevalues",{"_index":1122,"title":{"classes/ValidateUniqueValues.html":{}},"body":{"components/FormNewPatientComponent.html":{},"classes/ValidateUniqueValues.html":{},"coverage.html":{}}}],["validateuniquevalues.createvalidator(this.patientservice",{"_index":1149,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["validation",{"_index":1762,"title":{},"body":{"classes/ValidateUniqueValues.html":{}}}],["validator",{"_index":1777,"title":{},"body":{"classes/ValidateUniqueValues.html":{}}}],["validators",{"_index":1056,"title":{},"body":{"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{}}}],["validators.email",{"_index":1148,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["validators.minlength(2",{"_index":1138,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["validators.minlength(5",{"_index":1147,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["validators.pattern('^0\\\\d{11",{"_index":1155,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["validators.required",{"_index":1061,"title":{},"body":{"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{}}}],["validators/genericbackendvalidator",{"_index":1123,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["value",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"classes/Appointment.html":{},"components/AppointmentComponent.html":{},"injectables/AppointmentService.html":{},"injectables/AuthenticationService.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"injectables/MedicineService.html":{},"components/NavigationComponent.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"injectables/UserService.html":{},"classes/ValidateUniqueValues.html":{},"miscellaneous/variables.html":{}}}],["valuechanges",{"_index":1289,"title":{},"body":{"components/FormNewPrescriptionComponent.html":{}}}],["valuetoexclude",{"_index":1767,"title":{},"body":{"classes/ValidateUniqueValues.html":{}}}],["var",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{}}}],["variable",{"_index":1806,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1875,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vereinbaren",{"_index":1665,"title":{},"body":{"components/PatientComponent.html":{}}}],["vereinbart",{"_index":1226,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["verify",{"_index":1757,"title":{},"body":{"injectables/UserService.html":{}}}],["via",{"_index":509,"title":{},"body":{"components/BottomSheetComponent.html":{}}}],["view",{"_index":553,"title":{},"body":{"components/CalendarComponent.html":{}}}],["viewchange",{"_index":575,"title":{},"body":{"components/CalendarComponent.html":{}}}],["viewchange(view",{"_index":588,"title":{},"body":{"components/CalendarComponent.html":{}}}],["viewchild",{"_index":317,"title":{},"body":{"components/AppointmentComponent.html":{},"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{},"components/FormNewPatientComponent.html":{},"components/ListComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{}}}],["viewchild(listcomponent",{"_index":315,"title":{},"body":{"components/AppointmentComponent.html":{},"components/PatientComponent.html":{}}}],["viewchild(matpaginator",{"_index":1421,"title":{},"body":{"components/ListComponent.html":{}}}],["viewchild(matsidenav",{"_index":1591,"title":{},"body":{"components/NavigationComponent.html":{}}}],["viewchild(matsort",{"_index":1424,"title":{},"body":{"components/ListComponent.html":{}}}],["viewchild(matstepper",{"_index":1116,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["viewchild(mattable",{"_index":1428,"title":{},"body":{"components/ListComponent.html":{}}}],["viewdate",{"_index":569,"title":{},"body":{"components/CalendarComponent.html":{}}}],["views",{"_index":556,"title":{},"body":{"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{}}}],["viewtitle':locale",{"_index":662,"title":{},"body":{"components/CalendarComponent.html":{}}}],["viewtitle\\':locale",{"_index":691,"title":{},"body":{"components/CalendarComponent.html":{}}}],["void",{"_index":303,"title":{},"body":{"components/AppointmentComponent.html":{},"injectables/AuthenticationService.html":{},"components/BottomSheetComponent.html":{},"components/CalendarComponent.html":{},"components/ContentCardComponent.html":{},"components/DatetimepickerComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PatientComponent.html":{}}}],["von",{"_index":364,"title":{},"body":{"components/AppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/PatientComponent.html":{},"miscellaneous/variables.html":{}}}],["vorhanden",{"_index":1198,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["vorname",{"_index":260,"title":{},"body":{"classes/Appointment.html":{},"classes/Patient.html":{},"miscellaneous/variables.html":{}}}],["vorpommern",{"_index":1208,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["warn",{"_index":997,"title":{},"body":{"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/LoginComponent.html":{}}}],["web",{"_index":1864,"title":{},"body":{"index.html":{}}}],["weekend",{"_index":1074,"title":{},"body":{"components/FormNewAppointmentComponent.html":{}}}],["weekends",{"_index":641,"title":{},"body":{"components/CalendarComponent.html":{}}}],["weekstartson",{"_index":570,"title":{},"body":{"components/CalendarComponent.html":{}}}],["weekviewhour",{"_index":753,"title":{},"body":{"classes/CustomDateFormatter.html":{}}}],["weekviewhour(undefined",{"_index":757,"title":{},"body":{"classes/CustomDateFormatter.html":{}}}],["weiblich",{"_index":1191,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["weight",{"_index":676,"title":{},"body":{"components/CalendarComponent.html":{},"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPrescriptionComponent.html":{}}}],["weiter",{"_index":660,"title":{},"body":{"components/CalendarComponent.html":{},"components/FormNewPatientComponent.html":{}}}],["westfalen",{"_index":1211,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["white",{"_index":690,"title":{},"body":{"components/CalendarComponent.html":{},"components/LoginComponent.html":{}}}],["width",{"_index":969,"title":{},"body":{"components/FormAppointmentAddNoteComponent.html":{},"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{},"components/FormNewAppointmentComponent.html":{},"components/FormNewPatientComponent.html":{},"components/FormNewPrescriptionComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{}}}],["window.screen.width",{"_index":839,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["woche",{"_index":664,"title":{},"body":{"components/CalendarComponent.html":{}}}],["wochendende",{"_index":1075,"title":{},"body":{"components/FormNewAppointmentComponent.html":{}}}],["working",{"_index":1079,"title":{},"body":{"components/FormNewAppointmentComponent.html":{}}}],["wurden",{"_index":999,"title":{},"body":{"components/FormDeleteAppointmentComponent.html":{},"components/FormDeletePatientComponent.html":{}}}],["württemberg",{"_index":1200,"title":{},"body":{"components/FormNewPatientComponent.html":{}}}],["x.id",{"_index":1436,"title":{},"body":{"components/ListComponent.html":{}}}],["year",{"_index":774,"title":{},"body":{"classes/DateConfig.html":{},"components/DatetimepickerComponent.html":{}}}],["yellow",{"_index":624,"title":{},"body":{"components/CalendarComponent.html":{},"miscellaneous/variables.html":{}}}],["yyyy",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["z",{"_index":1617,"title":{},"body":{"components/NavigationComponent.html":{}}}],["zip",{"_index":14,"title":{},"body":{"classes/Address.html":{},"components/FormNewPatientComponent.html":{}}}],["zone.js",{"_index":1859,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"overview.html":{}}}],["zum",{"_index":355,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["zurück",{"_index":658,"title":{},"body":{"components/CalendarComponent.html":{},"components/FormNewPatientComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/Address.html":{"url":"classes/Address.html","title":"class - Address","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Address\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/address.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                buildingNumber\n                            \n                            \n                                city\n                            \n                            \n                                id\n                            \n                            \n                                state\n                            \n                            \n                                street\n                            \n                            \n                                zip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buildingNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/address.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/address.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/address.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            state\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/address.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            street\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/address.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            zip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/address.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Address {\n    id: number;\n    state: string;\n    city: string;\n    street: string;\n    buildingNumber: string;\n    zip: string;\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] }\n                                { provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS }\n                \n            \n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loggedIn\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loggedIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Termin App'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material';\nimport { MomentDateAdapter, MAT_MOMENT_DATE_FORMATS } from '@angular/material-moment-adapter';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  providers: [\n    {provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE]},\n    {provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS},\n  ]\n})\nexport class AppComponent {\n  loggedIn : boolean = false;\n\n  title = 'Termin App';\n}\n\n    \n\n    \n        \n    \n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppointmentComponent', 'selector': 'app-appointment'},{'name': 'BottomSheetComponent', 'selector': 'app-bottom-sheet'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'ContentCardComponent', 'selector': 'app-content-card'},{'name': 'DatetimepickerComponent', 'selector': 'app-datetimepicker'},{'name': 'FormAppointmentAddNoteComponent', 'selector': 'app-form-appointment-add-note'},{'name': 'FormDeleteAppointmentComponent', 'selector': 'app-form-delete-appointment'},{'name': 'FormDeletePatientComponent', 'selector': 'app-form-delete-patient'},{'name': 'FormNewAppointmentComponent', 'selector': 'app-form-new-appointment'},{'name': 'FormNewPatientComponent', 'selector': 'app-form-new-patient'},{'name': 'FormNewPrescriptionComponent', 'selector': 'app-form-new-prescription'},{'name': 'HomeComponent', 'selector': 'home-component'},{'name': 'ListComponent', 'selector': 'list-component'},{'name': 'LoginComponent', 'selector': ''},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PatientComponent', 'selector': 'app-patient'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_AppComponent_providers\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppointmentComponent\n\nAppointmentComponent\n\nAppModule -->\n\nAppointmentComponent->AppModule\n\n\n\n\n\nBottomSheetComponent\n\nBottomSheetComponent\n\nAppModule -->\n\nBottomSheetComponent->AppModule\n\n\n\n\n\nCalendarComponent\n\nCalendarComponent\n\nAppModule -->\n\nCalendarComponent->AppModule\n\n\n\n\n\nContentCardComponent\n\nContentCardComponent\n\nAppModule -->\n\nContentCardComponent->AppModule\n\n\n\n\n\nDatetimepickerComponent\n\nDatetimepickerComponent\n\nAppModule -->\n\nDatetimepickerComponent->AppModule\n\n\n\n\n\nFormAppointmentAddNoteComponent\n\nFormAppointmentAddNoteComponent\n\nAppModule -->\n\nFormAppointmentAddNoteComponent->AppModule\n\n\n\n\n\nFormDeleteAppointmentComponent\n\nFormDeleteAppointmentComponent\n\nAppModule -->\n\nFormDeleteAppointmentComponent->AppModule\n\n\n\n\n\nFormDeletePatientComponent\n\nFormDeletePatientComponent\n\nAppModule -->\n\nFormDeletePatientComponent->AppModule\n\n\n\n\n\nFormNewAppointmentComponent\n\nFormNewAppointmentComponent\n\nAppModule -->\n\nFormNewAppointmentComponent->AppModule\n\n\n\n\n\nFormNewPatientComponent\n\nFormNewPatientComponent\n\nAppModule -->\n\nFormNewPatientComponent->AppModule\n\n\n\n\n\nFormNewPrescriptionComponent\n\nFormNewPrescriptionComponent\n\nAppModule -->\n\nFormNewPrescriptionComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nListComponent\n\nListComponent\n\nAppModule -->\n\nListComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNavigationComponent\n\nNavigationComponent\n\nAppModule -->\n\nNavigationComponent->AppModule\n\n\n\n\n\nPatientComponent\n\nPatientComponent\n\nAppModule -->\n\nPatientComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n{ provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] }\n\n{ provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] }\n\nAppComponent -->\n\n{ provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] }->AppComponent\n\n\n\n\n\n{ provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS }\n\n{ provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS }\n\nAppComponent -->\n\n{ provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS }->AppComponent\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nRequestInterceptor\n\nRequestInterceptor\n\nAppModule -->\n\nRequestInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            AppointmentComponent\n                        \n                        \n                            BottomSheetComponent\n                        \n                        \n                            CalendarComponent\n                        \n                        \n                            ContentCardComponent\n                        \n                        \n                            DatetimepickerComponent\n                        \n                        \n                            FormAppointmentAddNoteComponent\n                        \n                        \n                            FormDeleteAppointmentComponent\n                        \n                        \n                            FormDeletePatientComponent\n                        \n                        \n                            FormNewAppointmentComponent\n                        \n                        \n                            FormNewPatientComponent\n                        \n                        \n                            FormNewPrescriptionComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            ListComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            NavigationComponent\n                        \n                        \n                            PatientComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            BottomSheetComponent\n                        \n                        \n                            FormAppointmentAddNoteComponent\n                        \n                        \n                            FormDeleteAppointmentComponent\n                        \n                        \n                            FormDeletePatientComponent\n                        \n                        \n                            FormNewAppointmentComponent\n                        \n                        \n                            FormNewPatientComponent\n                        \n                        \n                            FormNewPrescriptionComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ErrorInterceptor\n                        \n                        \n                            RequestInterceptor\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport localeDe from '@angular/common/locales/de';\nimport { registerLocaleData } from '@angular/common';\nimport { routing } from './app.routing';\n\nimport {\n  MatToolbarModule,\n  MatButtonModule,\n  MatSidenavModule,\n  MatIconModule,\n  MatListModule,\n  MatGridListModule,\n  MatPaginatorModule,\n  MatCardModule,\n  MatMenuModule,\n  MatFormFieldModule,\n  MatSelectModule,\n  MatInputModule,\n  MatProgressSpinnerModule,\n  MatTableModule,\n  MatPaginatorIntl,\n  MatSortModule,\n  MatBottomSheetModule,\n  MatDialogModule,\n  MatDatepickerModule,\n  MatButtonToggleModule,\n  DateAdapter,\n  MatStepperModule,\n  MatRadioModule,\n  MatChipsModule,\n  MatAutocompleteModule,\n  MatSnackBarModule,\n  MAT_DATE_FORMATS,\n  MAT_DATE_LOCALE,\n  MatSlideToggleModule,\n  MatExpansionModule\n} from '@angular/material';\n\nimport { MatMomentDateModule } from '@angular/material-moment-adapter';\nimport {MomentDateAdapter} from '@angular/material-moment-adapter';\n\nimport {NgxMaterialTimepickerModule} from 'ngx-material-timepicker';\n\nimport { CalendarModule, DateAdapter as DateAdapterCalendar } from 'angular-calendar';\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\n\nimport { getGermanPaginatorIntl } from './list/german-paginator-intl';\nimport { ErrorInterceptor } from './_helpers';\nimport { AppComponent } from './app.component';\nimport { NavigationComponent } from './navigation/navigation.component';\nimport { ContentCardComponent } from './content-card/content-card.component';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { ListComponent } from './list/list.component';\nimport { PatientComponent } from './patient/patient.component';\nimport { BottomSheetComponent } from './bottom-sheet/bottom-sheet.component';\nimport { FormNewPatientComponent } from './form-new-patient/form-new-patient.component';\nimport { FormNewAppointmentComponent } from './form-new-appointment/form-new-appointment.component';\nimport { DatetimepickerComponent } from './datetimepicker/datetimepicker.component';\nimport { FormDeletePatientComponent } from './form-delete-patient/form-delete-patient.component';\nimport { AppointmentComponent } from './appointment/appointment.component';\nimport { CalendarComponent } from './calendar/calendar.component';\nimport { FormDeleteAppointmentComponent } from './form-delete-appointment/form-delete-appointment.component';\nimport { RequestInterceptor } from './_helpers/request.interceptor';\nimport { FormAppointmentAddNoteComponent } from './form-appointment-add-note/form-appointment-add-note.component';\nimport { FormNewPrescriptionComponent } from './form-new-prescription/form-new-prescription.component';\n\n\n\nregisterLocaleData(localeDe);\n\nexport const DATE_FORMATS = {\n  parse: {\n    dateInput: 'DD.MM.YYYY',\n  },\n  display: {\n    dateInput: 'DD.MM.YYYY',\n    monthYearLabel: 'MMM YYYY',\n    dateA11yLabel: 'LL',\n    monthYearA11yLabel: 'MMMM YYYY',\n  },\n};\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    FormsModule,\n    HttpClientModule,\n    routing,\n    BrowserAnimationsModule,\n    // Calendar\n    CalendarModule.forRoot({\n      provide: DateAdapterCalendar,\n      useFactory: adapterFactory\n    }),\n\n    // Material\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatGridListModule,\n    MatPaginatorModule,\n    MatCardModule,\n    MatMenuModule,\n    MatSortModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatTableModule,\n    MatBottomSheetModule,\n    MatDialogModule,\n    MatDatepickerModule,\n    MatMomentDateModule,\n    NgxMaterialTimepickerModule,\n    MatAutocompleteModule,\n    MatStepperModule,\n    MatRadioModule,\n    MatChipsModule,\n    MatSnackBarModule,\n    MatButtonToggleModule,\n    MatSlideToggleModule,\n    MatExpansionModule\n  ],\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    LoginComponent,\n    ListComponent,\n    NavigationComponent,\n    ContentCardComponent,\n    PatientComponent,\n    BottomSheetComponent,\n    FormNewPatientComponent,\n    FormNewAppointmentComponent,\n    DatetimepickerComponent,\n    FormDeletePatientComponent,\n    AppointmentComponent,\n    CalendarComponent,\n    FormDeleteAppointmentComponent,\n    FormAppointmentAddNoteComponent,\n    FormNewPrescriptionComponent\n  ],\n  entryComponents: [\n    BottomSheetComponent,\n    FormNewPatientComponent,\n    FormDeletePatientComponent,\n    FormNewAppointmentComponent,\n    FormDeleteAppointmentComponent,\n    FormAppointmentAddNoteComponent,\n    FormNewPrescriptionComponent\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: RequestInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\n    { provide: MAT_DATE_FORMATS, useValue: DATE_FORMATS },\n    { provide: MatPaginatorIntl, useValue: getGermanPaginatorIntl() }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Appointment.html":{"url":"classes/Appointment.html","title":"class - Appointment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Appointment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/appointment.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                appointmentRecord\n                            \n                            \n                                dateTime\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                patient\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            appointmentRecord\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AppointmentRecord\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/appointment.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/appointment.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/appointment.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/appointment.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            patient\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Patient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/appointment.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AppointmentRecord } from './appointment-record'\nimport { Patient } from './patient';\n\nexport class Appointment {\n    id: Number;\n    // datetime: string;\n    dateTime: string;\n    description: string;\n    appointmentRecord: AppointmentRecord;\n    patient: Patient;\n}\n\nexport const AppointmentColumns = [\n    {\n        id: \"id\",\n        value: \"#\"\n    },\n    {\n        id: \"firstName\",\n        value: \"Vorname\"\n    },\n    {\n        id: \"lastName\",\n        value: \"Name\"\n    },\n    {\n        id: \"dateTime\",\n        value: \"Datum\"\n    },\n    {\n        id: \"description\",\n        value: \"Beschwerde\"\n    },\n];\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppointmentComponent.html":{"url":"components/AppointmentComponent.html","title":"component - AppointmentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppointmentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/appointment/appointment.component.ts\n\n\n    \n        Description\n    \n    \n        Renders a list of appointments.\nCan dynamically render bottom sheet menu and dialog components for Appointment business logic.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-appointment\n            \n\n            \n                styleUrls\n                ./appointment.component.css\n            \n\n\n\n            \n                templateUrl\n                ./appointment.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                appointmentObservable\n                            \n                            \n                                listColumns\n                            \n                            \n                                listRef\n                            \n                            \n                                selectedAppointment\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleAppointmentOnClick\n                            \n                            \n                                handleBottomSheetButton\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openAppointmentRecordDialog\n                            \n                            \n                                openBottomSheet\n                            \n                            \n                                openDeleteAppointmentDialog\n                            \n                            \n                                openUpdateAppointmentDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(appointmentService: AppointmentService, bottomSheet: MatBottomSheet, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/appointment/appointment.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        appointmentService\n                                                  \n                                                        \n                                                                        AppointmentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bottomSheet\n                                                  \n                                                        \n                                                                    MatBottomSheet\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleAppointmentOnClick\n                        \n                        \n                    \n                \n            \n            \n                \nhandleAppointmentOnClick(e)\n                \n            \n\n\n            \n                \n                    Defined in src/app/appointment/appointment.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleBottomSheetButton\n                        \n                        \n                    \n                \n            \n            \n                \nhandleBottomSheetButton(buttonId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/appointment/appointment.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    buttonId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/appointment/appointment.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openAppointmentRecordDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenAppointmentRecordDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/appointment/appointment.component.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openBottomSheet\n                        \n                        \n                    \n                \n            \n            \n                \nopenBottomSheet()\n                \n            \n\n\n            \n                \n                    Defined in src/app/appointment/appointment.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDeleteAppointmentDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenDeleteAppointmentDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/appointment/appointment.component.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openUpdateAppointmentDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenUpdateAppointmentDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/appointment/appointment.component.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            appointmentObservable\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/appointment/appointment.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AppointmentColumns\n                        \n                    \n                        \n                            \n                                    Defined in src/app/appointment/appointment.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ListComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(ListComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/appointment/appointment.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedAppointment\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/appointment/appointment.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\n\nimport { MatBottomSheet, MatDialog } from '@angular/material';\n\nimport { AppointmentColumns } from '../_models';\nimport { AppointmentService } from '../_services';\nimport { BottomSheetComponent } from '../bottom-sheet/bottom-sheet.component';\nimport { FormNewAppointmentComponent } from '../form-new-appointment/form-new-appointment.component';\nimport { FormNewPatientComponent } from '../form-new-patient/form-new-patient.component';\nimport { ListComponent } from '../list/list.component';\nimport { map, mapTo } from 'rxjs/operators';\nimport { FormDeleteAppointmentComponent } from '../form-delete-appointment/form-delete-appointment.component';\nimport { FormAppointmentAddNoteComponent } from '../form-appointment-add-note/form-appointment-add-note.component';\n\n/**\n * Renders a list of appointments.\n * \n * Can dynamically render bottom sheet menu and dialog components for `Appointment` business logic.\n */\n@Component({\n  selector: 'app-appointment',\n  templateUrl: './appointment.component.html',\n  styleUrls: ['./appointment.component.css']\n})\nexport class AppointmentComponent implements OnInit {\n\n  selectedAppointment;\n  appointmentObservable;\n  listColumns = AppointmentColumns;\n\n  @ViewChild(ListComponent) listRef: ListComponent;\n\n  constructor(\n    private appointmentService: AppointmentService,\n    private bottomSheet: MatBottomSheet,\n    private dialog: MatDialog) {\n    this.appointmentObservable = appointmentService.getAll().pipe(\n      // @ts-ignore: Appointment[] !== Appointment ???\n      map((appointments: Appointment[]) => {\n        return appointments.map(appointment => {\n          let flatObj = {\n            ...appointment,\n            firstName: appointment.patient.firstName,\n            lastName: appointment.patient.lastName,\n            patientId: appointment.patient.id,\n            description: appointment.description !== 'undefined' ? appointment.description : 'Keine Angabe'\n          }\n          delete flatObj.patient\n          return flatObj\n        })\n      })\n    )\n  }\n\n  ngOnInit() {\n    // this.appointmentObservable.subscribe(a => console.log(a))\n  }\n\n  handleAppointmentOnClick(e) {\n    this.selectedAppointment = e;\n    this.openBottomSheet();\n  }\n\n  openBottomSheet() {\n    const sheet = this.bottomSheet.open(BottomSheetComponent, {\n      hasBackdrop: true,\n      data: {\n        buttons: [\n          {\n            \"id\": \"add_appointment_record\",\n            \"icon\": \"add_comment\",\n            \"text\": \"Notizen hinzufügen...\",\n            \"description\": `Notizen zum Termin hinzufügen`\n          },\n          {\n            \"id\": \"update_appointment\",\n            \"icon\": \"update\",\n            \"text\": \"Termin bearbeiten...\",\n            \"description\": 'Datum/Notizen des Termins bearbeiten'//`Alle Daten von ${this.selectedAppointment.firstName} ${this.selectedAppointment.lastName} löschen`\n          },\n          {\n            \"id\": \"delete_appointment\",\n            \"icon\": \"alarm_off\",\n            \"text\": \"Termin absagen...\",\n            \"description\": `Termindaten löschen`\n          }\n        ],\n        title: `Termin von ${this.selectedAppointment.firstName} ${this.selectedAppointment.lastName}: ${this.selectedAppointment.dateTime}`,\n        subtitle: this.selectedAppointment.appointmentRecord.notes ? `Notizen: ${this.selectedAppointment.appointmentRecord.notes}` : '',\n      }\n    });\n    sheet.afterDismissed().subscribe((buttonId) => {\n      this.handleBottomSheetButton(buttonId);\n    });\n  }\n\n  handleBottomSheetButton(buttonId) {\n    switch (buttonId) {\n      case 'add_appointment_record':\n        this.openAppointmentRecordDialog();\n        break;\n      case 'update_appointment':\n        this.openUpdateAppointmentDialog();\n        break;\n      case 'delete_appointment':\n          this.openDeleteAppointmentDialog();\n          break;\n      default:\n        break;\n    }\n  }\n\n  openAppointmentRecordDialog() {\n    const dialogRef = this.dialog.open(FormAppointmentAddNoteComponent, {\n      data: {\n        id: this.selectedAppointment.id,\n        patientName: `${this.selectedAppointment.firstName} ${this.selectedAppointment.lastName}`\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      // console.log(result);\n    });\n  }\n\n  openUpdateAppointmentDialog() {\n    const dialogRef = this.dialog.open(FormNewAppointmentComponent, {\n      data: {\n        appointment: {\n          id: this.selectedAppointment.id\n        }\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      // To refresh the list\n      this.listRef.refreshList();\n    });\n  }\n\n  openDeleteAppointmentDialog() {\n    const dialogRef = this.dialog.open(FormDeleteAppointmentComponent, {\n      data: {\n        id: this.selectedAppointment.id,\n        patientName: `${this.selectedAppointment.firstName} ${this.selectedAppointment.lastName}`,\n        dateTime: this.selectedAppointment.dateTime\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      // To refresh the list\n      this.listRef.refreshList();\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n\n    \n\n    \n                \n                    ./appointment.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppointmentComponent', 'selector': 'app-appointment'},{'name': 'BottomSheetComponent', 'selector': 'app-bottom-sheet'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'ContentCardComponent', 'selector': 'app-content-card'},{'name': 'DatetimepickerComponent', 'selector': 'app-datetimepicker'},{'name': 'FormAppointmentAddNoteComponent', 'selector': 'app-form-appointment-add-note'},{'name': 'FormDeleteAppointmentComponent', 'selector': 'app-form-delete-appointment'},{'name': 'FormDeletePatientComponent', 'selector': 'app-form-delete-patient'},{'name': 'FormNewAppointmentComponent', 'selector': 'app-form-new-appointment'},{'name': 'FormNewPatientComponent', 'selector': 'app-form-new-patient'},{'name': 'FormNewPrescriptionComponent', 'selector': 'app-form-new-prescription'},{'name': 'HomeComponent', 'selector': 'home-component'},{'name': 'ListComponent', 'selector': 'list-component'},{'name': 'LoginComponent', 'selector': ''},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PatientComponent', 'selector': 'app-patient'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppointmentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppointmentRecord.html":{"url":"classes/AppointmentRecord.html","title":"class - AppointmentRecord","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppointmentRecord\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/appointment-record.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dateAdded\n                            \n                            \n                                id\n                            \n                            \n                                notes\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateAdded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/appointment-record.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/appointment-record.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/appointment-record.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AppointmentRecord {\n    id: number;\n    notes: string;\n    dateAdded: string;\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppointmentService.html":{"url":"injectables/AppointmentService.html","title":"injectable - AppointmentService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppointmentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_services/appointment.service.ts\n        \n\n            \n                Description\n            \n            \n                Communication service for /appointment endpoint with standard CRUD functions.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                appointmentUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addNotes\n                            \n                            \n                                deleteAppointment\n                            \n                            \n                                getAll\n                            \n                            \n                                updateAppointment\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/_services/appointment.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addNotes\n                        \n                        \n                    \n                \n            \n            \n                \naddNotes(appointmentId: Number, notes: AppointmentRecord)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/appointment.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    appointmentId\n                                    \n                                                Number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    notes\n                                    \n                                                AppointmentRecord\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteAppointment\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteAppointment(appointmentId: Number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/appointment.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    appointmentId\n                                    \n                                                Number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/appointment.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateAppointment\n                        \n                        \n                    \n                \n            \n            \n                \nupdateAppointment(appointmentId: Number, appointment: Appointment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/appointment.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    appointmentId\n                                    \n                                                Number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    appointment\n                                    \n                                                Appointment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            api\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : environment.apiLocal\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_services/appointment.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            appointmentUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : `${this.api}/appointment`\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_services/appointment.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Appointment, AppointmentRecord } from '../_models';\n\nimport { environment } from '../../environments/environment';\nimport { Observable } from 'rxjs';\n\n/**\n * Communication service for `/appointment` endpoint with standard CRUD functions.\n */\n@Injectable({ providedIn: 'root' })\nexport class AppointmentService {\n\n  api: string = environment.apiLocal;\n  appointmentUrl: string = `${this.api}/appointment`\n\n  constructor(private http: HttpClient) { }\n\n  getAll() {\n    return this.http.get(this.appointmentUrl)\n  }\n\n  deleteAppointment(appointmentId: Number): Observable {\n    return this.http.delete(`${this.appointmentUrl}/${appointmentId}`);\n  }\n\n  updateAppointment(appointmentId: Number, appointment: Appointment): Observable {\n    return this.http.put(`${this.appointmentUrl}/${appointmentId}`, appointment);\n  }\n\n  addNotes(appointmentId: Number, notes: AppointmentRecord): Observable {\n    return this.http.post(`${this.appointmentUrl}/${appointmentId}/notes`, notes);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/_guards/auth.guards.ts\n            \n\n                \n                Description\n                \n                \n                    Looks for the user credentials currentUser in local storage.\nRedirects to the login page on error.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/_guards/auth.guards.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_guards/auth.guards.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\n/**\n * Looks for the user credentials `currentUser` in local storage.\n * \n * Redirects to the login page on error.\n */\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n\n  constructor(private router: Router) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (localStorage.getItem('currentUser')) {\n      // logged in so return true\n      return true;\n    }\n\n    // not logged in so redirect to login page with the return url\n    this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\n    return false;\n  }\n}\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_services/authentication.service.ts\n        \n\n            \n                Description\n            \n            \n                Authenticates with username and password using HttpClient.\nAuthentication hash is stored in local storage on successful login.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/_services/authentication.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/authentication.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/authentication.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            api\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : environment.apiLocal\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_services/authentication.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\nimport { environment } from '../../environments/environment';\n\n/**\n * Authenticates with username and password using HttpClient.\n * Authentication hash is stored in local storage on successful login.\n */\n@Injectable({ providedIn: 'root' })\nexport class AuthenticationService {\n\n  api: string = environment.apiLocal;\n\n  constructor(private http: HttpClient) { }\n\n  login(username: string, password: string) {\n\n    const authHash = btoa(username + ':' + password);\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': 'Basic ' + authHash\n      })\n    };\n\n    return this.http.get(`${this.api}/auth`, httpOptions)\n      .pipe(map(res => {\n        if (res.success) {\n          // store user details and basic auth credentials in local storage \n          // to keep user logged in between page refreshes\n          localStorage.setItem('currentUser', authHash);\n        }\n      }));\n  }\n\n  logout() {\n    // remove user from local storage to log user out\n    localStorage.removeItem('currentUser');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BottomSheetComponent.html":{"url":"components/BottomSheetComponent.html","title":"component - BottomSheetComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BottomSheetComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/bottom-sheet/bottom-sheet.component.ts\n\n\n    \n        Description\n    \n    \n        Bottom sheet menu component.\nReceives data via MAT_BOTTOM_SHEET_DATA injection.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-bottom-sheet\n            \n\n            \n                styleUrls\n                ./bottom-sheet.component.css\n            \n\n\n\n            \n                templateUrl\n                ./bottom-sheet.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleOnClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bottomSheetRef: MatBottomSheetRef, data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/bottom-sheet/bottom-sheet.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bottomSheetRef\n                                                  \n                                                        \n                                                                        MatBottomSheetRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleOnClick\n                        \n                        \n                    \n                \n            \n            \n                \nhandleOnClick(e)\n                \n            \n\n\n            \n                \n                    Defined in src/app/bottom-sheet/bottom-sheet.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_BOTTOM_SHEET_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/bottom-sheet/bottom-sheet.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material';\nimport { MAT_BOTTOM_SHEET_DATA } from '@angular/material';\n\n/**\n * Bottom sheet menu component.\n * \n * Receives data via `MAT_BOTTOM_SHEET_DATA` injection.\n */\n@Component({\n  selector: 'app-bottom-sheet',\n  templateUrl: './bottom-sheet.component.html',\n  styleUrls: ['./bottom-sheet.component.css']\n})\nexport class BottomSheetComponent {\n\n  constructor(private bottomSheetRef: MatBottomSheetRef, @Inject(MAT_BOTTOM_SHEET_DATA) public data: any) {}\n\n  handleOnClick(e) {\n    this.bottomSheetRef.dismiss(e);\n  }\n  \n}\n    \n\n    \n        \n\n  {{ data.title }}\n  {{ data.subtitle }}\n\n  \n    {{ button.icon }}\n    \n      {{ button.text }}\n      {{ button.description }}\n    \n  \n\n\n    \n\n    \n                \n                    ./bottom-sheet.component.css\n                \n                .mat-list-item {\n    transition: 0.3s !important;\n}\n\n.mat-list-item:hover {\n    background-color: rgb(230, 230, 230) !important;\n}\n\n.mat-list-item-content {\n    flex-direction: row-reverse !important;\n    background-color: black;\n}\n\n.bottom-sheet-icon {\n    margin-right: 30px;\n    margin-left: 10px;\n}\n\n.title {\n    margin-left: 20px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ data.title }}  {{ data.subtitle }}      {{ button.icon }}          {{ button.text }}      {{ button.description }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppointmentComponent', 'selector': 'app-appointment'},{'name': 'BottomSheetComponent', 'selector': 'app-bottom-sheet'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'ContentCardComponent', 'selector': 'app-content-card'},{'name': 'DatetimepickerComponent', 'selector': 'app-datetimepicker'},{'name': 'FormAppointmentAddNoteComponent', 'selector': 'app-form-appointment-add-note'},{'name': 'FormDeleteAppointmentComponent', 'selector': 'app-form-delete-appointment'},{'name': 'FormDeletePatientComponent', 'selector': 'app-form-delete-patient'},{'name': 'FormNewAppointmentComponent', 'selector': 'app-form-new-appointment'},{'name': 'FormNewPatientComponent', 'selector': 'app-form-new-patient'},{'name': 'FormNewPrescriptionComponent', 'selector': 'app-form-new-prescription'},{'name': 'HomeComponent', 'selector': 'home-component'},{'name': 'ListComponent', 'selector': 'list-component'},{'name': 'LoginComponent', 'selector': ''},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PatientComponent', 'selector': 'app-patient'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BottomSheetComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CalendarComponent.html":{"url":"components/CalendarComponent.html","title":"component - CalendarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CalendarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/calendar/calendar.component.ts\n\n\n    \n        Description\n    \n    \n        Calendar view component.\nFetches Appointment data onInit to populate views.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: CalendarDateFormatter, useClass: CustomDateFormatter\n}\n                \n            \n\n\n            \n                selector\n                app-calendar\n            \n\n            \n                styleUrls\n                ./calendar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./calendar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dayView\n                            \n                            \n                                events\n                            \n                            \n                                excludeDays\n                            \n                            \n                                locale\n                            \n                            \n                                selectedDayViewDate\n                            \n                            \n                                selectedMonthViewDay\n                            \n                            \n                                view\n                            \n                            \n                                viewDate\n                            \n                            \n                                weekStartsOn\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addSelectedDayViewClass\n                            \n                            \n                                beforeDayViewRender\n                            \n                            \n                                dayClicked\n                            \n                            \n                                hourSegmentClicked\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                viewChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(appointmentService: AppointmentService)\n                    \n                \n                        \n                            \n                                Defined in src/app/calendar/calendar.component.ts:57\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        appointmentService\n                                                  \n                                                        \n                                                                        AppointmentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            addSelectedDayViewClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addSelectedDayViewClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/calendar/calendar.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            beforeDayViewRender\n                        \n                        \n                    \n                \n            \n            \n                \nbeforeDayViewRender(dayView: DayViewHour[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/calendar/calendar.component.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dayView\n                                    \n                                            DayViewHour[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dayClicked\n                        \n                        \n                    \n                \n            \n            \n                \ndayClicked(ev)\n                \n            \n\n\n            \n                \n                    Defined in src/app/calendar/calendar.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ev\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hourSegmentClicked\n                        \n                        \n                    \n                \n            \n            \n                \nhourSegmentClicked(date: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/app/calendar/calendar.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/calendar/calendar.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            viewChange\n                        \n                        \n                    \n                \n            \n            \n                \nviewChange(view: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/calendar/calendar.component.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    view\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dayView\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DayViewHour[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/calendar/calendar.component.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            events\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable>>\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/calendar/calendar.component.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            excludeDays\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Default value : [0, 6]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/calendar/calendar.component.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            locale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'de'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/calendar/calendar.component.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedDayViewDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/calendar/calendar.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedMonthViewDay\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CalendarMonthViewDay\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/calendar/calendar.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            view\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'month'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/calendar/calendar.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/calendar/calendar.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            weekStartsOn\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : DAYS_OF_WEEK.MONDAY\n                        \n                    \n                        \n                            \n                                    Defined in src/app/calendar/calendar.component.ts:54\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ChangeDetectionStrategy, OnInit, EventEmitter, Output } from '@angular/core';\nimport { CalendarEvent, CalendarMonthViewDay, CalendarDateFormatter } from 'angular-calendar';\nimport { addMinutes } from 'date-fns';\nimport { DayViewHour, DAYS_OF_WEEK } from 'calendar-utils';\nimport { AppointmentService } from '../_services/appointment.service';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Appointment } from '../_models';\nimport { CustomDateFormatter } from './custom-date-formatter.provider';\n\nimport * as _moment from 'moment';\nconst moment = _moment;\n\nconst colors: any = {\n  red: {\n    primary: '#ad2121',\n    secondary: '#FAE3E3'\n  },\n  blue: {\n    primary: '#1e90ff',\n    secondary: '#D1E8FF'\n  },\n  yellow: {\n    primary: '#e3bc08',\n    secondary: '#FDF1BA'\n  }\n};\n\n/**\n * Calendar view component.\n * \n * Fetches `Appointment` data `onInit` to populate views.\n */\n@Component({\n  selector: 'app-calendar',\n  templateUrl: './calendar.component.html',\n  styleUrls: ['./calendar.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: CalendarDateFormatter,\n      useClass: CustomDateFormatter\n    }\n  ]\n})\nexport class CalendarComponent implements OnInit {\n\n  view = 'month';\n  viewDate: Date = new Date();\n  selectedMonthViewDay: CalendarMonthViewDay;\n  selectedDayViewDate: Date;\n  dayView: DayViewHour[];\n  excludeDays: number[] = [0, 6];\n  weekStartsOn = DAYS_OF_WEEK.MONDAY;\n  locale: string = 'de';\n\n  events: Observable>>;\n\n  constructor(private appointmentService: AppointmentService) { }\n\n  ngOnInit() {\n      this.events = this.appointmentService.getAll()\n      .pipe(\n        // @ts-ignore: Appointment[] !== Appointment ???\n        map((appointments: Appointment[]) => {\n          return appointments.map((a: Appointment) => {\n            const dateTime = moment(a.dateTime, 'DD.MM.YYYY HH:mm').toDate();\n            return {\n              title: `${a.patient.firstName} ${a.patient.lastName}`,\n              color: colors.blue,\n              start: dateTime,\n              end: addMinutes(dateTime, 30)\n            }\n          });\n        }));\n  }\n\n  viewChange(view: string) {\n    this.view = view;\n  }\n\n  dayClicked(ev): void {\n    // Ignore weekends\n    if (ev.day.isWeekend) { return; }\n    this.viewDate = ev.day.date;\n    this.view = 'day';\n    this.selectedMonthViewDay = ev.day;\n  }\n\n  hourSegmentClicked(date: Date) {\n    this.selectedDayViewDate = date;\n    this.addSelectedDayViewClass();\n  }\n\n  beforeDayViewRender(dayView: DayViewHour[]) {\n    this.dayView = dayView;\n    this.addSelectedDayViewClass();\n  }\n\n  private addSelectedDayViewClass() {\n    this.dayView.forEach(hourSegment => {\n      hourSegment.segments.forEach(segment => {\n        delete segment.cssClass;\n        if (\n          this.selectedDayViewDate &&\n          segment.date.getTime() === this.selectedDayViewDate.getTime()\n        ) {\n          segment.cssClass = 'cal-day-selected';\n        }\n      });\n    });\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n          Zurück\n        \n      \n      \n        \n          Heute\n        \n      \n      \n        \n          Weiter\n        \n      \n    \n  \n\n  \n    {{ viewDate | calendarDate: view + 'ViewTitle':locale }}\n  \n\n  \n    \n      Monat\n      Woche\n      Tag\n    \n  \n\n\n\n\n  \n      \n  \n\n\n\n    \n        \n        \n            {{event.title}}\n            {{event.start}}\n        \n    \n\n\n\n  \n  \n  \n  \n  \n  \n\n    \n\n    \n                \n                    ./calendar.component.css\n                \n                .calendar-header-container {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  margin-bottom: 10px;\n  margin-top: -18px;\n}\n\n.calendar-header-button-container {\n  display: flex;\n  flex-direction: row;\n}\n\n.calendar-title {\n  font-weight: 500;\n  line-height: 50px;\n  font-size: 25px;\n}\n\n.loading-spinner-container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 200px;\n}\n\n.calendar-header-button-disabled {\n  background-color: white !important;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              Zurück                                      Heute                                      Weiter                          {{ viewDate | calendarDate: view + \\'ViewTitle\\':locale }}              Monat      Woche      Tag                                                {{event.title}}            {{event.start}}                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppointmentComponent', 'selector': 'app-appointment'},{'name': 'BottomSheetComponent', 'selector': 'app-bottom-sheet'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'ContentCardComponent', 'selector': 'app-content-card'},{'name': 'DatetimepickerComponent', 'selector': 'app-datetimepicker'},{'name': 'FormAppointmentAddNoteComponent', 'selector': 'app-form-appointment-add-note'},{'name': 'FormDeleteAppointmentComponent', 'selector': 'app-form-delete-appointment'},{'name': 'FormDeletePatientComponent', 'selector': 'app-form-delete-patient'},{'name': 'FormNewAppointmentComponent', 'selector': 'app-form-new-appointment'},{'name': 'FormNewPatientComponent', 'selector': 'app-form-new-patient'},{'name': 'FormNewPrescriptionComponent', 'selector': 'app-form-new-prescription'},{'name': 'HomeComponent', 'selector': 'home-component'},{'name': 'ListComponent', 'selector': 'list-component'},{'name': 'LoginComponent', 'selector': ''},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PatientComponent', 'selector': 'app-patient'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CalendarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContentCardComponent.html":{"url":"components/ContentCardComponent.html","title":"component - ContentCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContentCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/content-card/content-card.component.ts\n\n\n    \n        Description\n    \n    \n        One of the main components.\nEvery non-persistent component gets rendered in a ContentCardComponent.\nObserves screen size for the ability to switch views dynamically.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-content-card\n            \n\n            \n                styleUrls\n                ./content-card.component.css\n            \n\n\n\n            \n                templateUrl\n                ./content-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cards\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleFabButtonOnClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                fabButton\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                fabButtonOnClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(breakpointObserver: BreakpointObserver)\n                    \n                \n                        \n                            \n                                Defined in src/app/content-card/content-card.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        breakpointObserver\n                                                  \n                                                        \n                                                                    BreakpointObserver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        fabButton\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/content-card/content-card.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/content-card/content-card.component.ts:18\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        fabButtonOnClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/content-card/content-card.component.ts:20\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleFabButtonOnClick\n                        \n                        \n                    \n                \n            \n            \n                \nhandleFabButtonOnClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/content-card/content-card.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cards\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n    // TODO: Consider multiple card layouts.\n    map(({ matches }) => {\n      return [\n        { title: 'Card 1', cols: 2, rows: 2 }\n      ];\n    })\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/content-card/content-card.component.ts:23\n                            \n                        \n\n                \n                    \n                        Based on the screen size, switch from standard to one column per row \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, EventEmitter, Output } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\n\n/**\n * One of the main components.\n * \n * Every non-persistent component gets rendered in a `ContentCardComponent`.\n * \n * Observes screen size for the ability to switch views dynamically.\n */\n@Component({\n  selector: 'app-content-card',\n  templateUrl: './content-card.component.html',\n  styleUrls: ['./content-card.component.css']\n})\nexport class ContentCardComponent {\n  @Input('title') title: string;\n  @Input('fabButton') fabButton: boolean = false; \n  @Output() fabButtonOnClick: EventEmitter = new EventEmitter();\n  \n  /** Based on the screen size, switch from standard to one column per row */\n  cards = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n    // TODO: Consider multiple card layouts.\n    map(({ matches }) => {\n      return [\n        { title: 'Card 1', cols: 2, rows: 2 }\n      ];\n    })\n  );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n\n  handleFabButtonOnClick() {\n    this.fabButtonOnClick.emit({}); // TODO\n  }\n\n}\n\n    \n\n    \n        \n  Dashboard -->\n  \n    \n      \n        \n          \n            {{title}}\n          \n        \n        \n          Card Content Here -->\n          \n          \n        \n        \n            add\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./content-card.component.css\n                \n                .grid-container {\n  margin: 20px;\n}\n\n.content-card {\n  position: absolute;\n  top: 15px;\n  left: 15px;\n  right: 15px;\n  bottom: 15px;\n  /* background-color: #fafafa; */\n}\n\n.more-button {\n  position: absolute;\n  top: 5px;\n  right: 10px;\n}\n\n.content-card-content {\n  text-align: center;\n  height: 100%;\n}\n\n.fab-button {\n  position: absolute;\n  right: 40px;\n  bottom: 40px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Dashboard -->                                          {{title}}                                    Card Content Here -->                                                add                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppointmentComponent', 'selector': 'app-appointment'},{'name': 'BottomSheetComponent', 'selector': 'app-bottom-sheet'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'ContentCardComponent', 'selector': 'app-content-card'},{'name': 'DatetimepickerComponent', 'selector': 'app-datetimepicker'},{'name': 'FormAppointmentAddNoteComponent', 'selector': 'app-form-appointment-add-note'},{'name': 'FormDeleteAppointmentComponent', 'selector': 'app-form-delete-appointment'},{'name': 'FormDeletePatientComponent', 'selector': 'app-form-delete-patient'},{'name': 'FormNewAppointmentComponent', 'selector': 'app-form-new-appointment'},{'name': 'FormNewPatientComponent', 'selector': 'app-form-new-patient'},{'name': 'FormNewPrescriptionComponent', 'selector': 'app-form-new-prescription'},{'name': 'HomeComponent', 'selector': 'home-component'},{'name': 'ListComponent', 'selector': 'list-component'},{'name': 'LoginComponent', 'selector': ''},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PatientComponent', 'selector': 'app-patient'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContentCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomDateFormatter.html":{"url":"classes/CustomDateFormatter.html","title":"class - CustomDateFormatter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomDateFormatter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/calendar/custom-date-formatter.provider.ts\n        \n\n\n            \n                Extends\n            \n            \n                    CalendarDateFormatter\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dayViewHour\n                            \n                            \n                                    Public\n                                weekViewHour\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            dayViewHour\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dayViewHour(undefined: DateFormatterParams)\n                \n            \n\n\n            \n                \n                    Defined in src/app/calendar/custom-date-formatter.provider.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            DateFormatterParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            weekViewHour\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    weekViewHour(undefined: DateFormatterParams)\n                \n            \n\n\n            \n                \n                    Defined in src/app/calendar/custom-date-formatter.provider.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            DateFormatterParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CalendarDateFormatter, DateFormatterParams } from 'angular-calendar';\nimport { DatePipe } from '@angular/common';\n\nexport class CustomDateFormatter extends CalendarDateFormatter {\n\n  public dayViewHour({ date, locale }: DateFormatterParams): string {\n    return new DatePipe(locale).transform(date, 'HH:mm', locale);\n  }\n\n  public weekViewHour({ date, locale }: DateFormatterParams): string {\n    return this.dayViewHour({ date, locale });\n  }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DateConfig.html":{"url":"classes/DateConfig.html","title":"class - DateConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DateConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/datetimepicker/datetimepicker.component.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                maxDate\n                            \n                            \n                                minDate\n                            \n                            \n                                startDate\n                            \n                            \n                                startView\n                            \n                            \n                                touchUi\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maxDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     moment_.Moment\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/datetimepicker/datetimepicker.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            minDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     moment_.Moment\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/datetimepicker/datetimepicker.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/datetimepicker/datetimepicker.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startView\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"month\" | \"year\" | \"multi-year\"\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/datetimepicker/datetimepicker.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            touchUi\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/datetimepicker/datetimepicker.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, OnInit, Input, EventEmitter, Output, ViewChild, ElementRef } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { DateAdapter, MatDatepickerInputEvent } from '@angular/material';\n\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\n\nimport { NgxMaterialTimepickerTheme } from 'ngx-material-timepicker';\n\nclass DateConfig {\n  startView: 'month' | 'year' | 'multi-year';\n  touchUi: boolean;\n  minDate: moment_.Moment;\n  maxDate: moment_.Moment;\n  startDate: Date;\n}\n\n/**\n * A flexible component for time and date pickers.\n */\n@Component({\n  selector: 'app-datetimepicker',\n  templateUrl: './datetimepicker.component.html',\n  styleUrls: ['./datetimepicker.component.css']\n})\nexport class DatetimepickerComponent implements OnInit {\n\n  /**\n  * Placeholder text for date input.\n  */\n  @Input() placeholderDate: string;\n  /**\n  * Placeholder text for date input.\n  */\n  @Input() placeholderTime: string;\n  @Input() model: Date;\n  @Input() purpose: string;\n  /**\n  * No time picker when true.\n  */\n  @Input() dateOnly: boolean;\n  /**\n  * Time picker pops up directly after render when true.\n  */\n  @Input() autoOpen: boolean = false;\n\n  @Output() dateUpdate = new EventEmitter();\n  @Output() timeUpdate = new EventEmitter();\n\n  public pickerId: string = \"_\" + Math.random().toString(36).substr(2, 9);\n\n  public dateForm: FormControl;\n  public timeFormGroup: FormGroup;\n  public selectedTime: FormControl;\n\n  public momentDate: moment_.Moment;\n  public config: DateConfig;\n\n  customTheme: NgxMaterialTimepickerTheme = {\n    container: {\n        bodyBackgroundColor: '#FFF',\n        buttonColor: '#3F51B5'\n    },\n    dial: {\n        dialBackgroundColor: '#3F51B5',\n    },\n    clockFace: {\n        clockFaceBackgroundColor: '#F0F0F0',\n        clockHandColor: '#3F51B5',\n        clockFaceTimeInactiveColor: 'carbon'\n    }\n  };\n\n  constructor(private adapter: DateAdapter) { }\n\n  ngOnInit() {\n\n    this.adapter.setLocale(\"de-DE\");\n    this.config = new DateConfig();\n    if (this.purpose === \"birthday\") {\n      this.config.startView = 'multi-year';\n      this.config.maxDate = moment();//.add(-15, 'year');\n      this.config.minDate = moment().add(-130, 'year');\n      this.config.startDate = new Date(1980, 6, 15);\n      this.dateOnly = true;\n    }\n    else {\n      this.config.startView = 'month';\n      this.config.maxDate = moment().add(100, 'year');\n      this.config.minDate = moment().add(-100, 'year');\n    }\n\n    // if (window.screen.width ) {\n\n    if (moment.isMoment(date.value)) {\n      this.momentDate = moment(date.value);\n      if (this.dateOnly) {\n        this.momentDate = this.momentDate.utc(true);\n      }\n      var newDate = this.momentDate.toDate();\n      this.model = newDate;\n      this.dateUpdate.emit(newDate);\n    }\n        \n    // console.log(\"datechange\", date);\n  }\n\n  public timeChange(time: string) {\n\n    var splitted = time.split(':');\n    var hour = splitted[0];\n    var minute = splitted[1];\n\n    // console.log(\"time change\", time);\n    this.momentDate = this.momentDate.set('hour', parseInt(hour));\n    this.momentDate = this.momentDate.set('minute', parseInt(minute));\n\n    var newDate = this.momentDate.toDate();\n    this.model = newDate;\n    this.timeUpdate.emit(newDate);\n  }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DatetimepickerComponent.html":{"url":"components/DatetimepickerComponent.html","title":"component - DatetimepickerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DatetimepickerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/datetimepicker/datetimepicker.component.ts\n\n\n    \n        Description\n    \n    \n        A flexible component for time and date pickers.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-datetimepicker\n            \n\n            \n                styleUrls\n                ./datetimepicker.component.css\n            \n\n\n\n            \n                templateUrl\n                ./datetimepicker.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                config\n                            \n                            \n                                customTheme\n                            \n                            \n                                    Public\n                                dateForm\n                            \n                            \n                                    Public\n                                momentDate\n                            \n                            \n                                    Public\n                                pickerId\n                            \n                            \n                                    Public\n                                selectedTime\n                            \n                            \n                                    Public\n                                timeFormGroup\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dateChange\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                timeChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autoOpen\n                            \n                            \n                                dateOnly\n                            \n                            \n                                model\n                            \n                            \n                                placeholderDate\n                            \n                            \n                                placeholderTime\n                            \n                            \n                                purpose\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dateUpdate\n                            \n                            \n                                timeUpdate\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(adapter: DateAdapter)\n                    \n                \n                        \n                            \n                                Defined in src/app/datetimepicker/datetimepicker.component.ts:73\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        adapter\n                                                  \n                                                        \n                                                                    DateAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        autoOpen\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/datetimepicker/datetimepicker.component.ts:46\n                            \n                        \n                \n                    \n                        Time picker pops up directly after render when true.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dateOnly\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/datetimepicker/datetimepicker.component.ts:42\n                            \n                        \n                \n                    \n                        No time picker when true.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/datetimepicker/datetimepicker.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholderDate\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/datetimepicker/datetimepicker.component.ts:32\n                            \n                        \n                \n                    \n                        Placeholder text for date input.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholderTime\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/datetimepicker/datetimepicker.component.ts:36\n                            \n                        \n                \n                    \n                        Placeholder text for date input.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        purpose\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/datetimepicker/datetimepicker.component.ts:38\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        dateUpdate\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/datetimepicker/datetimepicker.component.ts:48\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        timeUpdate\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/datetimepicker/datetimepicker.component.ts:49\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            dateChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dateChange(date: MatDatepickerInputEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/datetimepicker/datetimepicker.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                            MatDatepickerInputEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/datetimepicker/datetimepicker.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            timeChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    timeChange(time: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/datetimepicker/datetimepicker.component.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    time\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DateConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/datetimepicker/datetimepicker.component.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            customTheme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NgxMaterialTimepickerTheme\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    container: {\n        bodyBackgroundColor: '#FFF',\n        buttonColor: '#3F51B5'\n    },\n    dial: {\n        dialBackgroundColor: '#3F51B5',\n    },\n    clockFace: {\n        clockFaceBackgroundColor: '#F0F0F0',\n        clockHandColor: '#3F51B5',\n        clockFaceTimeInactiveColor: 'carbon'\n    }\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/datetimepicker/datetimepicker.component.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dateForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/datetimepicker/datetimepicker.component.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            momentDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     moment_.Moment\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/datetimepicker/datetimepicker.component.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pickerId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"_\" + Math.random().toString(36).substr(2, 9)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/datetimepicker/datetimepicker.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectedTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/datetimepicker/datetimepicker.component.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            timeFormGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/datetimepicker/datetimepicker.component.ts:54\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, EventEmitter, Output, ViewChild, ElementRef } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { DateAdapter, MatDatepickerInputEvent } from '@angular/material';\n\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\n\nimport { NgxMaterialTimepickerTheme } from 'ngx-material-timepicker';\n\nclass DateConfig {\n  startView: 'month' | 'year' | 'multi-year';\n  touchUi: boolean;\n  minDate: moment_.Moment;\n  maxDate: moment_.Moment;\n  startDate: Date;\n}\n\n/**\n * A flexible component for time and date pickers.\n */\n@Component({\n  selector: 'app-datetimepicker',\n  templateUrl: './datetimepicker.component.html',\n  styleUrls: ['./datetimepicker.component.css']\n})\nexport class DatetimepickerComponent implements OnInit {\n\n  /**\n  * Placeholder text for date input.\n  */\n  @Input() placeholderDate: string;\n  /**\n  * Placeholder text for date input.\n  */\n  @Input() placeholderTime: string;\n  @Input() model: Date;\n  @Input() purpose: string;\n  /**\n  * No time picker when true.\n  */\n  @Input() dateOnly: boolean;\n  /**\n  * Time picker pops up directly after render when true.\n  */\n  @Input() autoOpen: boolean = false;\n\n  @Output() dateUpdate = new EventEmitter();\n  @Output() timeUpdate = new EventEmitter();\n\n  public pickerId: string = \"_\" + Math.random().toString(36).substr(2, 9);\n\n  public dateForm: FormControl;\n  public timeFormGroup: FormGroup;\n  public selectedTime: FormControl;\n\n  public momentDate: moment_.Moment;\n  public config: DateConfig;\n\n  customTheme: NgxMaterialTimepickerTheme = {\n    container: {\n        bodyBackgroundColor: '#FFF',\n        buttonColor: '#3F51B5'\n    },\n    dial: {\n        dialBackgroundColor: '#3F51B5',\n    },\n    clockFace: {\n        clockFaceBackgroundColor: '#F0F0F0',\n        clockHandColor: '#3F51B5',\n        clockFaceTimeInactiveColor: 'carbon'\n    }\n  };\n\n  constructor(private adapter: DateAdapter) { }\n\n  ngOnInit() {\n\n    this.adapter.setLocale(\"de-DE\");\n    this.config = new DateConfig();\n    if (this.purpose === \"birthday\") {\n      this.config.startView = 'multi-year';\n      this.config.maxDate = moment();//.add(-15, 'year');\n      this.config.minDate = moment().add(-130, 'year');\n      this.config.startDate = new Date(1980, 6, 15);\n      this.dateOnly = true;\n    }\n    else {\n      this.config.startView = 'month';\n      this.config.maxDate = moment().add(100, 'year');\n      this.config.minDate = moment().add(-100, 'year');\n    }\n\n    // if (window.screen.width ) {\n\n    if (moment.isMoment(date.value)) {\n      this.momentDate = moment(date.value);\n      if (this.dateOnly) {\n        this.momentDate = this.momentDate.utc(true);\n      }\n      var newDate = this.momentDate.toDate();\n      this.model = newDate;\n      this.dateUpdate.emit(newDate);\n    }\n        \n    // console.log(\"datechange\", date);\n  }\n\n  public timeChange(time: string) {\n\n    var splitted = time.split(':');\n    var hour = splitted[0];\n    var minute = splitted[1];\n\n    // console.log(\"time change\", time);\n    this.momentDate = this.momentDate.set('hour', parseInt(hour));\n    this.momentDate = this.momentDate.set('minute', parseInt(minute));\n\n    var newDate = this.momentDate.toDate();\n    this.model = newDate;\n    this.timeUpdate.emit(newDate);\n  }\n}\n    \n\n    \n        \n  \n    \n      \n    \n    \n    \n  \n  \n    \n      \n      \n      \n      \n    \n  \n\n    \n\n    \n                \n                    ./datetimepicker.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppointmentComponent', 'selector': 'app-appointment'},{'name': 'BottomSheetComponent', 'selector': 'app-bottom-sheet'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'ContentCardComponent', 'selector': 'app-content-card'},{'name': 'DatetimepickerComponent', 'selector': 'app-datetimepicker'},{'name': 'FormAppointmentAddNoteComponent', 'selector': 'app-form-appointment-add-note'},{'name': 'FormDeleteAppointmentComponent', 'selector': 'app-form-delete-appointment'},{'name': 'FormDeletePatientComponent', 'selector': 'app-form-delete-patient'},{'name': 'FormNewAppointmentComponent', 'selector': 'app-form-new-appointment'},{'name': 'FormNewPatientComponent', 'selector': 'app-form-new-patient'},{'name': 'FormNewPrescriptionComponent', 'selector': 'app-form-new-prescription'},{'name': 'HomeComponent', 'selector': 'home-component'},{'name': 'ListComponent', 'selector': 'list-component'},{'name': 'LoginComponent', 'selector': ''},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PatientComponent', 'selector': 'app-patient'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DatetimepickerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Disease.html":{"url":"classes/Disease.html","title":"class - Disease","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Disease\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/disease.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/disease.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/disease.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/disease.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Disease {\n    id: number;\n    name: string;\n    description: string;\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ErrorInterceptor.html":{"url":"interceptors/ErrorInterceptor.html","title":"interceptor - ErrorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ErrorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_helpers/error.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                Logs out user when server responds any request with code 401 (Invalid credentials).\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/_helpers/error.interceptor.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_helpers/error.interceptor.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { AuthenticationService } from '../_services';\n\n/**\n * Logs out user when server responds any request with code 401 (Invalid credentials).\n */\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n    constructor(private authenticationService: AuthenticationService) {}\n\n    intercept(request: HttpRequest, next: HttpHandler): Observable> {\n        return next.handle(request).pipe(catchError(err => {\n            if (err.status === 401) {\n                // auto logout if 401 response returned from api\n                this.authenticationService.logout();\n                // location.reload(true);\n            }\n            \n            const error = err.error.message || err.statusText;\n            return throwError(error);\n        }))\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormAppointmentAddNoteComponent.html":{"url":"components/FormAppointmentAddNoteComponent.html","title":"component - FormAppointmentAddNoteComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormAppointmentAddNoteComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/form-appointment-add-note/form-appointment-add-note.component.ts\n\n\n    \n        Description\n    \n    \n        A popup dialog to add note to an Appointment.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-form-appointment-add-note\n            \n\n            \n                styleUrls\n                ./form-appointment-add-note.component.css\n            \n\n\n\n            \n                templateUrl\n                ./form-appointment-add-note.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                button\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                formError\n                            \n                            \n                                note\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buttonFeedback\n                            \n                            \n                                handleOkButton\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                afterClose\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any, dialogRef: MatDialogRef, appointmentService: AppointmentService)\n                    \n                \n                        \n                            \n                                Defined in src/app/form-appointment-add-note/form-appointment-add-note.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        appointmentService\n                                                  \n                                                        \n                                                                        AppointmentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        afterClose\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/form-appointment-add-note/form-appointment-add-note.component.ts:16\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buttonFeedback\n                        \n                        \n                    \n                \n            \n            \n                \nbuttonFeedback(tempButton, closeAfter)\n                \n            \n\n\n            \n                \n                    Defined in src/app/form-appointment-add-note/form-appointment-add-note.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    tempButton\n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    closeAfter\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleOkButton\n                        \n                        \n                    \n                \n            \n            \n                \nhandleOkButton()\n                \n            \n\n\n            \n                \n                    Defined in src/app/form-appointment-add-note/form-appointment-add-note.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/form-appointment-add-note/form-appointment-add-note.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            button\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    'text': 'OK',\n    'color': 'primary'\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/form-appointment-add-note/form-appointment-add-note.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/form-appointment-add-note/form-appointment-add-note.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formError\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    'hidden': true,\n    'type': '',\n    'text': ''\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/form-appointment-add-note/form-appointment-add-note.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            note\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/form-appointment-add-note/form-appointment-add-note.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { AppointmentService } from '../_services';\nimport { AppointmentRecord } from '../_models';\n\n/**\n* A popup dialog to add note to an `Appointment`.\n*/\n@Component({\n  selector: 'app-form-appointment-add-note',\n  templateUrl: './form-appointment-add-note.component.html',\n  styleUrls: ['./form-appointment-add-note.component.css']\n})\nexport class FormAppointmentAddNoteComponent implements OnInit {\n\n  @Output() afterClose: EventEmitter = new EventEmitter();\n  note: string;\n  formError = {\n    'hidden': true,\n    'type': '',\n    'text': ''\n  };\n  button = {\n    'text': 'OK',\n    'color': 'primary'\n  };\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private dialogRef: MatDialogRef,\n    private appointmentService: AppointmentService) {\n   }\n\n  ngOnInit() {\n    // console.log(this.patientId);\n  }\n\n  handleOkButton() {\n    this.formError.hidden = true;\n    let appointmentRecord = new AppointmentRecord();\n    appointmentRecord.notes = this.note;\n    let appointmentId = this.data.id\n    this.appointmentService.addNotes(appointmentId, appointmentRecord)\n      .subscribe(res => {\n        if (res.success) {\n          this.buttonFeedback({\n            'color': 'accent',\n            'text': 'Success'\n          }, true)\n        } else {\n          // ERROR\n        }\n      });\n  }\n\n  buttonFeedback(tempButton, closeAfter=false) {\n    this.button = tempButton\n    setTimeout(() => {\n      this.button = {\n        'color': 'primary',\n        'text': 'OK'\n      }\n      if (closeAfter) {\n        this.dialogRef.close();\n      }\n      // else if (this.patientId && closeAfter) {\n      //   this.afterClose.emit(this.appointment);\n      // }\n    }, 1500)\n  }\n  \n\n}\n\n    \n\n    \n        \n  \n    Notizen Hinzufügen\n    \n      \n      {{\"\"}} -->\n    \n    {{ button.text }}\n  \n\n    \n\n    \n                \n                    ./form-appointment-add-note.component.css\n                \n                .form-new-appointment-note {\n    display: flex;\n    flex-direction: column;\n    margin: 20px;\n}\n  \n.form-new-appointment-note > * {\n    width: 100%;\n}\n\n.form-header {\n    margin-bottom: 20px;\n    display: flex;\n    flex-direction: column;\n}\n\n.form-title {\n    font-size: 18px;\n}\n\n.form-patient-name {\n    font-size: 20px;\n    font-weight: 500;\n}\n\n.note-field {\n    margin-top: 30px !important;\n    margin-bottom: 30px !important;\n}\n\n.form-error-content {\n    margin-top: 20px;\n    color: red;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Notizen Hinzufügen                {{\"\"}} -->        {{ button.text }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppointmentComponent', 'selector': 'app-appointment'},{'name': 'BottomSheetComponent', 'selector': 'app-bottom-sheet'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'ContentCardComponent', 'selector': 'app-content-card'},{'name': 'DatetimepickerComponent', 'selector': 'app-datetimepicker'},{'name': 'FormAppointmentAddNoteComponent', 'selector': 'app-form-appointment-add-note'},{'name': 'FormDeleteAppointmentComponent', 'selector': 'app-form-delete-appointment'},{'name': 'FormDeletePatientComponent', 'selector': 'app-form-delete-patient'},{'name': 'FormNewAppointmentComponent', 'selector': 'app-form-new-appointment'},{'name': 'FormNewPatientComponent', 'selector': 'app-form-new-patient'},{'name': 'FormNewPrescriptionComponent', 'selector': 'app-form-new-prescription'},{'name': 'HomeComponent', 'selector': 'home-component'},{'name': 'ListComponent', 'selector': 'list-component'},{'name': 'LoginComponent', 'selector': ''},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PatientComponent', 'selector': 'app-patient'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FormAppointmentAddNoteComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormDeleteAppointmentComponent.html":{"url":"components/FormDeleteAppointmentComponent.html","title":"component - FormDeleteAppointmentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormDeleteAppointmentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/form-delete-appointment/form-delete-appointment.component.ts\n\n\n    \n        Description\n    \n    \n        A popup dialog to confirm Appointment deletion.\nCalls AppointmentService.deleteAppointment() on confirmation.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-form-delete-appointment\n            \n\n            \n                styleUrls\n                ./form-delete-appointment.component.css\n            \n\n\n\n            \n                templateUrl\n                ./form-delete-appointment.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                button\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                formError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buttonFeedback\n                            \n                            \n                                handleOkButton\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                appointmentId\n                            \n                            \n                                appointmentName\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any, dialogRef: MatDialogRef, appointmentService: AppointmentService, _snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/form-delete-appointment/form-delete-appointment.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        appointmentService\n                                                  \n                                                        \n                                                                        AppointmentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        appointmentId\n                    \n                \n                \n                    \n                        Type :         String\n\n                    \n                \n                \n                    \n                        Default value : \"0\"\n                    \n                \n                        \n                            \n                                    Defined in src/app/form-delete-appointment/form-delete-appointment.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        appointmentName\n                    \n                \n                \n                    \n                        Type :         String\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                        \n                            \n                                    Defined in src/app/form-delete-appointment/form-delete-appointment.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buttonFeedback\n                        \n                        \n                    \n                \n            \n            \n                \nbuttonFeedback(tempButton, closeAfter)\n                \n            \n\n\n            \n                \n                    Defined in src/app/form-delete-appointment/form-delete-appointment.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    tempButton\n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    closeAfter\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleOkButton\n                        \n                        \n                    \n                \n            \n            \n                \nhandleOkButton()\n                \n            \n\n\n            \n                \n                    Defined in src/app/form-delete-appointment/form-delete-appointment.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/form-delete-appointment/form-delete-appointment.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            button\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    'text': 'OK',\n    'color': 'primary'\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/form-delete-appointment/form-delete-appointment.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/form-delete-appointment/form-delete-appointment.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formError\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    'hidden': true,\n    'text': ''\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/form-delete-appointment/form-delete-appointment.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject, Input } from '@angular/core';\nimport { AppointmentService } from '../_services';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatSnackBar } from '@angular/material';\n\n/**\n* A popup dialog to confirm `Appointment` deletion.\n* Calls `AppointmentService.deleteAppointment()` on confirmation.\n*/\n@Component({\n  selector: 'app-form-delete-appointment',\n  templateUrl: './form-delete-appointment.component.html',\n  styleUrls: ['./form-delete-appointment.component.css']\n})\nexport class FormDeleteAppointmentComponent implements OnInit {\n\n  @Input() appointmentId: String = \"0\"; // External use\n  @Input() appointmentName: String = \"\"; // External use\n  formError = {\n    'hidden': true,\n    'text': ''\n  }\n  button = {\n    'text': 'OK',\n    'color': 'primary'\n  };\n\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private dialogRef: MatDialogRef,\n    private appointmentService: AppointmentService,\n    private _snackBar: MatSnackBar) {\n    // this.appointmentObservable = appointmentService.getAll();\n   }\n\n  ngOnInit() {\n    // console.log(this.appointmentId);\n  }\n\n  handleOkButton() {\n    this.formError.hidden = true;\n    let appointmentId = this.data.id || this.appointmentId;\n    this.appointmentService.deleteAppointment(appointmentId)\n      .subscribe(res => {\n        if (res.success) {\n          this.buttonFeedback({\n            'color': 'accent',\n            'text': 'Success'\n          }, true)\n        } else {\n          this.formError.hidden = false;\n          this.formError.text = res.appointment;\n          this.buttonFeedback({\n            'color': 'warn',\n            'text': 'ERROR'\n          })\n        }\n      });\n  }\n\n  buttonFeedback(tempButton, closeAfter=false) {\n    this.button = tempButton\n    setTimeout(() => {\n      this.button = {\n        'color': 'primary',\n        'text': 'OK'\n      }\n      if (closeAfter)\n        this.dialogRef.close();\n        this._snackBar.open(\"Die Daten wurden gelöscht!\", '', { duration: 2000 });\n    }, 1500)\n  }\n  \n}\n\n    \n\n    \n        \n\n  \n    Termin Absagen\n    \n    Möchten Sie den Termin absagen?\n    \n    {{ this.data.patientName + ': ' + this.data.dateTime }}\n  \n\n  {{ button.text }}\n\n  \n    Fehler: \n    {{ formError.text }}\n  \n\n\n    \n\n    \n                \n                    ./form-delete-appointment.component.css\n                \n                .form-delete-appointment {\n    display: flex;\n    flex-direction: column;\n    margin: 20px;\n}\n  \n.form-delete-appointment > * {\n    width: 100%;\n}\n\n.form-header {\n    margin-bottom: 20px;\n    display: flex;\n    flex-direction: column;\n}\n\n.form-title {\n    font-size: 18px;\n}\n\n.form-appointment-info {\n    font-size: 20px;\n    font-weight: 500;\n}\n\n.form-error-content {\n    margin-top: 20px;\n    color: red;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Termin Absagen        Möchten Sie den Termin absagen?        {{ this.data.patientName + \\': \\' + this.data.dateTime }}    {{ button.text }}      Fehler:     {{ formError.text }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppointmentComponent', 'selector': 'app-appointment'},{'name': 'BottomSheetComponent', 'selector': 'app-bottom-sheet'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'ContentCardComponent', 'selector': 'app-content-card'},{'name': 'DatetimepickerComponent', 'selector': 'app-datetimepicker'},{'name': 'FormAppointmentAddNoteComponent', 'selector': 'app-form-appointment-add-note'},{'name': 'FormDeleteAppointmentComponent', 'selector': 'app-form-delete-appointment'},{'name': 'FormDeletePatientComponent', 'selector': 'app-form-delete-patient'},{'name': 'FormNewAppointmentComponent', 'selector': 'app-form-new-appointment'},{'name': 'FormNewPatientComponent', 'selector': 'app-form-new-patient'},{'name': 'FormNewPrescriptionComponent', 'selector': 'app-form-new-prescription'},{'name': 'HomeComponent', 'selector': 'home-component'},{'name': 'ListComponent', 'selector': 'list-component'},{'name': 'LoginComponent', 'selector': ''},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PatientComponent', 'selector': 'app-patient'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FormDeleteAppointmentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormDeletePatientComponent.html":{"url":"components/FormDeletePatientComponent.html","title":"component - FormDeletePatientComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormDeletePatientComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/form-delete-patient/form-delete-patient.component.ts\n\n\n    \n        Description\n    \n    \n        A popup dialog to confirm Patient deletion.\nCalls PatientService.deletePatient() on confirmation.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-form-delete-patient\n            \n\n            \n                styleUrls\n                ./form-delete-patient.component.css\n            \n\n\n\n            \n                templateUrl\n                ./form-delete-patient.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                button\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                formError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buttonFeedback\n                            \n                            \n                                handleOkButton\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                patientId\n                            \n                            \n                                patientName\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any, dialogRef: MatDialogRef, patientService: PatientService, _snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/form-delete-patient/form-delete-patient.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        patientService\n                                                  \n                                                        \n                                                                        PatientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        patientId\n                    \n                \n                \n                    \n                        Type :         String\n\n                    \n                \n                \n                    \n                        Default value : \"0\"\n                    \n                \n                        \n                            \n                                    Defined in src/app/form-delete-patient/form-delete-patient.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        patientName\n                    \n                \n                \n                    \n                        Type :         String\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                        \n                            \n                                    Defined in src/app/form-delete-patient/form-delete-patient.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buttonFeedback\n                        \n                        \n                    \n                \n            \n            \n                \nbuttonFeedback(tempButton, closeAfter)\n                \n            \n\n\n            \n                \n                    Defined in src/app/form-delete-patient/form-delete-patient.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    tempButton\n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    closeAfter\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleOkButton\n                        \n                        \n                    \n                \n            \n            \n                \nhandleOkButton()\n                \n            \n\n\n            \n                \n                    Defined in src/app/form-delete-patient/form-delete-patient.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/form-delete-patient/form-delete-patient.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            button\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    'text': 'OK',\n    'color': 'primary'\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/form-delete-patient/form-delete-patient.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/form-delete-patient/form-delete-patient.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formError\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    'hidden': true,\n    'text': ''\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/form-delete-patient/form-delete-patient.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject, Input } from '@angular/core';\n\nimport { PatientService } from '../_services';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatSnackBar } from '@angular/material';\n\n\n/**\n* A popup dialog to confirm `Patient` deletion.\n* Calls `PatientService.deletePatient()` on confirmation.\n*/\n@Component({\n  selector: 'app-form-delete-patient',\n  templateUrl: './form-delete-patient.component.html',\n  styleUrls: ['./form-delete-patient.component.css']\n})\nexport class FormDeletePatientComponent implements OnInit {\n\n  @Input() patientId: String = \"0\"; // External use\n  @Input() patientName: String = \"\"; // External use\n  formError = {\n    'hidden': true,\n    'text': ''\n  }\n  button = {\n    'text': 'OK',\n    'color': 'primary'\n  };\n\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private dialogRef: MatDialogRef,\n    private patientService: PatientService,\n    private _snackBar: MatSnackBar) {\n    // this.patientObservable = patientService.getAll();\n   }\n\n  ngOnInit() {\n    // console.log(this.patientId);\n  }\n\n  handleOkButton() {\n    this.formError.hidden = true;\n    let patientId = this.data.id || this.patientId;\n    this.patientService.deletePatient(patientId)\n      .subscribe(res => {\n        if (res.success) {\n          this.buttonFeedback({\n            'color': 'accent',\n            'text': 'Success'\n          }, true)\n        } else {\n          this.formError.hidden = false;\n          this.formError.text = res.patient;\n          this.buttonFeedback({\n            'color': 'warn',\n            'text': 'ERROR'\n          })\n        }\n      });\n  }\n\n  buttonFeedback(tempButton, closeAfter=false) {\n    this.button = tempButton\n    setTimeout(() => {\n      this.button = {\n        'color': 'primary',\n        'text': 'OK'\n      }\n      if (closeAfter)\n        this.dialogRef.close();\n        this._snackBar.open(\"Die Daten wurden gelöscht!\", '', { duration: 2000 });\n    }, 1500)\n  }\n  \n}\n\n    \n\n    \n        \n\n  \n    Daten Löschen\n    \n    Möchten Sie alle Daten von {{ this.data.patientName }} löschen?\n    \n    {{ this.data.patientName }} -->\n  \n\n  {{ button.text }}\n\n  \n    Fehler: \n    {{ formError.text }}\n  \n\n\n    \n\n    \n                \n                    ./form-delete-patient.component.css\n                \n                .form-delete-patient {\n    display: flex;\n    flex-direction: column;\n    margin: 20px;\n}\n  \n.form-delete-patient > * {\n    width: 100%;\n}\n\n.form-header {\n    margin-bottom: 20px;\n    display: flex;\n    flex-direction: column;\n}\n\n.form-title {\n    font-size: 18px;\n}\n\n.form-patient-name {\n    font-size: 20px;\n    font-weight: 500;\n}\n\n.form-error-content {\n    margin-top: 20px;\n    color: red;\n}\n\n/* .form-error-text {\n\n}\n\n.form-error-patient {\n    \n} */\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Daten Löschen        Möchten Sie alle Daten von {{ this.data.patientName }} löschen?        {{ this.data.patientName }} -->    {{ button.text }}      Fehler:     {{ formError.text }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppointmentComponent', 'selector': 'app-appointment'},{'name': 'BottomSheetComponent', 'selector': 'app-bottom-sheet'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'ContentCardComponent', 'selector': 'app-content-card'},{'name': 'DatetimepickerComponent', 'selector': 'app-datetimepicker'},{'name': 'FormAppointmentAddNoteComponent', 'selector': 'app-form-appointment-add-note'},{'name': 'FormDeleteAppointmentComponent', 'selector': 'app-form-delete-appointment'},{'name': 'FormDeletePatientComponent', 'selector': 'app-form-delete-patient'},{'name': 'FormNewAppointmentComponent', 'selector': 'app-form-new-appointment'},{'name': 'FormNewPatientComponent', 'selector': 'app-form-new-patient'},{'name': 'FormNewPrescriptionComponent', 'selector': 'app-form-new-prescription'},{'name': 'HomeComponent', 'selector': 'home-component'},{'name': 'ListComponent', 'selector': 'list-component'},{'name': 'LoginComponent', 'selector': ''},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PatientComponent', 'selector': 'app-patient'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FormDeletePatientComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormNewAppointmentComponent.html":{"url":"components/FormNewAppointmentComponent.html","title":"component - FormNewAppointmentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormNewAppointmentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/form-new-appointment/form-new-appointment.component.ts\n\n\n    \n        Description\n    \n    \n        New Appointment creation dialog.\nAlso used when updating an Appointment.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-form-new-appointment\n            \n\n            \n                styleUrls\n                ./form-new-appointment.component.css\n            \n\n\n\n            \n                templateUrl\n                ./form-new-appointment.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                appointment\n                            \n                            \n                                button\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                datetime\n                            \n                            \n                                description\n                            \n                            \n                                form\n                            \n                            \n                                formError\n                            \n                            \n                                timeSet\n                            \n                            \n                                updating\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buttonFeedback\n                            \n                            \n                                handleDateChange\n                            \n                            \n                                handleOkButton\n                            \n                            \n                                handleTimeChange\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                datePickerAutoOpen\n                            \n                            \n                                patientId\n                            \n                            \n                                patientName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                afterClose\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any, dialogRef: MatDialogRef, patientService: PatientService, appointmentService: AppointmentService)\n                    \n                \n                        \n                            \n                                Defined in src/app/form-new-appointment/form-new-appointment.component.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        patientService\n                                                  \n                                                        \n                                                                        PatientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        appointmentService\n                                                  \n                                                        \n                                                                        AppointmentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        datePickerAutoOpen\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/form-new-appointment/form-new-appointment.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        patientId\n                    \n                \n                \n                    \n                        Type :         String\n\n                    \n                \n                \n                    \n                        Default value : \"0\"\n                    \n                \n                        \n                            \n                                    Defined in src/app/form-new-appointment/form-new-appointment.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        patientName\n                    \n                \n                \n                    \n                        Type :         String\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                        \n                            \n                                    Defined in src/app/form-new-appointment/form-new-appointment.component.ts:25\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        afterClose\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/form-new-appointment/form-new-appointment.component.ts:26\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buttonFeedback\n                        \n                        \n                    \n                \n            \n            \n                \nbuttonFeedback(tempButton, closeAfter)\n                \n            \n\n\n            \n                \n                    Defined in src/app/form-new-appointment/form-new-appointment.component.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    tempButton\n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    closeAfter\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleDateChange\n                        \n                        \n                    \n                \n            \n            \n                \nhandleDateChange(e)\n                \n            \n\n\n            \n                \n                    Defined in src/app/form-new-appointment/form-new-appointment.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleOkButton\n                        \n                        \n                    \n                \n            \n            \n                \nhandleOkButton()\n                \n            \n\n\n            \n                \n                    Defined in src/app/form-new-appointment/form-new-appointment.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleTimeChange\n                        \n                        \n                    \n                \n            \n            \n                \nhandleTimeChange(e)\n                \n            \n\n\n            \n                \n                    Defined in src/app/form-new-appointment/form-new-appointment.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/form-new-appointment/form-new-appointment.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            appointment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Appointment()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/form-new-appointment/form-new-appointment.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            button\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    'text': 'OK',\n    'color': 'primary'\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/form-new-appointment/form-new-appointment.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/form-new-appointment/form-new-appointment.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            datetime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     _moment.Moment\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/form-new-appointment/form-new-appointment.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/form-new-appointment/form-new-appointment.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/form-new-appointment/form-new-appointment.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formError\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    'hidden': true,\n    'type': '',\n    'text': ''\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/form-new-appointment/form-new-appointment.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeSet\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/form-new-appointment/form-new-appointment.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updating\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/form-new-appointment/form-new-appointment.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject, Input, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\nimport * as _moment from 'moment';\nimport { PatientService, AppointmentService } from '../_services';\nimport { Appointment } from '../_models';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\n\nconst moment = _moment;\n\n/**\n * New `Appointment` creation dialog.\n * \n * Also used when updating an `Appointment`.\n */\n@Component({\n  selector: 'app-form-new-appointment',\n  templateUrl: './form-new-appointment.component.html',\n  styleUrls: ['./form-new-appointment.component.css']\n})\nexport class FormNewAppointmentComponent implements OnInit {\n\n  @Input() datePickerAutoOpen: boolean = true;\n  @Input() patientId: String = \"0\"; // External use\n  @Input() patientName: String = \"\"; // External use\n  @Output() afterClose: EventEmitter = new EventEmitter();\n  appointment = new Appointment();\n  updating: boolean = false;\n  form: FormGroup;\n  formError = {\n    'hidden': true,\n    'type': '',\n    'text': ''\n  }\n  datetime: _moment.Moment;\n  timeSet: boolean = false;\n  description: string;\n  button = {\n    'text': 'OK',\n    'color': 'primary'\n  };\n\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private dialogRef: MatDialogRef,\n    // private fb: FormBuilder,\n    private patientService: PatientService,\n    private appointmentService: AppointmentService) {\n    // this.form = fb.group({\n    //   appointmentDate: [moment(), Validators.required],\n    //   appointmentTime: [Validators.required]\n    // });\n    // this.patientObservable = patientService.getAll();\n  }\n\n  ngOnInit() {\n    // When data has appointment object, component updates current info\n    this.updating = !!this.data.appointment;\n  }\n\n  handleTimeChange(e) {\n    this.timeSet = true;\n    this.datetime = moment(e);\n  }\n\n  handleDateChange(e) {\n    this.datetime = moment(e);\n  }\n\n  handleOkButton() {\n    this.formError.hidden = true;\n    if (!this.timeSet) {\n      this.formError.type = 'value';\n      this.buttonFeedback({\n        'color': 'warn',\n        'text': 'Appointment time was not set!'\n      });\n      return;\n    } else if (!this.description) {\n      this.formError.type = 'value';\n      this.buttonFeedback({\n        'color': 'warn',\n        'text': 'Description was not set!'\n      });\n      return;\n    } else if ([0, 6].includes(this.datetime.toDate().getDay())) {\n      // Weekend\n      this.buttonFeedback({\n        'color': 'warn',\n        'text': 'Wochendende'\n      });\n      return;\n    } else if (!this.datetime.isBetween(moment('08:00', 'HH:mm'), moment('16:30', 'HH:mm'))) {\n      // Outside of working hours\n      this.buttonFeedback({\n        'color': 'warn',\n        'text': 'ERROR'\n      });\n      return;\n    }\n    this.appointment.dateTime = this.datetime.format('DD.MM.YYYY HH:mm');\n    this.appointment.description = this.description;\n    let patientId = this.data.id || this.patientId;\n    if (this.updating) {\n      this.appointmentService.updateAppointment(this.data.appointment.id, this.appointment)\n        .subscribe(res => {\n          if (res.success) {\n            this.buttonFeedback({\n              'color': 'accent',\n              'text': 'Success'\n            }, true)\n          } else {\n            this.formError.hidden = false;\n            this.formError.type = 'conflict';\n            this.formError.text = res.patient;\n            this.buttonFeedback({\n              'color': 'warn',\n              'text': 'ERROR'\n            })\n          }\n        });\n    } else {\n      this.patientService.addAppointment(patientId, this.appointment)\n        .subscribe(res => {\n          if (res.success) {\n            this.buttonFeedback({\n              'color': 'accent',\n              'text': 'Success'\n            }, true)\n          } else {\n            this.formError.hidden = false;\n            this.formError.type = 'conflict';\n            this.formError.text = res.patient;\n            this.buttonFeedback({\n              'color': 'warn',\n              'text': 'ERROR'\n            })\n          }\n        });\n    }\n\n  }\n\n  buttonFeedback(tempButton, closeAfter = false) {\n    this.button = tempButton\n    setTimeout(() => {\n      this.button = {\n        'color': 'primary',\n        'text': 'OK'\n      }\n      if (closeAfter) {\n        this.dialogRef.close();\n      } else if (this.patientId && closeAfter) {\n        this.afterClose.emit(this.appointment);\n      }\n    }, 1500)\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    {{this.updating ? 'Termin Bearbeiten' : 'Neuen Termin:'}}\n    {{ this.data.patientName || this.patientName }}\n  \n  \n\n  \n    \n  \n\n  {{ button.text }}\n  \n    Time conflict: \n    Value error: \n    {{ formError.text }}\n  \n\n    \n\n    \n                \n                    ./form-new-appointment.component.css\n                \n                .form-new-appointment {\n    display: flex;\n    flex-direction: column;\n    margin: 20px;\n}\n  \n.form-new-appointment > * {\n    width: 100%;\n}\n\n.form-header {\n    margin-bottom: 20px;\n    display: flex;\n    flex-direction: column;\n}\n\n.form-title {\n    font-size: 18px;\n}\n\n.form-patient-name {\n    font-size: 20px;\n    font-weight: 500;\n}\n\n.form-error-content {\n    margin-top: 20px;\n    color: red;\n}\n\n/* .form-error-text {\n\n}\n\n.form-error-patient {\n    \n} */\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{this.updating ? \\'Termin Bearbeiten\\' : \\'Neuen Termin:\\'}}    {{ this.data.patientName || this.patientName }}              {{ button.text }}      Time conflict:     Value error:     {{ formError.text }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppointmentComponent', 'selector': 'app-appointment'},{'name': 'BottomSheetComponent', 'selector': 'app-bottom-sheet'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'ContentCardComponent', 'selector': 'app-content-card'},{'name': 'DatetimepickerComponent', 'selector': 'app-datetimepicker'},{'name': 'FormAppointmentAddNoteComponent', 'selector': 'app-form-appointment-add-note'},{'name': 'FormDeleteAppointmentComponent', 'selector': 'app-form-delete-appointment'},{'name': 'FormDeletePatientComponent', 'selector': 'app-form-delete-patient'},{'name': 'FormNewAppointmentComponent', 'selector': 'app-form-new-appointment'},{'name': 'FormNewPatientComponent', 'selector': 'app-form-new-patient'},{'name': 'FormNewPrescriptionComponent', 'selector': 'app-form-new-prescription'},{'name': 'HomeComponent', 'selector': 'home-component'},{'name': 'ListComponent', 'selector': 'list-component'},{'name': 'LoginComponent', 'selector': ''},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PatientComponent', 'selector': 'app-patient'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FormNewAppointmentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormNewPatientComponent.html":{"url":"components/FormNewPatientComponent.html","title":"component - FormNewPatientComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormNewPatientComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/form-new-patient/form-new-patient.component.ts\n\n\n    \n        Description\n    \n    \n        New Patient creation dialog.\nHas a reactive form to get Patient info.\nAlso used when updating an Patient.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-form-new-patient\n            \n\n            \n                styleUrls\n                ./form-new-patient.component.css\n            \n\n\n\n            \n                templateUrl\n                ./form-new-patient.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addressForm\n                            \n                            \n                                appointment\n                            \n                            \n                                appointmentMade\n                            \n                            \n                                basicInfoForm\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                datetime\n                            \n                            \n                                formError\n                            \n                            \n                                patient\n                            \n                            \n                                    Private\n                                stepper\n                            \n                            \n                                updating\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                createPatient\n                            \n                            \n                                handleNewAppointmentClose\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                readForm\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f1\n                                \n                                \n                                    f2\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any, dialogRef: MatDialogRef, formBuilder: FormBuilder, patientService: PatientService, _snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/form-new-patient/form-new-patient.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        patientService\n                                                  \n                                                        \n                                                                        PatientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/form-new-patient/form-new-patient.component.ts:161\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createPatient\n                        \n                        \n                    \n                \n            \n            \n                \ncreatePatient()\n                \n            \n\n\n            \n                \n                    Defined in src/app/form-new-patient/form-new-patient.component.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleNewAppointmentClose\n                        \n                        \n                    \n                \n            \n            \n                \nhandleNewAppointmentClose(newAppointment: Appointment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/form-new-patient/form-new-patient.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newAppointment\n                                    \n                                                Appointment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/form-new-patient/form-new-patient.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            readForm\n                        \n                        \n                    \n                \n            \n            \n                \nreadForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/form-new-patient/form-new-patient.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addressForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/form-new-patient/form-new-patient.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            appointment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Appointment\n\n                        \n                    \n                    \n                        \n                            Default value : new Appointment()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/form-new-patient/form-new-patient.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            appointmentMade\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/form-new-patient/form-new-patient.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            basicInfoForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/form-new-patient/form-new-patient.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/form-new-patient/form-new-patient.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            datetime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     _moment.Moment\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/form-new-patient/form-new-patient.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formError\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    'hidden': true,\n    'text': ''\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/form-new-patient/form-new-patient.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            patient\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Patient\n\n                        \n                    \n                    \n                        \n                            Default value : new Patient()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/form-new-patient/form-new-patient.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stepper\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatStepper\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatStepper)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/form-new-patient/form-new-patient.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updating\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/form-new-patient/form-new-patient.component.ts:39\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f1\n                    \n                \n\n                \n                    \n                        getf1()\n                    \n                \n                            \n                                \n                                    Defined in src/app/form-new-patient/form-new-patient.component.ts:94\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        f2\n                    \n                \n\n                \n                    \n                        getf2()\n                    \n                \n                            \n                                \n                                    Defined in src/app/form-new-patient/form-new-patient.component.ts:95\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Inject, ViewChild } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\n\nimport { MAT_DIALOG_DATA, MatDialogRef, MatSnackBar, MatStepper } from '@angular/material';\n\nimport { PatientService } from '../_services';\n\nimport * as _moment from 'moment';\nimport { Patient, Appointment, Address } from '../_models';\nimport { ValidateUniqueValues } from '../validators/GenericBackendValidator';\n\nconst moment = _moment;\n\n/**\n * New `Patient` creation dialog.\n * \n * Has a reactive form to get `Patient` info.\n * \n * Also used when updating an `Patient`.\n */\n@Component({\n  selector: 'app-form-new-patient',\n  templateUrl: './form-new-patient.component.html',\n  styleUrls: ['./form-new-patient.component.css']\n})\nexport class FormNewPatientComponent implements OnInit {\n\n  @ViewChild(MatStepper) private stepper: MatStepper;\n  basicInfoForm: FormGroup;\n  addressForm: FormGroup;\n  formError = {\n    'hidden': true,\n    'text': ''\n  }\n  patient: Patient = new Patient();\n  appointment: Appointment = new Appointment();\n  appointmentMade: boolean = false;\n  datetime: _moment.Moment;\n  updating: boolean = false;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private dialogRef: MatDialogRef,\n    private formBuilder: FormBuilder,\n    private patientService: PatientService,\n    private _snackBar: MatSnackBar) {\n\n  }\n\n  ngOnInit() {\n    // When data has patient object, component updates current info\n    this.updating = !!this.data.patient;\n\n    // Helper function to shorten default value assignments\n    const p = (attribute, subattribute = null) => {\n      if (!!this.data.patient) {\n        if (subattribute) {\n          return this.data.patient[attribute][subattribute];\n        } else {\n          return this.data.patient[attribute];\n        }\n      } else {\n        return '';\n      }\n    };\n\n    this.basicInfoForm = this.formBuilder.group({\n      firstName: [p('firstName'), [Validators.required, Validators.minLength(2)]],\n      lastName: [p('lastName'), [Validators.required, Validators.minLength(2)]],\n      gender: [p('gender'), Validators.required],\n      dateOfBirth: [moment(p('dateOfBirth'), 'DD.MM.YYYY').toDate(), Validators.required],\n      email: [p('email'),\n      [Validators.required, Validators.minLength(5), Validators.email],\n      [ValidateUniqueValues.createValidator(this.patientService, 'email', p('email'))]\n      ],\n      insuranceNumber: [p('insuranceNumber'),\n      [Validators.required],\n      [ValidateUniqueValues.createValidator(this.patientService, 'insuranceNumber', p('insuranceNumber'))]\n      ]\n    });\n    this.addressForm = this.formBuilder.group({\n      phoneNumber: [p('phoneNumber'),\n      [Validators.required, Validators.pattern('^0\\\\d{11}$')],\n      [ValidateUniqueValues.createValidator(this.patientService, 'phoneNumber', p('phoneNumber'))]\n      ],\n      state: [p('address', 'state'), [Validators.required]],\n      city: [p('address', 'city'), [Validators.required]],\n      street: [p('address', 'street'), [Validators.required]],\n      buildingNumber: [p('address', 'buildingNumber'), [Validators.required]],\n      zip: [p('address', 'zip'), [Validators.required]]\n    });\n  }\n\n  get f1() { return this.basicInfoForm.controls; }\n  get f2() { return this.addressForm.controls; }\n\n  handleNewAppointmentClose(newAppointment: Appointment) {\n    // Appointment created\n    this.appointmentMade = true;\n    this.appointment = newAppointment;\n    this.stepper.next();\n  }\n\n  readForm() {\n    console.log(this.f1, this.f2)\n    // Form 1 has patient attributes\n    Object.keys(this.f1).map(key => {\n      if (key === 'dateOfBirth') {\n        // Convert to default format\n        this.patient[key] = moment(this.f1[key].value).format('DD.MM.YYYY');\n      } else {\n        this.patient[key] = this.f1[key].value;\n      }\n    });\n    // Form 2 has phoneNumber of patient and all address attributes\n    this.patient.address = new Address();\n    Object.keys(this.f2).map(key => {\n      if (key === 'phoneNumber') {\n        this.patient[key] = this.f2[key].value;\n      } else {\n        this.patient.address[key] = this.f2[key].value;\n      }\n    });\n  }\n\n  createPatient() {\n    if (this.patient.id) { return; }\n    this.readForm()\n    if (this.updating) {\n      // UPDATE\n      this.patientService.updatePatient(this.data.patient.id, this.patient).subscribe(res => {\n        if (res.id) {\n          this._snackBar.open(\"Patient updated!\", '', {\n            duration: 3000\n          });\n          this.patient.id = res.id;\n        } else if (res.error) {\n          this._snackBar.open(\"Problem: \" + res.error, '', {\n            duration: 3000\n          });\n        }\n      })\n    } else {\n      // CREATE\n      this.patientService.addNewPatient(this.patient).subscribe(res => {\n        if (res.data.id) {\n          this._snackBar.open(\"Patient created!\", '', {\n            duration: 3000\n          });\n          this.patient.id = res.data.id;\n        } else if (res.error) {\n          this._snackBar.open(\"Problem: \" + res.error, '', {\n            duration: 3000\n          });\n        }\n      })\n    }\n\n  }\n\n  close() {\n    this.dialogRef.close();\n  }\n\n}\n\n    \n\n    \n        \n  \n\n    \n      Basisinformationen\n\n      \n        \n          \n          {{\"\"}}\n        \n        \n          \n          {{\"\"}}\n        \n        \n          \n            Männlich\n            Weiblich\n          \n        \n        \n            \n            \n            \n        \n        \n          \n          {{\"\"}}\n        \n        \n          \n          {{\"\"}}\n        \n      \n\n      \n        Weiter\n      \n    \n\n  \n\n  \n    \n      Adress\n\n\n      \n        \n          \n            {{\"Falsche Telefonnummer.\"}}\n            {{\"Die Telefonnummer ist bereits vorhanden.\"}}\n        \n        \n          \n            Baden-Württemberg\n            Bayern\n            Berlin\n            Brandenburg\n            Bremen\n            Hamburg\n            Hessen\n            Mecklenburg-Vorpommern\n            Niedersachsen\n            Nordrhein-Westfalen\n            Rheinland-Pfalz\n            Saarland\n            Sachsen\n            Sachsen-Anhalt\n            Schleswig-Holstein\n            Thüringen\n          \n        \n        \n            \n            {{\"\"}}\n          \n    \n          \n            \n            {{\"\"}}\n          \n    \n          \n            \n            {{\"\"}}\n          \n    \n          \n            \n            {{\"\"}}\n          \n      \n\n      \n        Zurück\n        Weiter\n      \n\n    \n  \n\n  \n    Termin\n\n    \n      \n    \n\n    \n      Zurück\n      Weiter (Keinen Termin)\n    \n  \n\n  \n    Fertig\n    \n      done\n      Daten gespeichert: {{this.patient.firstName}} {{this.patient.lastName}}\n      \n      {{this.appointmentMade ? 'Termin vereinbart: ' + this.appointment.datetime.toString() : ''}}\n    \n    \n      OK\n    \n  \n\n\n    \n\n    \n                \n                    ./form-new-patient.component.css\n                \n                .form-new-patient {\n    display: flex;\n    flex-direction: column;\n    margin: 30px;\n}\n  \n.form-new-patient > * {\n    width: 100%;\n}\n\n.stepper-button-container {\n    text-align: right;\n}\n\n.stepper-button {\n    border: 1px solid #00000030;\n    margin: 0px 3px 0px 3px;\n}\n\n\ndiv.new-patient-info-container, div.new-patient-appointment-container, div.new-patient-end-container {\n    display: flex;\n    flex-direction: column;\n    min-height: 428px;\n}\n\n.new-patient-end-container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Basisinformationen                                  {{\"\"}}                                    {{\"\"}}                                      Männlich            Weiblich                                                                                                  {{\"\"}}                                    {{\"\"}}                            Weiter                        Adress                                    {{\"Falsche Telefonnummer.\"}}            {{\"Die Telefonnummer ist bereits vorhanden.\"}}                                      Baden-Württemberg            Bayern            Berlin            Brandenburg            Bremen            Hamburg            Hessen            Mecklenburg-Vorpommern            Niedersachsen            Nordrhein-Westfalen            Rheinland-Pfalz            Saarland            Sachsen            Sachsen-Anhalt            Schleswig-Holstein            Thüringen                                                  {{\"\"}}                                                {{\"\"}}                                                {{\"\"}}                                                {{\"\"}}                              Zurück        Weiter                  Termin                        Zurück      Weiter (Keinen Termin)            Fertig          done      Daten gespeichert: {{this.patient.firstName}} {{this.patient.lastName}}            {{this.appointmentMade ? \\'Termin vereinbart: \\' + this.appointment.datetime.toString() : \\'\\'}}              OK      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppointmentComponent', 'selector': 'app-appointment'},{'name': 'BottomSheetComponent', 'selector': 'app-bottom-sheet'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'ContentCardComponent', 'selector': 'app-content-card'},{'name': 'DatetimepickerComponent', 'selector': 'app-datetimepicker'},{'name': 'FormAppointmentAddNoteComponent', 'selector': 'app-form-appointment-add-note'},{'name': 'FormDeleteAppointmentComponent', 'selector': 'app-form-delete-appointment'},{'name': 'FormDeletePatientComponent', 'selector': 'app-form-delete-patient'},{'name': 'FormNewAppointmentComponent', 'selector': 'app-form-new-appointment'},{'name': 'FormNewPatientComponent', 'selector': 'app-form-new-patient'},{'name': 'FormNewPrescriptionComponent', 'selector': 'app-form-new-prescription'},{'name': 'HomeComponent', 'selector': 'home-component'},{'name': 'ListComponent', 'selector': 'list-component'},{'name': 'LoginComponent', 'selector': ''},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PatientComponent', 'selector': 'app-patient'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FormNewPatientComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormNewPrescriptionComponent.html":{"url":"components/FormNewPrescriptionComponent.html","title":"component - FormNewPrescriptionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormNewPrescriptionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/form-new-prescription/form-new-prescription.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-form-new-prescription\n            \n\n            \n                styleUrls\n                ./form-new-prescription.component.css\n            \n\n\n\n            \n                templateUrl\n                ./form-new-prescription.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addToDatabasePanelOpened\n                            \n                            \n                                button\n                            \n                            \n                                currentDate\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                filteredMedicine\n                            \n                            \n                                formError\n                            \n                            \n                                isLoading\n                            \n                            \n                                medicineForm\n                            \n                            \n                                newMedicine\n                            \n                            \n                                prescription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                displayFn\n                            \n                            \n                                    Private\n                                    Async\n                                handleAddButton\n                            \n                            \n                                    Private\n                                handleDeleteButton\n                            \n                            \n                                    Private\n                                    Async\n                                handleNewButton\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openSnackBar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                patientName\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any, dialogRef: MatDialogRef, patientService: PatientService, medicineService: MedicineService, fb: FormBuilder, _snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/form-new-prescription/form-new-prescription.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        patientService\n                                                  \n                                                        \n                                                                        PatientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        medicineService\n                                                  \n                                                        \n                                                                        MedicineService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        patientName\n                    \n                \n                \n                    \n                        Type :         String\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                        \n                            \n                                    Defined in src/app/form-new-prescription/form-new-prescription.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayFn\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayFn(med: Medicine)\n                \n            \n\n\n            \n                \n                    Defined in src/app/form-new-prescription/form-new-prescription.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    med\n                                    \n                                                Medicine\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            handleAddButton\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleAddButton()\n                \n            \n\n\n            \n                \n                    Defined in src/app/form-new-prescription/form-new-prescription.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleDeleteButton\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleDeleteButton(selectedMedicine)\n                \n            \n\n\n            \n                \n                    Defined in src/app/form-new-prescription/form-new-prescription.component.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    selectedMedicine\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            handleNewButton\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleNewButton()\n                \n            \n\n\n            \n                \n                    Defined in src/app/form-new-prescription/form-new-prescription.component.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/form-new-prescription/form-new-prescription.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openSnackBar\n                        \n                        \n                    \n                \n            \n            \n                \nopenSnackBar(text: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/form-new-prescription/form-new-prescription.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addToDatabasePanelOpened\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/form-new-prescription/form-new-prescription.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            button\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    'text': 'OK',\n    'color': 'primary'\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/form-new-prescription/form-new-prescription.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : moment().format('DD.MM.YYYY')\n                        \n                    \n                        \n                            \n                                    Defined in src/app/form-new-prescription/form-new-prescription.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/form-new-prescription/form-new-prescription.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filteredMedicine\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/form-new-prescription/form-new-prescription.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formError\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    'hidden': true,\n    'type': '',\n    'text': ''\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/form-new-prescription/form-new-prescription.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/form-new-prescription/form-new-prescription.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            medicineForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/form-new-prescription/form-new-prescription.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newMedicine\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Medicine()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/form-new-prescription/form-new-prescription.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            prescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Prescription()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/form-new-prescription/form-new-prescription.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Inject } from '@angular/core';\nimport { FormControl, FormBuilder, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatSnackBar } from '@angular/material';\nimport { PatientService } from '../_services';\nimport { Observable } from 'rxjs';\nimport { startWith, map, debounceTime, switchMap, finalize, tap } from 'rxjs/operators';\nimport { Prescription, Medicine } from '../_models';\n\nimport * as _moment from 'moment';\nimport { MedicineService } from '../_services/medicine.service';\nconst moment = _moment;\n\n@Component({\n  selector: 'app-form-new-prescription',\n  templateUrl: './form-new-prescription.component.html',\n  styleUrls: ['./form-new-prescription.component.css']\n})\nexport class FormNewPrescriptionComponent implements OnInit {\n  @Input() patientName: String = \"\"; // External use\n\n  prescription = new Prescription();\n  medicineForm: FormGroup;\n  filteredMedicine: Array = [];\n  isLoading = false;\n  addToDatabasePanelOpened = false;\n  newMedicine = new Medicine();\n  formError = {\n    'hidden': true,\n    'type': '',\n    'text': ''\n  };\n  button = {\n    'text': 'OK',\n    'color': 'primary'\n  };\n  currentDate = moment().format('DD.MM.YYYY');\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private dialogRef: MatDialogRef,\n    private patientService: PatientService,\n    private medicineService: MedicineService,\n    private fb: FormBuilder,\n    private _snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit() {\n    this.medicineForm = this.fb.group({\n      userInput: null\n    })\n\n    this.medicineForm\n      .get('userInput')\n      .valueChanges\n      .pipe(\n        debounceTime(300),\n        tap(() => this.isLoading = true),\n        switchMap(value => {\n          if (typeof value !== 'string') { return []; }\n          return this.medicineService.autocomplete(value)\n            .pipe(\n              finalize(() => this.isLoading = false),\n            )\n        }\n        )\n      )\n      //@ts-ignore: Array\n      .subscribe((medicineList) => this.filteredMedicine = medicineList);\n  }\n\n  displayFn(med: Medicine) {\n    if (med) { return med.name; }\n  }\n\n  openSnackBar(text: string) {\n    this._snackBar.open(text, '', {\n      duration: 3000\n    });\n  }\n\n  private async handleAddButton() {\n    let medicine: Medicine;\n    // Clicked on autocomplete option\n    // Medicine object came from server as Medicine type\n    if (!!this.medicineForm.value.userInput.id) {\n      medicine = this.medicineForm.value.userInput;\n    } else {\n      // Manual input, name only, will be converted to Medicine type\n      // Check if Medicine name exists as an option\n      if (this.filteredMedicine.find(m => m.name === this.medicineForm.value.userInput)) {\n        // Medicine exists on database, no need to add\n        // Getting Medicine object from database\n        const medicineName = this.medicineForm.value.userInput;\n        medicine = await this.medicineService.autocomplete(medicineName).toPromise();\n        medicine = medicine[0]; // Get first element in array\n      } else {\n        // New Medicine needs to be added to database\n        this.openSnackBar(\"Medikament nicht gefunden!\");\n        this.addToDatabasePanelOpened = true;\n        return;\n      }\n    }\n    // At this point, medicine is our Medicine object from database\n    // Avoid duplicate entries\n    if (this.prescription.medicine.includes(medicine)) { return; }\n    this.prescription.medicine.push(medicine);\n  }\n\n  private async handleNewButton() {\n    this.newMedicine.name = this.medicineForm.value.userInput;\n    this.medicineService.addNewMedicine(this.newMedicine)\n    .subscribe(res => {\n      if (res.data.id) {\n        this.openSnackBar(\"Medikament gespeichert!\");\n        this.prescription.medicine.push(res.data);\n        this.addToDatabasePanelOpened = false;\n      } else {\n        this.openSnackBar(\"Fehler beim Speichern\");\n      }\n    });\n  }\n\n  private handleDeleteButton(selectedMedicine) {\n    this.prescription.medicine = this.prescription.medicine.filter(m => m !== selectedMedicine);\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n      \n      \n        \n          \n        \n        \n          \n            {{medicine.name}}\n          \n        \n      \n    \n    Hinzufügen\n   -->\n\n  \n    \n      \n        \n          \n            \n            \n              \n                \n              \n              \n                \n                  {{medicine.name}}\n                \n              \n            \n          \n          Hinzufügen\n        \n      \n\n      \n        \n          \n        \n        Speichern\n      \n\n    \n  \n\n  \n    \n      \n        \n          \n            {{ 'Für: ' + this.data.patientName || this.patientName }}\n            {{ currentDate }}\n          \n        \n        \n        \n          Es gibt noch keine Medikament.\n        \n        \n          local_pharmacy\n           {{ medicine.name }} \n          \n             {{ medicine.description }} \n          \n          \n            delete\n          \n          \n          \n        \n      \n    \n  \n\n\n  {{ button.text }}\n  \n    Time conflict: \n    Value error: \n    {{ formError.text }}\n  \n\n    \n\n    \n                \n                    ./form-new-prescription.component.css\n                \n                .form-new-prescription {\n    min-width: 400px;\n    display: flex;\n    flex-direction: column;\n    margin: 20px;\n}\n  \n.form-new-prescription > * {\n    width: 100%;\n}\n\n.form-header {\n    margin-bottom: 20px;\n    display: flex;\n    flex-direction: column;\n}\n\n.form-title {\n    font-size: 18px;\n}\n\n.form-patient-name {\n    font-size: 20px;\n    font-weight: 500;\n}\n\n.form-error-content {\n    margin-top: 20px;\n    color: red;\n}\n\n.add-button, .new-button {\n    margin-left: 50px;\n}\n\n.prescription-card {\n    padding: 0px 5px 0px 5px !important;\n    width: 97% !important;\n    margin: 20px 0px 20px 0px !important;\n    box-shadow: 0 1px 3px 2px rgba(0,0,0,.12), 0 1px 3px 0 rgba(0,0,0,.12), 0 1px 3px 0 rgba(0,0,0,.12) !important;\n}\n\n.prescription-title {\n    width: 100%;\n}\n\n.patient-name {\n    /* margin-top: -4px; */\n    float: left;\n    font-weight: 500;\n}\n\n.date {\n    /* margin-top: -4px; */\n    float: right;\n    font-weight: 500;\n}\n\n.expansion-header {\n    height: 78px !important;\n}\n\n::ng-deep .medicine-placeholder > div {\n    justify-content: center;\n}\n\n::ng-deep .mat-expansion-panel-header[aria-disabled=true] {\n    color: rgba(0,0,0,.87);\n    padding: 8px 24px 0px 24px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                          {{medicine.name}}                                Hinzufügen   -->                                                                                                                                                  {{medicine.name}}                                                              Hinzufügen                                                      Speichern                                                      {{ \\'Für: \\' + this.data.patientName || this.patientName }}            {{ currentDate }}                                            Es gibt noch keine Medikament.                          local_pharmacy           {{ medicine.name }}                        {{ medicine.description }}                                 delete                                                    {{ button.text }}      Time conflict:     Value error:     {{ formError.text }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppointmentComponent', 'selector': 'app-appointment'},{'name': 'BottomSheetComponent', 'selector': 'app-bottom-sheet'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'ContentCardComponent', 'selector': 'app-content-card'},{'name': 'DatetimepickerComponent', 'selector': 'app-datetimepicker'},{'name': 'FormAppointmentAddNoteComponent', 'selector': 'app-form-appointment-add-note'},{'name': 'FormDeleteAppointmentComponent', 'selector': 'app-form-delete-appointment'},{'name': 'FormDeletePatientComponent', 'selector': 'app-form-delete-patient'},{'name': 'FormNewAppointmentComponent', 'selector': 'app-form-new-appointment'},{'name': 'FormNewPatientComponent', 'selector': 'app-form-new-patient'},{'name': 'FormNewPrescriptionComponent', 'selector': 'app-form-new-prescription'},{'name': 'HomeComponent', 'selector': 'home-component'},{'name': 'ListComponent', 'selector': 'list-component'},{'name': 'LoginComponent', 'selector': ''},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PatientComponent', 'selector': 'app-patient'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FormNewPrescriptionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n    \n        Description\n    \n    \n        \"Home\" component.\nRenders CalendarComponent inside a ContentCard.\nPlanned as a home dashboard component.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                home-component\n            \n\n            \n                styleUrls\n                home.component.css\n            \n\n\n\n            \n                templateUrl\n                home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(patientService: PatientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/home.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        patientService\n                                                  \n                                                        \n                                                                        PatientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { Patient } from '../_models';\nimport { PatientService } from '../_services';\n\n/**\n * \"Home\" component.\n * \n * Renders `CalendarComponent` inside a `ContentCard`.\n * \n * Planned as a home dashboard component.\n */\n@Component({\n    selector: 'home-component',\n    templateUrl: 'home.component.html',\n    styleUrls: ['home.component.css']\n})\nexport class HomeComponent implements OnInit {\n    // patients: Patient[] = [];\n\n    constructor(private patientService: PatientService) {}\n\n    ngOnInit() {\n        // this.patientService.getAll().pipe(first()).subscribe(patients => { \n        //     this.patients = patients;\n        // });\n    }\n}\n    \n\n    \n        \n    \n\n\n    \n\n    \n                \n                    home.component.css\n                \n                .list-component {\n  width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppointmentComponent', 'selector': 'app-appointment'},{'name': 'BottomSheetComponent', 'selector': 'app-bottom-sheet'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'ContentCardComponent', 'selector': 'app-content-card'},{'name': 'DatetimepickerComponent', 'selector': 'app-datetimepicker'},{'name': 'FormAppointmentAddNoteComponent', 'selector': 'app-form-appointment-add-note'},{'name': 'FormDeleteAppointmentComponent', 'selector': 'app-form-delete-appointment'},{'name': 'FormDeletePatientComponent', 'selector': 'app-form-delete-patient'},{'name': 'FormNewAppointmentComponent', 'selector': 'app-form-new-appointment'},{'name': 'FormNewPatientComponent', 'selector': 'app-form-new-patient'},{'name': 'FormNewPrescriptionComponent', 'selector': 'app-form-new-prescription'},{'name': 'HomeComponent', 'selector': 'home-component'},{'name': 'ListComponent', 'selector': 'list-component'},{'name': 'LoginComponent', 'selector': ''},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PatientComponent', 'selector': 'app-patient'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListComponent.html":{"url":"components/ListComponent.html","title":"component - ListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/list/list.component.ts\n\n\n    \n        Description\n    \n    \n        List component with a filterable table.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                list-component\n            \n\n            \n                styleUrls\n                list.component.css\n            \n\n\n\n            \n                templateUrl\n                list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataSource\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                hideOlder\n                            \n                            \n                                paginator\n                            \n                            \n                                sort\n                            \n                            \n                                subscription\n                            \n                            \n                                table\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                createTable\n                            \n                            \n                                handleCheckboxToggle\n                            \n                            \n                                handleOnClick\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                refreshList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                canHideOlder\n                            \n                            \n                                columns\n                            \n                            \n                                dataObservable\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onClickOutput\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cd: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/list/list.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        canHideOlder\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/list/list.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        columns\n                    \n                \n                \n                    \n                        Type :     Array\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/list/list.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dataObservable\n                    \n                \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/list/list.component.ts:21\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onClickOutput\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/list/list.component.ts:24\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            applyFilter\n                        \n                        \n                    \n                \n            \n            \n                \napplyFilter(filterValue: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/list/list.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createTable\n                        \n                        \n                    \n                \n            \n            \n                \ncreateTable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/list/list.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleCheckboxToggle\n                        \n                        \n                    \n                \n            \n            \n                \nhandleCheckboxToggle(e)\n                \n            \n\n\n            \n                \n                    Defined in src/app/list/list.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleOnClick\n                        \n                        \n                    \n                \n            \n            \n                \nhandleOnClick(e)\n                \n            \n\n\n            \n                \n                    Defined in src/app/list/list.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/list/list.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/list/list.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            refreshList\n                        \n                        \n                    \n                \n            \n            \n                \nrefreshList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/list/list.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/list/list.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/list/list.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hideOlder\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/list/list.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paginator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatPaginator\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatPaginator)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/list/list.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sort\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSort\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatSort)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/list/list.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscription\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/list/list.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            table\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatTable\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatTable)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/list/list.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit, ViewChild, Output, EventEmitter, ChangeDetectorRef } from '@angular/core';\n\nimport { MatTableDataSource, MatSort, MatPaginator, MatTable } from '@angular/material';\n\nimport { Observable } from 'rxjs';\n\nimport * as _moment from 'moment';\nconst moment = _moment;\n\n\n/**\n * List component with a filterable table.\n */\n@Component({\n  selector: 'list-component',\n  templateUrl: 'list.component.html',\n  styleUrls: ['list.component.css']\n})\nexport class ListComponent implements OnInit {\n\n  @Input('dataObservable') dataObservable: Observable;\n  @Input('columns') columns: Array;\n  @Input('canHideOlder') canHideOlder: boolean = false;\n  @Output() onClickOutput: EventEmitter = new EventEmitter();\n  @ViewChild(MatTable) table: MatTable;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  displayedColumns = [];\n  dataSource;\n  subscription;\n  hideOlder = false;\n\n  constructor(private cd: ChangeDetectorRef) { }\n\n  ngOnInit() {\n    this.displayedColumns = this.columns.map(x => x.id);\n    this.createTable();\n  };\n\n  createTable() {\n    this.subscription = this.dataObservable.subscribe(entries => {\n      let filteredEntries = [];\n      if (this.hideOlder) {\n        filteredEntries = entries.filter(e => {\n          return !moment(e.dateTime, 'DD.MM.YYYY HH:mm').isBefore(Date.now());\n        });\n      } else {\n        filteredEntries = entries;\n      }\n      this.dataSource = new MatTableDataSource(filteredEntries);\n      this.dataSource.sort = this.sort;\n      this.dataSource.paginator = this.paginator;\n\n      // Date sort\n      // \"21.11.1991\" -> new Date(\"1991-11-21\")\n      this.dataSource.sortingDataAccessor = (item, property) => {\n        switch (property) {\n          case 'dateOfBirth': return new Date(item.dateOfBirth.split('.').reverse().join('-'));\n          case 'dateTime': return new Date(item.dateTime.split('.').reverse().join('-'));\n          default: return item[property];\n        }\n      };\n\n      this.dataSource.filterPredicate = (data, value) => {\n        // Full text search on object to extend filter capabilities e.g City\n        return JSON.stringify(Object.values(data)).toLowerCase().includes(value);\n      };\n\n    });\n  };\n\n  handleCheckboxToggle(e) {\n    this.hideOlder = e.checked;\n    this.refreshList();\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  };\n\n  handleOnClick(e) {\n    const id = parseInt(e.target.getAttribute('data-identifier'));\n    const clickedElementData = this.dataSource.filteredData.find(el => el.id === id);\n    this.onClickOutput.emit(clickedElementData);\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  refreshList() {\n    this.subscription.unsubscribe();\n    this.createTable();\n  }\n\n}\n    \n\n    \n        \n  \n    \n  \n  \n    Alte Termine ausblenden\n  \n\n\n\n\n  \n     {{column.value}} \n     {{element[column.id]}} \n  \n\n  \n  \n\n\n\n\n\n    \n\n    \n                \n                    list.component.css\n                \n                table {\n  width: 98%;\n  box-shadow: 0px 0px 5px 1px rgba(0, 0, 0, 0.06);\n}\n\n.filter-container {\n  width: 98%;\n  display: flex;\n  flex-direction: row;\n}\n\n.hide-checkbox {\n  padding-top: 18px;\n  margin: 0px 40px 0px 60px !important;\n}\n\nth.mat-sort-header-sorted {\n  color: black;\n}\n\n.mat-form-field {\n  font-size: 14px;\n  width: 100%;\n}\n\n.mat-cell {\n  text-align: left;\n}\n\n.mat-row {\n  transition: 0.3s;\n}\n\n.mat-row:hover {\n  background-color: rgb(230, 230, 230);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              Alte Termine ausblenden         {{column.value}}      {{element[column.id]}}       '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppointmentComponent', 'selector': 'app-appointment'},{'name': 'BottomSheetComponent', 'selector': 'app-bottom-sheet'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'ContentCardComponent', 'selector': 'app-content-card'},{'name': 'DatetimepickerComponent', 'selector': 'app-datetimepicker'},{'name': 'FormAppointmentAddNoteComponent', 'selector': 'app-form-appointment-add-note'},{'name': 'FormDeleteAppointmentComponent', 'selector': 'app-form-delete-appointment'},{'name': 'FormDeletePatientComponent', 'selector': 'app-form-delete-patient'},{'name': 'FormNewAppointmentComponent', 'selector': 'app-form-new-appointment'},{'name': 'FormNewPatientComponent', 'selector': 'app-form-new-patient'},{'name': 'FormNewPrescriptionComponent', 'selector': 'app-form-new-prescription'},{'name': 'HomeComponent', 'selector': 'home-component'},{'name': 'ListComponent', 'selector': 'list-component'},{'name': 'LoginComponent', 'selector': ''},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PatientComponent', 'selector': 'app-patient'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n    \n        Description\n    \n    \n        Login component with a login/password input.\nChecks login info using AuthenticationService.\nReads route snapshot to redirect after a successful login.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                styleUrls\n                login.component.css\n            \n\n\n\n            \n                templateUrl\n                login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                button\n                            \n                            \n                                loading\n                            \n                            \n                                password\n                            \n                            \n                                returnUrl\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                alertButton\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, router: Router, authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            alertButton\n                        \n                        \n                    \n                \n            \n            \n                \nalertButton(text: string, color: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    color\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submit\n                        \n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            button\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    text: 'Login',\n    color: 'primary'\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            returnUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { AuthenticationService } from '../_services';\n\n/**\n * Login component with a login/password input.\n * \n * Checks login info using `AuthenticationService`.\n * \n * Reads route snapshot to redirect after a successful login.\n */\n@Component({\n  templateUrl: 'login.component.html',\n  styleUrls: ['login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loading = false;\n  returnUrl: string;\n  button = {\n    text: 'Login',\n    color: 'primary'\n  };\n  username: string;\n  password: string;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private authenticationService: AuthenticationService) { }\n\n  ngOnInit() {\n    // Reset login status\n    this.authenticationService.logout();\n\n    // Get return url from route parameters or default to '/'\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n  }\n\n  alertButton(text: string, color: string) {\n    this.button = { text, color };\n    setTimeout(() => {\n      this.button.text = 'Login';\n      this.button.color = 'primary';\n    }, 2000)\n  }\n\n  submit() {\n    // CHECK\n    if (this.username.length  {\n          // Login successful\n          this.alertButton('Success!', 'accent')\n          setTimeout(() => {\n            this.router.navigate([this.returnUrl]);\n          }, 1000)\n        },\n        error => {\n          this.alertButton('Invalid credentials', 'warn');\n          this.loading = false;\n        });\n  }\n}\n    \n\n    \n        \n    \n        \n\n            \n                Login\n            \n\n            \n\n                \n                    \n                \n                \n                    \n                \n\n                 -->\n                \n                    {{ button.text }}\n                \n\n            \n\n        \n    \n\n\n\n\n    Username: test\n    Password: test\n\nLogin\n\n    \n        Username\n        \n        \n            Username is required\n        \n    \n    \n        Password\n        \n        \n            Password is required\n        \n    \n    \n        Login\n        \n    \n    {{error}}\n -->\n    \n\n    \n                \n                    login.component.css\n                \n                .login-container {\n    height: 100vh;\n    width: 100vw;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.login-card {\n    display: flex;\n    flex-direction: column;\n    padding: 0px !important;\n    width: 480px;\n    height: 420px;\n}\n\n.login-card-header {\n    background-color: gray;\n    color: white;\n    height: 50px;\n    display: flex;\n    align-items: center;\n    flex: 0.15;\n    border-top-left-radius: 4px;\n    border-top-right-radius: 4px;\n}\n\n.login-card-title {\n    margin: 0px !important;\n}\n\n.login-card-content {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    flex: 1;\n    padding: 20px;\n    /* zoom: 120%; */\n}\n\nmat-form-field.mat-form-field {\n    font-size: 18px;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Login                                                                                                                                                 -->                                    {{ button.text }}                                            Username: test    Password: testLogin            Username                            Username is required                        Password                            Password is required                        Login                {{error}} -->'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppointmentComponent', 'selector': 'app-appointment'},{'name': 'BottomSheetComponent', 'selector': 'app-bottom-sheet'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'ContentCardComponent', 'selector': 'app-content-card'},{'name': 'DatetimepickerComponent', 'selector': 'app-datetimepicker'},{'name': 'FormAppointmentAddNoteComponent', 'selector': 'app-form-appointment-add-note'},{'name': 'FormDeleteAppointmentComponent', 'selector': 'app-form-delete-appointment'},{'name': 'FormDeletePatientComponent', 'selector': 'app-form-delete-patient'},{'name': 'FormNewAppointmentComponent', 'selector': 'app-form-new-appointment'},{'name': 'FormNewPatientComponent', 'selector': 'app-form-new-patient'},{'name': 'FormNewPrescriptionComponent', 'selector': 'app-form-new-prescription'},{'name': 'HomeComponent', 'selector': 'home-component'},{'name': 'ListComponent', 'selector': 'list-component'},{'name': 'LoginComponent', 'selector': ''},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PatientComponent', 'selector': 'app-patient'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Medicine.html":{"url":"classes/Medicine.html","title":"class - Medicine","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Medicine\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/medicine.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                howOften\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/medicine.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            howOften\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/medicine.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/medicine.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/medicine.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Medicine {\n    id: number;\n    name: string;\n    description: string;\n    howOften: string;\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MedicineService.html":{"url":"injectables/MedicineService.html","title":"injectable - MedicineService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MedicineService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_services/medicine.service.ts\n        \n\n            \n                Description\n            \n            \n                Communication service for /medicine endpoint with standard CRUD functions.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                medicineUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addNewMedicine\n                            \n                            \n                                autocomplete\n                            \n                            \n                                deleteMedicine\n                            \n                            \n                                getAll\n                            \n                            \n                                updateMedicine\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/_services/medicine.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addNewMedicine\n                        \n                        \n                    \n                \n            \n            \n                \naddNewMedicine(medicine: Medicine)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/medicine.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    medicine\n                                    \n                                                Medicine\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            autocomplete\n                        \n                        \n                    \n                \n            \n            \n                \nautocomplete(value: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/medicine.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteMedicine\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteMedicine(medicineId: Number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/medicine.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    medicineId\n                                    \n                                                Number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/medicine.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateMedicine\n                        \n                        \n                    \n                \n            \n            \n                \nupdateMedicine(medicineId: Number, medicine: Medicine)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/medicine.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    medicineId\n                                    \n                                                Number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    medicine\n                                    \n                                                Medicine\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            api\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : environment.apiLocal\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_services/medicine.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            medicineUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : `${this.api}/medicine`\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_services/medicine.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { environment } from '../../environments/environment';\nimport { Observable } from 'rxjs';\nimport { Medicine } from '../_models';\n\n/**\n * Communication service for `/medicine` endpoint with standard CRUD functions.\n */\n@Injectable({ providedIn: 'root' })\nexport class MedicineService {\n\n  api: string = environment.apiLocal;\n  medicineUrl: string = `${this.api}/medicine`\n\n  constructor(private http: HttpClient) { }\n\n  getAll() {\n    return this.http.get(this.medicineUrl)\n  }\n\n  addNewMedicine(medicine: Medicine) {\n      return this.http.post(this.medicineUrl, medicine);\n  }\n\n  deleteMedicine(medicineId: Number): Observable {\n    return this.http.delete(`${this.medicineUrl}/${medicineId}`);\n  }\n\n  updateMedicine(medicineId: Number, medicine: Medicine): Observable {\n    return this.http.put(`${this.medicineUrl}/${medicineId}`, medicine);\n  }\n\n  autocomplete(value: String) {\n    console.log(value);\n    return this.http.get(`${this.medicineUrl}/search/${value}`);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavigationComponent.html":{"url":"components/NavigationComponent.html","title":"component - NavigationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavigationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/navigation/navigation.component.ts\n\n\n    \n        Description\n    \n    \n        A persistent template component.\nEvery other component gets rendered inside NavigationComponent.\nObserves screen size to dynamically toggle the side navigation menu.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navigation\n            \n\n            \n                styleUrls\n                ./navigation.component.css\n            \n\n\n\n            \n                templateUrl\n                ./navigation.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isSmallScreen$\n                            \n                            \n                                loggedIn\n                            \n                            \n                                sidenav\n                            \n                            \n                                sidenavDynamic\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleUserButton\n                            \n                            \n                                toggleSidenav\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(breakpointObserver: BreakpointObserver, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/navigation/navigation.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        breakpointObserver\n                                                  \n                                                        \n                                                                    BreakpointObserver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleUserButton\n                        \n                        \n                    \n                \n            \n            \n                \nhandleUserButton()\n                \n            \n\n\n            \n                \n                    Defined in src/app/navigation/navigation.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleSidenav\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleSidenav()\n                \n            \n\n\n            \n                \n                    Defined in src/app/navigation/navigation.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSmallScreen$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.breakpointObserver.observe([Breakpoints.XSmall, Breakpoints.Small, Breakpoints.Medium])\n    .pipe(\n      map(result => {\n        this.sidenavDynamic = result.matches;\n        return result.matches;\n      })\n    )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/navigation/navigation.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loggedIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/navigation/navigation.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sidenav\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSidenav\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatSidenav)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/navigation/navigation.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sidenavDynamic\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/navigation/navigation.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, filter } from 'rxjs/operators';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { MatSidenav } from '@angular/material';\n\n/**\n * A persistent template component.\n * \n * Every other component gets rendered inside `NavigationComponent`.\n * \n * Observes screen size to dynamically toggle the side navigation menu.\n */\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent {\n\n  @ViewChild(MatSidenav) sidenav: MatSidenav;\n  sidenavDynamic = false;\n  loggedIn = false;\n\n  isSmallScreen$: Observable = this.breakpointObserver.observe([Breakpoints.XSmall, Breakpoints.Small, Breakpoints.Medium])\n    .pipe(\n      map(result => {\n        this.sidenavDynamic = result.matches;\n        return result.matches;\n      })\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver, private router: Router) {\n    router.events.pipe(\n      filter(event => event instanceof NavigationEnd)\n    ).subscribe((event: NavigationEnd) => {\n      if (event.url.startsWith('/login')) {\n        this.loggedIn = false;\n      } else {\n        this.loggedIn = true;\n      }\n    });\n  }\n\n  handleUserButton() {\n\n  }\n\n  toggleSidenav() {\n    if (this.sidenavDynamic)\n      this.sidenav.toggle();\n  }\n\n}\n\n    \n\n    \n        \n  \n    Test Praxis\n    \n      homeTerminkalender\n      peoplePatient/-in\n      alarmTermin\n      receiptRezept\n      local_pharmacyMedikament\n    \n  \n  \n    \n      \n        menu\n      \n      local_hospital\n      Termin App\n      \n      \n        more_vert\n      \n      \n        \n          person\n          User\n        \n        \n          cancel\n          Logout\n        \n      \n    \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./navigation.component.css\n                \n                .sidenav-container {\n  height: 100%;\n}\n\n.sidenav {\n  width: 200px;\n}\n\n.sidenav .mat-toolbar {\n  background: inherit;\n}\n\n.sidenav-icon {\n  margin-right: 14px;\n}\n\n.mat-toolbar.mat-primary {\n  position: sticky;\n  top: 0;\n  z-index: 1;\n}\n\n.toolbar-spacer {\n  flex: 1 1 auto;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Test Praxis          homeTerminkalender      peoplePatient/-in      alarmTermin      receiptRezept      local_pharmacyMedikament                          menu            local_hospital      Termin App                    more_vert                              person          User                          cancel          Logout                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppointmentComponent', 'selector': 'app-appointment'},{'name': 'BottomSheetComponent', 'selector': 'app-bottom-sheet'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'ContentCardComponent', 'selector': 'app-content-card'},{'name': 'DatetimepickerComponent', 'selector': 'app-datetimepicker'},{'name': 'FormAppointmentAddNoteComponent', 'selector': 'app-form-appointment-add-note'},{'name': 'FormDeleteAppointmentComponent', 'selector': 'app-form-delete-appointment'},{'name': 'FormDeletePatientComponent', 'selector': 'app-form-delete-patient'},{'name': 'FormNewAppointmentComponent', 'selector': 'app-form-new-appointment'},{'name': 'FormNewPatientComponent', 'selector': 'app-form-new-patient'},{'name': 'FormNewPrescriptionComponent', 'selector': 'app-form-new-prescription'},{'name': 'HomeComponent', 'selector': 'home-component'},{'name': 'ListComponent', 'selector': 'list-component'},{'name': 'LoginComponent', 'selector': ''},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PatientComponent', 'selector': 'app-patient'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavigationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Patient.html":{"url":"classes/Patient.html","title":"class - Patient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Patient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/patient.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                appointments\n                            \n                            \n                                dateOfBirth\n                            \n                            \n                                diseaseIdList\n                            \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                gender\n                            \n                            \n                                id\n                            \n                            \n                                insuranceNumber\n                            \n                            \n                                lastName\n                            \n                            \n                                phoneNumber\n                            \n                            \n                                prescriptions\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Address\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/patient.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            appointments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/patient.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateOfBirth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/patient.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            diseaseIdList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/patient.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/patient.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/patient.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gender\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/patient.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/patient.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            insuranceNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/patient.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/patient.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phoneNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/patient.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            prescriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/patient.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Address } from './address';\nimport { Appointment } from './appointment';\nimport { Prescription } from './prescription';\n\nexport class Patient {\n    id: number;\n    firstName: string;\n    lastName: string;\n    gender: string;\n    email: string;\n    phoneNumber: string;\n    insuranceNumber: string;\n    dateOfBirth: string;\n    address: Address;\n    appointments: Array;\n    prescriptions: Array;\n    diseaseIdList: String;\n}\n\nexport const PatientColumns = [\n    {\n        id: \"insuranceNumber\",\n        value: \"#\"\n    },\n    {\n        id: \"firstName\",\n        value: \"Vorname\"\n    },\n    {\n        id: \"lastName\",\n        value: \"Name\"\n    },\n    {\n        id: \"gender\",\n        value: \"Geschlecht\"\n    },\n    {\n        id: \"dateOfBirth\",\n        value: \"Geburtsdatum\"\n    }\n];\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PatientComponent.html":{"url":"components/PatientComponent.html","title":"component - PatientComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PatientComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/patient/patient.component.ts\n\n\n    \n        Description\n    \n    \n        Renders a list of patients.\nCan dynamically render bottom sheet menu and dialog components for Patient business logic.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-patient\n            \n\n            \n                styleUrls\n                ./patient.component.css\n            \n\n\n\n            \n                templateUrl\n                ./patient.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                listColumns\n                            \n                            \n                                listRef\n                            \n                            \n                                patientObservable\n                            \n                            \n                                selectedPatient\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleBottomSheetButton\n                            \n                            \n                                handleFabButtonOnClick\n                            \n                            \n                                handlePatientOnClick\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openBottomSheet\n                            \n                            \n                                openDeletePatientDialog\n                            \n                            \n                                openNewAppointmentDialog\n                            \n                            \n                                openNewPatientDialog\n                            \n                            \n                                openNewPrescriptionDialog\n                            \n                            \n                                    Async\n                                openUpdatePatientDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(patientService: PatientService, bottomSheet: MatBottomSheet, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/patient/patient.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        patientService\n                                                  \n                                                        \n                                                                        PatientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bottomSheet\n                                                  \n                                                        \n                                                                    MatBottomSheet\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleBottomSheetButton\n                        \n                        \n                    \n                \n            \n            \n                \nhandleBottomSheetButton(buttonId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/patient/patient.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    buttonId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleFabButtonOnClick\n                        \n                        \n                    \n                \n            \n            \n                \nhandleFabButtonOnClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/patient/patient.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handlePatientOnClick\n                        \n                        \n                    \n                \n            \n            \n                \nhandlePatientOnClick(e)\n                \n            \n\n\n            \n                \n                    Defined in src/app/patient/patient.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/patient/patient.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openBottomSheet\n                        \n                        \n                    \n                \n            \n            \n                \nopenBottomSheet()\n                \n            \n\n\n            \n                \n                    Defined in src/app/patient/patient.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDeletePatientDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenDeletePatientDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/patient/patient.component.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openNewAppointmentDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenNewAppointmentDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/patient/patient.component.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openNewPatientDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenNewPatientDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/patient/patient.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openNewPrescriptionDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenNewPrescriptionDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/patient/patient.component.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            openUpdatePatientDialog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    openUpdatePatientDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/patient/patient.component.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : PatientColumns\n                        \n                    \n                        \n                            \n                                    Defined in src/app/patient/patient.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ListComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(ListComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/patient/patient.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            patientObservable\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/patient/patient.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedPatient\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/patient/patient.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\n\nimport { MatBottomSheet, MatDialog } from '@angular/material';\n\nimport { PatientColumns } from '../_models';\nimport { PatientService } from '../_services';\nimport { BottomSheetComponent } from '../bottom-sheet/bottom-sheet.component';\nimport { FormNewAppointmentComponent } from '../form-new-appointment/form-new-appointment.component';\nimport { FormNewPatientComponent } from '../form-new-patient/form-new-patient.component';\nimport { FormDeletePatientComponent } from '../form-delete-patient/form-delete-patient.component';\nimport { ListComponent } from '../list/list.component';\nimport { FormNewPrescriptionComponent } from '../form-new-prescription/form-new-prescription.component';\n\n/**\n * Renders a list of patients.\n * \n * Can dynamically render bottom sheet menu and dialog components for `Patient` business logic.\n */\n@Component({\n  selector: 'app-patient',\n  templateUrl: './patient.component.html',\n  styleUrls: ['./patient.component.css']\n})\nexport class PatientComponent implements OnInit {\n\n  selectedPatient;\n  patientObservable;\n  listColumns = PatientColumns;\n\n  @ViewChild(ListComponent) listRef: ListComponent;\n\n  constructor(\n    private patientService: PatientService,\n    private bottomSheet: MatBottomSheet,\n    private dialog: MatDialog) {\n    this.patientObservable = patientService.getAll();\n  }\n\n  ngOnInit() {\n\n  }\n\n  handlePatientOnClick(e) {\n    this.selectedPatient = e;\n    this.openBottomSheet();\n  }\n\n  openBottomSheet() {\n    const sheet = this.bottomSheet.open(BottomSheetComponent, {\n      hasBackdrop: true,\n      data: {\n        buttons: [\n          {\n            \"id\": \"add_appointment\",\n            \"icon\": \"alarm_add\",\n            \"text\": \"Neuen Termin...\",\n            \"description\": `Einen neuen Termin vereinbaren`\n          },\n          {\n            \"id\": \"add_prescription\",\n            \"icon\": \"receipt\",\n            \"text\": \"Neues Rezept...\",\n            \"description\": `Ein neues Rezept hinzufügen`\n          },\n          {\n            \"id\": \"update_patient\",\n            \"icon\": \"edit\",\n            \"text\": \"Bearbeiten...\",\n            \"description\": `Information bearbeiten`\n          },\n          {\n            \"id\": \"delete_patient\",\n            \"icon\": \"person_add_disabled\",\n            \"text\": \"Daten löschen...\",\n            \"description\": `Alle Daten von ${this.selectedPatient.firstName} ${this.selectedPatient.lastName} löschen`\n          }\n        ],\n        title: `${this.selectedPatient.firstName} ${this.selectedPatient.lastName}`\n      }\n    });\n    sheet.afterDismissed().subscribe((buttonId) => {\n      this.handleBottomSheetButton(buttonId);\n    });\n  }\n\n  handleBottomSheetButton(buttonId) {\n    switch(buttonId) {\n      case 'add_appointment':\n        this.openNewAppointmentDialog();\n        break;\n      case 'add_prescription':\n        this.openNewPrescriptionDialog();\n        break;\n      case 'delete_patient':\n        this.openDeletePatientDialog();\n        break;\n      case 'update_patient':\n        this.openUpdatePatientDialog();\n      default:\n        break;\n    }\n  }\n\n  handleFabButtonOnClick() {\n    this.openNewPatientDialog();\n  }\n\n  openNewAppointmentDialog() {\n    const dialogRef = this.dialog.open(FormNewAppointmentComponent, {\n      data: {\n        id: this.selectedPatient.id,\n        patientName: `${this.selectedPatient.firstName} ${this.selectedPatient.lastName}`\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      // console.log(result);\n    });\n  }\n\n  openNewPatientDialog() {\n    const dialogRef = this.dialog.open(FormNewPatientComponent, {\n      data: {}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      // To refresh the list\n      this.listRef.refreshList();\n    });\n  }\n\n  async openUpdatePatientDialog() {\n    const patient = await this.patientService.getPatient(this.selectedPatient.id).toPromise();\n    ['appointments', 'diseases', 'prescriptions'].forEach(key => delete patient[key])\n    const dialogRef = this.dialog.open(FormNewPatientComponent, {\n      data: { patient }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      // To refresh the list\n      this.listRef.refreshList();\n    });\n  }\n\n  openDeletePatientDialog() {\n    const dialogRef = this.dialog.open(FormDeletePatientComponent, {\n      data: {\n        id: this.selectedPatient.id,\n        patientName: `${this.selectedPatient.firstName} ${this.selectedPatient.lastName}`\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      // To refresh the list\n      this.listRef.refreshList();\n    });\n  }\n\n  openNewPrescriptionDialog() {\n    const dialogRef = this.dialog.open(FormNewPrescriptionComponent, {\n      data: {\n        id: this.selectedPatient.id,\n        patientName: `${this.selectedPatient.firstName} ${this.selectedPatient.lastName}`\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      // To refresh the list\n      this.listRef.refreshList();\n    });\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n\n    \n\n    \n                \n                    ./patient.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppointmentComponent', 'selector': 'app-appointment'},{'name': 'BottomSheetComponent', 'selector': 'app-bottom-sheet'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'ContentCardComponent', 'selector': 'app-content-card'},{'name': 'DatetimepickerComponent', 'selector': 'app-datetimepicker'},{'name': 'FormAppointmentAddNoteComponent', 'selector': 'app-form-appointment-add-note'},{'name': 'FormDeleteAppointmentComponent', 'selector': 'app-form-delete-appointment'},{'name': 'FormDeletePatientComponent', 'selector': 'app-form-delete-patient'},{'name': 'FormNewAppointmentComponent', 'selector': 'app-form-new-appointment'},{'name': 'FormNewPatientComponent', 'selector': 'app-form-new-patient'},{'name': 'FormNewPrescriptionComponent', 'selector': 'app-form-new-prescription'},{'name': 'HomeComponent', 'selector': 'home-component'},{'name': 'ListComponent', 'selector': 'list-component'},{'name': 'LoginComponent', 'selector': ''},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PatientComponent', 'selector': 'app-patient'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PatientComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PatientService.html":{"url":"injectables/PatientService.html","title":"injectable - PatientService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PatientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_services/patient.service.ts\n        \n\n            \n                Description\n            \n            \n                Communication service for /patient endpoint with standard CRUD functions.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                patientUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addAppointment\n                            \n                            \n                                addNewPatient\n                            \n                            \n                                checkUniqueValue\n                            \n                            \n                                deletePatient\n                            \n                            \n                                getAll\n                            \n                            \n                                getPatient\n                            \n                            \n                                updatePatient\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/_services/patient.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addAppointment\n                        \n                        \n                    \n                \n            \n            \n                \naddAppointment(patientId: Number, appointment: Appointment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/patient.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    patientId\n                                    \n                                                Number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    appointment\n                                    \n                                                Appointment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addNewPatient\n                        \n                        \n                    \n                \n            \n            \n                \naddNewPatient(patient: Patient)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/patient.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    patient\n                                    \n                                                Patient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkUniqueValue\n                        \n                        \n                    \n                \n            \n            \n                \ncheckUniqueValue(value: string, type: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/patient.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deletePatient\n                        \n                        \n                    \n                \n            \n            \n                \ndeletePatient(patientId: Number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/patient.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    patientId\n                                    \n                                                Number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/patient.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPatient\n                        \n                        \n                    \n                \n            \n            \n                \ngetPatient(patientId: Number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/patient.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    patientId\n                                    \n                                                Number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updatePatient\n                        \n                        \n                    \n                \n            \n            \n                \nupdatePatient(patientId: Number, patient: Patient)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/patient.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    patientId\n                                    \n                                                Number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    patient\n                                    \n                                                Patient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            api\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : environment.apiLocal\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_services/patient.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            patientUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : `${this.api}/patient`\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_services/patient.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Patient, Appointment } from '../_models';\nimport { Observable } from 'rxjs';\n\nimport { environment } from '../../environments/environment';\n\n/**\n * Communication service for `/patient` endpoint with standard CRUD functions.\n */\n@Injectable({ providedIn: 'root' })\nexport class PatientService {\n\n  // patientUrl = \"https://termin-api.herokuapp.com/api/patient\";\n  api: string = environment.apiLocal;\n\n  patientUrl: string = `${this.api}/patient`;\n\n  constructor(private http: HttpClient) { }\n\n  getAll() {\n    return this.http.get(this.patientUrl);\n  }\n\n  getPatient(patientId: Number) {\n    return this.http.get(`${this.patientUrl}/${patientId}`);\n  }\n\n  addAppointment(patientId: Number, appointment: Appointment): Observable {\n    return this.http.post(`${this.patientUrl}/${patientId}/appointment`, appointment);\n  }\n\n  addNewPatient(patient: Patient): Observable {\n    console.log(patient)\n    return this.http.post(`${this.patientUrl}`, patient);\n  }\n\n  updatePatient(patientId: Number, patient: Patient): Observable {\n    return this.http.put(`${this.patientUrl}/${patientId}`, patient);\n  }\n\n  deletePatient(patientId: Number): Observable {\n    return this.http.delete(`${this.patientUrl}/${patientId}`);\n  }\n\n  checkUniqueValue(value: string, type: string) {\n    const reqBody = {\n      \"type\": type,\n      \"value\": value\n    }\n    return this.http.post(`${this.patientUrl}/check`, reqBody);\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Prescription.html":{"url":"classes/Prescription.html","title":"class - Prescription","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Prescription\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/prescription.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                datetime\n                            \n                            \n                                id\n                            \n                            \n                                medicine\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/_models/prescription.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            datetime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/prescription.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/prescription.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            medicine\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/prescription.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Medicine } from './medicine';\n\nexport class Prescription {\n    id: Number;\n    datetime: Date;\n    medicine: Array;\n    constructor() {\n        // Initialize an empty array\n        this.medicine = new Array();\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/RequestInterceptor.html":{"url":"interceptors/RequestInterceptor.html","title":"interceptor - RequestInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  RequestInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_helpers/request.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                Interceptor to manipulate headers on requests.\nSets Authorization header on all requests.\nSets Content-Type header on POST and PUT requests.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_helpers/request.interceptor.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n/**\n * Interceptor to manipulate headers on requests.\n * \n * Sets `Authorization` header on all requests.\n * Sets `Content-Type` header on `POST` and `PUT` requests.\n */\n@Injectable()\nexport class RequestInterceptor implements HttpInterceptor {\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    // Add authorization header with basic auth credentials if available\n    let currentUser = localStorage.getItem('currentUser');\n    if (currentUser) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Basic ${currentUser}`\n        }\n      });\n    }\n\n    // Add Content-Type to post requests\n    if (['POST', 'PUT'].includes(request.method)) {\n      request = request.clone({\n        setHeaders: {\n          'Content-Type': 'application/json'\n        }\n      });\n    }\n\n    return next.handle(request);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/user.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/user.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/user.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/user.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n    id: number;\n    username: string;\n    password: string;\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_services/user.service.ts\n        \n\n            \n                Description\n            \n            \n                Communication service for /user endpoint.\n/user endpoint acts like an auth endpoint on backend server.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/_services/user.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/user.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            api\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : environment.apiLocal\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_services/user.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { User } from '../_models';\n\nimport { environment } from '../../environments/environment';\n\n/**\n * Communication service for `/user` endpoint.\n * `/user` endpoint acts like an auth endpoint on backend server.\n */\n@Injectable({ providedIn: 'root' })\nexport class UserService {\n\n    api: string = environment.apiLocal;\n\n    constructor(private http: HttpClient) { }\n\n    getAll() {\n        // A test request to verify data response\n        // Any valid request would do\n        return this.http.get(`${this.api}/patient`)\n    }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidateUniqueValues.html":{"url":"classes/ValidateUniqueValues.html","title":"class - ValidateUniqueValues","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidateUniqueValues\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/validators/GenericBackendValidator.ts\n        \n\n            \n                Description\n            \n            \n                Server-side unique value validation controller.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createValidator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            createValidator\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createValidator(patientService: PatientService, type: string, valueToExclude: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/validators/GenericBackendValidator.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    patientService\n                                    \n                                                PatientService\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    valueToExclude\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     (control: any) => any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractControl } from '@angular/forms';\nimport { map, switchMapTo } from 'rxjs/operators';\nimport { PatientService } from '../_services';\nimport { timer } from 'rxjs';\n\n/**\n * Server-side unique value validation controller.\n */\nexport class ValidateUniqueValues {\n  static createValidator(patientService: PatientService, type: string, valueToExclude: string = '') {\n    return (control: AbstractControl) => {\n      // Angular unsubscribes to the previous Observable before calling the validator function and subscribing to the new Observable.\n      // timer returns cold Observable, as the Observable is unsubscribed when a new value is sent for checking,\n      // the timeout is cleared before the call is made and the input gets effectively debounced before validation check.\n      return timer(500).pipe(\n        switchMapTo(patientService.checkUniqueValue(control.value, type)),\n        map(res => {\n          // Return directly when value is to be excluded\n          if (control.value === valueToExclude) { return null}\n          return res[\"isUnique\"] ? null : { notUnique: true }\n        })\n      )\n    }\n  }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/_guards/auth.guards.ts\n            \n            guard\n            AuthGuard\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/_helpers/error.interceptor.ts\n            \n            interceptor\n            ErrorInterceptor\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/_helpers/request.interceptor.ts\n            \n            interceptor\n            RequestInterceptor\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/_models/address.ts\n            \n            class\n            Address\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/_models/appointment-record.ts\n            \n            class\n            AppointmentRecord\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/_models/appointment.ts\n            \n            class\n            Appointment\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/_models/appointment.ts\n            \n            variable\n            AppointmentColumns\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/_models/disease.ts\n            \n            class\n            Disease\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/_models/medicine.ts\n            \n            class\n            Medicine\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/_models/patient.ts\n            \n            class\n            Patient\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/_models/patient.ts\n            \n            variable\n            PatientColumns\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/_models/prescription.ts\n            \n            class\n            Prescription\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/_models/user.ts\n            \n            class\n            User\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/_services/appointment.service.ts\n            \n            injectable\n            AppointmentService\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/_services/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/_services/medicine.service.ts\n            \n            injectable\n            MedicineService\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/_services/patient.service.ts\n            \n            injectable\n            PatientService\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/app/_services/user.service.ts\n            \n            injectable\n            UserService\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            variable\n            DATE_FORMATS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.routing.ts\n            \n            variable\n            routing\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/appointment/appointment.component.ts\n            \n            component\n            AppointmentComponent\n            \n                7 %\n                (1/13)\n            \n        \n        \n            \n                \n                src/app/bottom-sheet/bottom-sheet.component.ts\n            \n            component\n            BottomSheetComponent\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/calendar/calendar.component.ts\n            \n            component\n            CalendarComponent\n            \n                5 %\n                (1/17)\n            \n        \n        \n            \n                \n                src/app/calendar/calendar.component.ts\n            \n            variable\n            colors\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/calendar/calendar.component.ts\n            \n            variable\n            moment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/calendar/custom-date-formatter.provider.ts\n            \n            class\n            CustomDateFormatter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/content-card/content-card.component.ts\n            \n            component\n            ContentCardComponent\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/app/datetimepicker/datetimepicker.component.ts\n            \n            component\n            DatetimepickerComponent\n            \n                25 %\n                (5/20)\n            \n        \n        \n            \n                \n                src/app/datetimepicker/datetimepicker.component.ts\n            \n            class\n            DateConfig\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/datetimepicker/datetimepicker.component.ts\n            \n            variable\n            moment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/form-appointment-add-note/form-appointment-add-note.component.ts\n            \n            component\n            FormAppointmentAddNoteComponent\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/form-delete-appointment/form-delete-appointment.component.ts\n            \n            component\n            FormDeleteAppointmentComponent\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/form-delete-patient/form-delete-patient.component.ts\n            \n            component\n            FormDeletePatientComponent\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/form-new-appointment/form-new-appointment.component.ts\n            \n            component\n            FormNewAppointmentComponent\n            \n                5 %\n                (1/20)\n            \n        \n        \n            \n                \n                src/app/form-new-appointment/form-new-appointment.component.ts\n            \n            variable\n            moment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/form-new-patient/form-new-patient.component.ts\n            \n            component\n            FormNewPatientComponent\n            \n                5 %\n                (1/17)\n            \n        \n        \n            \n                \n                src/app/form-new-patient/form-new-patient.component.ts\n            \n            variable\n            moment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/form-new-prescription/form-new-prescription.component.ts\n            \n            component\n            FormNewPrescriptionComponent\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/form-new-prescription/form-new-prescription.component.ts\n            \n            variable\n            moment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/list/german-paginator-intl.ts\n            \n            function\n            getGermanPaginatorIntl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/list/german-paginator-intl.ts\n            \n            variable\n            germanRangeLabel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/list/list.component.ts\n            \n            component\n            ListComponent\n            \n                5 %\n                (1/20)\n            \n        \n        \n            \n                \n                src/app/list/list.component.ts\n            \n            variable\n            moment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/navigation/navigation.component.ts\n            \n            component\n            NavigationComponent\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/patient/patient.component.ts\n            \n            component\n            PatientComponent\n            \n                6 %\n                (1/16)\n            \n        \n        \n            \n                \n                src/app/validators/GenericBackendValidator.ts\n            \n            class\n            ValidateUniqueValues\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~7.2.0\n        \n            @angular/cdk : ~7.3.7\n        \n            @angular/common : ~7.2.0\n        \n            @angular/compiler : ~7.2.0\n        \n            @angular/core : ~7.2.0\n        \n            @angular/forms : ~7.2.0\n        \n            @angular/material : ^7.3.7\n        \n            @angular/material-moment-adapter : ^7.3.7\n        \n            @angular/platform-browser : ~7.2.0\n        \n            @angular/platform-browser-dynamic : ~7.2.0\n        \n            @angular/router : ~7.2.0\n        \n            angular-calendar : ^0.27.9\n        \n            core-js : ^2.5.4\n        \n            date-fns : ^1.30.1\n        \n            hammerjs : ^2.0.8\n        \n            luxon : ^1.15.0\n        \n            moment : ^2.24.0\n        \n            ngx-material-timepicker : ^3.1.0\n        \n            rxjs : ~6.3.3\n        \n            tslib : ^1.9.0\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            getGermanPaginatorIntl   (src/.../german-paginator-intl.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/list/german-paginator-intl.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getGermanPaginatorIntl\n                        \n                        \n                    \n                \n            \n            \n                \ngetGermanPaginatorIntl()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nTermin App\nA Web App for patient/appointment management.\nComponents\nNavigation\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_AppComponent_providers\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppointmentComponent\n\nAppointmentComponent\n\nAppModule -->\n\nAppointmentComponent->AppModule\n\n\n\n\n\nBottomSheetComponent\n\nBottomSheetComponent\n\nAppModule -->\n\nBottomSheetComponent->AppModule\n\n\n\n\n\nCalendarComponent\n\nCalendarComponent\n\nAppModule -->\n\nCalendarComponent->AppModule\n\n\n\n\n\nContentCardComponent\n\nContentCardComponent\n\nAppModule -->\n\nContentCardComponent->AppModule\n\n\n\n\n\nDatetimepickerComponent\n\nDatetimepickerComponent\n\nAppModule -->\n\nDatetimepickerComponent->AppModule\n\n\n\n\n\nFormAppointmentAddNoteComponent\n\nFormAppointmentAddNoteComponent\n\nAppModule -->\n\nFormAppointmentAddNoteComponent->AppModule\n\n\n\n\n\nFormDeleteAppointmentComponent\n\nFormDeleteAppointmentComponent\n\nAppModule -->\n\nFormDeleteAppointmentComponent->AppModule\n\n\n\n\n\nFormDeletePatientComponent\n\nFormDeletePatientComponent\n\nAppModule -->\n\nFormDeletePatientComponent->AppModule\n\n\n\n\n\nFormNewAppointmentComponent\n\nFormNewAppointmentComponent\n\nAppModule -->\n\nFormNewAppointmentComponent->AppModule\n\n\n\n\n\nFormNewPatientComponent\n\nFormNewPatientComponent\n\nAppModule -->\n\nFormNewPatientComponent->AppModule\n\n\n\n\n\nFormNewPrescriptionComponent\n\nFormNewPrescriptionComponent\n\nAppModule -->\n\nFormNewPrescriptionComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nListComponent\n\nListComponent\n\nAppModule -->\n\nListComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNavigationComponent\n\nNavigationComponent\n\nAppModule -->\n\nNavigationComponent->AppModule\n\n\n\n\n\nPatientComponent\n\nPatientComponent\n\nAppModule -->\n\nPatientComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n{ provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] }\n\n{ provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] }\n\nAppComponent -->\n\n{ provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] }->AppComponent\n\n\n\n\n\n{ provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS }\n\n{ provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS }\n\nAppComponent -->\n\n{ provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS }->AppComponent\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nRequestInterceptor\n\nRequestInterceptor\n\nAppModule -->\n\nRequestInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    17 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    11 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\n\n30 Min interval in CalendarDayView\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AppointmentColumns   (src/.../appointment.ts)\n                        \n                        \n                            colors   (src/.../calendar.component.ts)\n                        \n                        \n                            DATE_FORMATS   (src/.../app.module.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            germanRangeLabel   (src/.../german-paginator-intl.ts)\n                        \n                        \n                            moment   (src/.../form-new-appointment.component.ts)\n                        \n                        \n                            moment   (src/.../datetimepicker.component.ts)\n                        \n                        \n                            moment   (src/.../form-new-patient.component.ts)\n                        \n                        \n                            moment   (src/.../form-new-prescription.component.ts)\n                        \n                        \n                            moment   (src/.../calendar.component.ts)\n                        \n                        \n                            moment   (src/.../list.component.ts)\n                        \n                        \n                            PatientColumns   (src/.../patient.ts)\n                        \n                        \n                            routing   (src/.../app.routing.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/_models/appointment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AppointmentColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        id: \"id\",\n        value: \"#\"\n    },\n    {\n        id: \"firstName\",\n        value: \"Vorname\"\n    },\n    {\n        id: \"lastName\",\n        value: \"Name\"\n    },\n    {\n        id: \"dateTime\",\n        value: \"Datum\"\n    },\n    {\n        id: \"description\",\n        value: \"Beschwerde\"\n    },\n]\n                        \n                    \n\n\n            \n        \n\n    src/app/calendar/calendar.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            colors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  red: {\n    primary: '#ad2121',\n    secondary: '#FAE3E3'\n  },\n  blue: {\n    primary: '#1e90ff',\n    secondary: '#D1E8FF'\n  },\n  yellow: {\n    primary: '#e3bc08',\n    secondary: '#FDF1BA'\n  }\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : _moment\n                        \n                    \n\n\n            \n        \n\n    src/app/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DATE_FORMATS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  parse: {\n    dateInput: 'DD.MM.YYYY',\n  },\n  display: {\n    dateInput: 'DD.MM.YYYY',\n    monthYearLabel: 'MMM YYYY',\n    dateA11yLabel: 'LL',\n    monthYearA11yLabel: 'MMMM YYYY',\n  },\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  apiRemote: 'https://termin-api.herokuapp.com/api',\n  apiLocal: 'http://localhost:8080/api',\n  apiLAN: 'http://192.168.0.31:8080/api'\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/list/german-paginator-intl.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            germanRangeLabel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (page: number, pageSize: number, length: number) => {\n  if (length == 0 || pageSize == 0) { return `0 von ${length}`; }\n  \n  length = Math.max(length, 0);\n\n  const startIndex = page * pageSize;\n\n  // If the start index exceeds the list length, do not try and fix the end index to the end.\n  const endIndex = startIndex \n                        \n                    \n\n\n            \n        \n\n    src/app/form-new-appointment/form-new-appointment.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            moment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : _moment\n                        \n                    \n\n\n            \n        \n\n    src/app/datetimepicker/datetimepicker.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            moment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : moment_\n                        \n                    \n\n\n            \n        \n\n    src/app/form-new-patient/form-new-patient.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            moment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : _moment\n                        \n                    \n\n\n            \n        \n\n    src/app/form-new-prescription/form-new-prescription.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            moment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : _moment\n                        \n                    \n\n\n            \n        \n\n    src/app/list/list.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            moment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : _moment\n                        \n                    \n\n\n            \n        \n\n    src/app/_models/patient.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            PatientColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        id: \"insuranceNumber\",\n        value: \"#\"\n    },\n    {\n        id: \"firstName\",\n        value: \"Vorname\"\n    },\n    {\n        id: \"lastName\",\n        value: \"Name\"\n    },\n    {\n        id: \"gender\",\n        value: \"Geschlecht\"\n    },\n    {\n        id: \"dateOfBirth\",\n        value: \"Geburtsdatum\"\n    }\n]\n                        \n                    \n\n\n            \n        \n\n    src/app/app.routing.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            routing\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : RouterModule.forRoot(APP_ROUTES)\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
